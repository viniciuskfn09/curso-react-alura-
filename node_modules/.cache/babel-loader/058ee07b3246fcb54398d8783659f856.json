{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { getYear, getMonth, getDate, getDaysInMonth } from '@wojtekmaj/date-utils';\nimport WeekNumber from './WeekNumber.js';\nimport Flex from '../Flex.js';\nimport { getBeginOfWeek, getDayOfWeek, getWeekNumber } from '../shared/dates.js';\nexport default function WeekNumbers(props) {\n  var activeStartDate = props.activeStartDate,\n      calendarType = props.calendarType,\n      onClickWeekNumber = props.onClickWeekNumber,\n      onMouseLeave = props.onMouseLeave,\n      showFixedNumberOfWeeks = props.showFixedNumberOfWeeks;\n\n  var numberOfWeeks = function () {\n    if (showFixedNumberOfWeeks) {\n      return 6;\n    }\n\n    var numberOfDays = getDaysInMonth(activeStartDate);\n    var startWeekday = getDayOfWeek(activeStartDate, calendarType);\n    var days = numberOfDays - (7 - startWeekday);\n    return 1 + Math.ceil(days / 7);\n  }();\n\n  var dates = function () {\n    var year = getYear(activeStartDate);\n    var monthIndex = getMonth(activeStartDate);\n    var day = getDate(activeStartDate);\n    var result = [];\n\n    for (var index = 0; index < numberOfWeeks; index += 1) {\n      result.push(getBeginOfWeek(new Date(year, monthIndex, day + index * 7), calendarType));\n    }\n\n    return result;\n  }();\n\n  var weekNumbers = dates.map(function (date) {\n    return getWeekNumber(date, calendarType);\n  });\n  return _jsx(Flex, {\n    className: \"react-calendar__month-view__weekNumbers\",\n    count: numberOfWeeks,\n    direction: \"column\",\n    onFocus: onMouseLeave,\n    onMouseOver: onMouseLeave,\n    style: {\n      flexBasis: 'calc(100% * (1 / 8)',\n      flexShrink: 0\n    },\n    children: weekNumbers.map(function (weekNumber, weekIndex) {\n      var date = dates[weekIndex];\n\n      if (!date) {\n        throw new Error('date is not defined');\n      }\n\n      return _jsx(WeekNumber, {\n        date: date,\n        onClickWeekNumber: onClickWeekNumber,\n        weekNumber: weekNumber\n      }, weekNumber);\n    })\n  });\n}","map":{"version":3,"sources":["C:/Users/Lenovo/Documents/REACT/curso-react-alura/node_modules/react-calendar/dist/esm/MonthView/WeekNumbers.js"],"names":["jsx","_jsx","getYear","getMonth","getDate","getDaysInMonth","WeekNumber","Flex","getBeginOfWeek","getDayOfWeek","getWeekNumber","WeekNumbers","props","activeStartDate","calendarType","onClickWeekNumber","onMouseLeave","showFixedNumberOfWeeks","numberOfWeeks","numberOfDays","startWeekday","days","Math","ceil","dates","year","monthIndex","day","result","index","push","Date","weekNumbers","map","date","className","count","direction","onFocus","onMouseOver","style","flexBasis","flexShrink","children","weekNumber","weekIndex","Error"],"mappings":"AAAA,SAASA,GAAG,IAAIC,IAAhB,QAA4B,mBAA5B;AACA,SAASC,OAAT,EAAkBC,QAAlB,EAA4BC,OAA5B,EAAqCC,cAArC,QAA2D,uBAA3D;AACA,OAAOC,UAAP,MAAuB,iBAAvB;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,SAASC,cAAT,EAAyBC,YAAzB,EAAuCC,aAAvC,QAA4D,oBAA5D;AACA,eAAe,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AACvC,MAAIC,eAAe,GAAGD,KAAK,CAACC,eAA5B;AAAA,MAA6CC,YAAY,GAAGF,KAAK,CAACE,YAAlE;AAAA,MAAgFC,iBAAiB,GAAGH,KAAK,CAACG,iBAA1G;AAAA,MAA6HC,YAAY,GAAGJ,KAAK,CAACI,YAAlJ;AAAA,MAAgKC,sBAAsB,GAAGL,KAAK,CAACK,sBAA/L;;AACA,MAAIC,aAAa,GAAI,YAAY;AAC7B,QAAID,sBAAJ,EAA4B;AACxB,aAAO,CAAP;AACH;;AACD,QAAIE,YAAY,GAAGd,cAAc,CAACQ,eAAD,CAAjC;AACA,QAAIO,YAAY,GAAGX,YAAY,CAACI,eAAD,EAAkBC,YAAlB,CAA/B;AACA,QAAIO,IAAI,GAAGF,YAAY,IAAI,IAAIC,YAAR,CAAvB;AACA,WAAO,IAAIE,IAAI,CAACC,IAAL,CAAUF,IAAI,GAAG,CAAjB,CAAX;AACH,GARmB,EAApB;;AASA,MAAIG,KAAK,GAAI,YAAY;AACrB,QAAIC,IAAI,GAAGvB,OAAO,CAACW,eAAD,CAAlB;AACA,QAAIa,UAAU,GAAGvB,QAAQ,CAACU,eAAD,CAAzB;AACA,QAAIc,GAAG,GAAGvB,OAAO,CAACS,eAAD,CAAjB;AACA,QAAIe,MAAM,GAAG,EAAb;;AACA,SAAK,IAAIC,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGX,aAA5B,EAA2CW,KAAK,IAAI,CAApD,EAAuD;AACnDD,MAAAA,MAAM,CAACE,IAAP,CAAYtB,cAAc,CAAC,IAAIuB,IAAJ,CAASN,IAAT,EAAeC,UAAf,EAA2BC,GAAG,GAAGE,KAAK,GAAG,CAAzC,CAAD,EAA8Cf,YAA9C,CAA1B;AACH;;AACD,WAAOc,MAAP;AACH,GATW,EAAZ;;AAUA,MAAII,WAAW,GAAGR,KAAK,CAACS,GAAN,CAAU,UAAUC,IAAV,EAAgB;AAAE,WAAOxB,aAAa,CAACwB,IAAD,EAAOpB,YAAP,CAApB;AAA2C,GAAvE,CAAlB;AACA,SAAQb,IAAI,CAACM,IAAD,EAAO;AAAE4B,IAAAA,SAAS,EAAE,yCAAb;AAAwDC,IAAAA,KAAK,EAAElB,aAA/D;AAA8EmB,IAAAA,SAAS,EAAE,QAAzF;AAAmGC,IAAAA,OAAO,EAAEtB,YAA5G;AAA0HuB,IAAAA,WAAW,EAAEvB,YAAvI;AAAqJwB,IAAAA,KAAK,EAAE;AAAEC,MAAAA,SAAS,EAAE,qBAAb;AAAoCC,MAAAA,UAAU,EAAE;AAAhD,KAA5J;AAAiNC,IAAAA,QAAQ,EAAEX,WAAW,CAACC,GAAZ,CAAgB,UAAUW,UAAV,EAAsBC,SAAtB,EAAiC;AACvR,UAAIX,IAAI,GAAGV,KAAK,CAACqB,SAAD,CAAhB;;AACA,UAAI,CAACX,IAAL,EAAW;AACP,cAAM,IAAIY,KAAJ,CAAU,qBAAV,CAAN;AACH;;AACD,aAAQ7C,IAAI,CAACK,UAAD,EAAa;AAAE4B,QAAAA,IAAI,EAAEA,IAAR;AAAcnB,QAAAA,iBAAiB,EAAEA,iBAAjC;AAAoD6B,QAAAA,UAAU,EAAEA;AAAhE,OAAb,EAA2FA,UAA3F,CAAZ;AACH,KANyO;AAA3N,GAAP,CAAZ;AAOH","sourcesContent":["import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { getYear, getMonth, getDate, getDaysInMonth } from '@wojtekmaj/date-utils';\nimport WeekNumber from './WeekNumber.js';\nimport Flex from '../Flex.js';\nimport { getBeginOfWeek, getDayOfWeek, getWeekNumber } from '../shared/dates.js';\nexport default function WeekNumbers(props) {\n    var activeStartDate = props.activeStartDate, calendarType = props.calendarType, onClickWeekNumber = props.onClickWeekNumber, onMouseLeave = props.onMouseLeave, showFixedNumberOfWeeks = props.showFixedNumberOfWeeks;\n    var numberOfWeeks = (function () {\n        if (showFixedNumberOfWeeks) {\n            return 6;\n        }\n        var numberOfDays = getDaysInMonth(activeStartDate);\n        var startWeekday = getDayOfWeek(activeStartDate, calendarType);\n        var days = numberOfDays - (7 - startWeekday);\n        return 1 + Math.ceil(days / 7);\n    })();\n    var dates = (function () {\n        var year = getYear(activeStartDate);\n        var monthIndex = getMonth(activeStartDate);\n        var day = getDate(activeStartDate);\n        var result = [];\n        for (var index = 0; index < numberOfWeeks; index += 1) {\n            result.push(getBeginOfWeek(new Date(year, monthIndex, day + index * 7), calendarType));\n        }\n        return result;\n    })();\n    var weekNumbers = dates.map(function (date) { return getWeekNumber(date, calendarType); });\n    return (_jsx(Flex, { className: \"react-calendar__month-view__weekNumbers\", count: numberOfWeeks, direction: \"column\", onFocus: onMouseLeave, onMouseOver: onMouseLeave, style: { flexBasis: 'calc(100% * (1 / 8)', flexShrink: 0 }, children: weekNumbers.map(function (weekNumber, weekIndex) {\n            var date = dates[weekIndex];\n            if (!date) {\n                throw new Error('date is not defined');\n            }\n            return (_jsx(WeekNumber, { date: date, onClickWeekNumber: onClickWeekNumber, weekNumber: weekNumber }, weekNumber));\n        }) }));\n}\n"]},"metadata":{},"sourceType":"module"}