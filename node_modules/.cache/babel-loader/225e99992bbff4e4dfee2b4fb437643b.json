{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\Lenovo\\\\Documents\\\\REACT\\\\curso-react-alura\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\Lenovo\\\\Documents\\\\REACT\\\\curso-react-alura\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\Users\\\\Lenovo\\\\Documents\\\\REACT\\\\curso-react-alura\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _slicedToArray from \"C:\\\\Users\\\\Lenovo\\\\Documents\\\\REACT\\\\curso-react-alura\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\n/**\n * React Router DOM v6.26.0\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { UNSAFE_mapRouteProperties, UNSAFE_DataRouterContext, UNSAFE_DataRouterStateContext, Router, UNSAFE_useRoutesImpl, UNSAFE_NavigationContext, useHref, useResolvedPath, useLocation, useNavigate, createPath, UNSAFE_useRouteId, UNSAFE_RouteContext, useMatches, useNavigation, useBlocker } from 'react-router';\nexport { AbortedDeferredError, Await, MemoryRouter, Navigate, NavigationType, Outlet, Route, Router, Routes, UNSAFE_DataRouterContext, UNSAFE_DataRouterStateContext, UNSAFE_LocationContext, UNSAFE_NavigationContext, UNSAFE_RouteContext, UNSAFE_useRouteId, createMemoryRouter, createPath, createRoutesFromChildren, createRoutesFromElements, defer, generatePath, isRouteErrorResponse, json, matchPath, matchRoutes, parsePath, redirect, redirectDocument, renderMatches, replace, resolvePath, useActionData, useAsyncError, useAsyncValue, useBlocker, useHref, useInRouterContext, useLoaderData, useLocation, useMatch, useMatches, useNavigate, useNavigation, useNavigationType, useOutlet, useOutletContext, useParams, useResolvedPath, useRevalidator, useRouteError, useRouteLoaderData, useRoutes } from 'react-router';\nimport { stripBasename, UNSAFE_warning, createRouter, createBrowserHistory, createHashHistory, UNSAFE_ErrorResponseImpl, UNSAFE_invariant, joinPaths, IDLE_FETCHER, matchPath } from '@remix-run/router';\nexport { UNSAFE_ErrorResponseImpl } from '@remix-run/router';\n\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nvar defaultMethod = \"get\";\nvar defaultEncType = \"application/x-www-form-urlencoded\";\n\nfunction isHtmlElement(object) {\n  return object != null && typeof object.tagName === \"string\";\n}\n\nfunction isButtonElement(object) {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"button\";\n}\n\nfunction isFormElement(object) {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"form\";\n}\n\nfunction isInputElement(object) {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"input\";\n}\n\nfunction isModifiedEvent(event) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n}\n\nfunction shouldProcessLinkClick(event, target) {\n  return event.button === 0 && ( // Ignore everything but left clicks\n  !target || target === \"_self\") && // Let browser handle \"target=_blank\" etc.\n  !isModifiedEvent(event) // Ignore clicks with modifier keys\n  ;\n}\n/**\n * Creates a URLSearchParams object using the given initializer.\n *\n * This is identical to `new URLSearchParams(init)` except it also\n * supports arrays as values in the object form of the initializer\n * instead of just strings. This is convenient when you need multiple\n * values for a given key, but don't want to use an array initializer.\n *\n * For example, instead of:\n *\n *   let searchParams = new URLSearchParams([\n *     ['sort', 'name'],\n *     ['sort', 'price']\n *   ]);\n *\n * you can do:\n *\n *   let searchParams = createSearchParams({\n *     sort: ['name', 'price']\n *   });\n */\n\n\nfunction createSearchParams(init) {\n  if (init === void 0) {\n    init = \"\";\n  }\n\n  return new URLSearchParams(typeof init === \"string\" || Array.isArray(init) || init instanceof URLSearchParams ? init : Object.keys(init).reduce(function (memo, key) {\n    var value = init[key];\n    return memo.concat(Array.isArray(value) ? value.map(function (v) {\n      return [key, v];\n    }) : [[key, value]]);\n  }, []));\n}\n\nfunction getSearchParamsForLocation(locationSearch, defaultSearchParams) {\n  var searchParams = createSearchParams(locationSearch);\n\n  if (defaultSearchParams) {\n    // Use `defaultSearchParams.forEach(...)` here instead of iterating of\n    // `defaultSearchParams.keys()` to work-around a bug in Firefox related to\n    // web extensions. Relevant Bugzilla tickets:\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1414602\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1023984\n    defaultSearchParams.forEach(function (_, key) {\n      if (!searchParams.has(key)) {\n        defaultSearchParams.getAll(key).forEach(function (value) {\n          searchParams.append(key, value);\n        });\n      }\n    });\n  }\n\n  return searchParams;\n} // One-time check for submitter support\n\n\nvar _formDataSupportsSubmitter = null;\n\nfunction isFormDataSubmitterSupported() {\n  if (_formDataSupportsSubmitter === null) {\n    try {\n      new FormData(document.createElement(\"form\"), // @ts-expect-error if FormData supports the submitter parameter, this will throw\n      0);\n      _formDataSupportsSubmitter = false;\n    } catch (e) {\n      _formDataSupportsSubmitter = true;\n    }\n  }\n\n  return _formDataSupportsSubmitter;\n}\n\nvar supportedFormEncTypes = new Set([\"application/x-www-form-urlencoded\", \"multipart/form-data\", \"text/plain\"]);\n\nfunction getFormEncType(encType) {\n  if (encType != null && !supportedFormEncTypes.has(encType)) {\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, \"\\\"\" + encType + \"\\\" is not a valid `encType` for `<Form>`/`<fetcher.Form>` \" + (\"and will default to \\\"\" + defaultEncType + \"\\\"\")) : void 0;\n    return null;\n  }\n\n  return encType;\n}\n\nfunction getFormSubmissionInfo(target, basename) {\n  var method;\n  var action;\n  var encType;\n  var formData;\n  var body;\n\n  if (isFormElement(target)) {\n    // When grabbing the action from the element, it will have had the basename\n    // prefixed to ensure non-JS scenarios work, so strip it since we'll\n    // re-prefix in the router\n    var attr = target.getAttribute(\"action\");\n    action = attr ? stripBasename(attr, basename) : null;\n    method = target.getAttribute(\"method\") || defaultMethod;\n    encType = getFormEncType(target.getAttribute(\"enctype\")) || defaultEncType;\n    formData = new FormData(target);\n  } else if (isButtonElement(target) || isInputElement(target) && (target.type === \"submit\" || target.type === \"image\")) {\n    var form = target.form;\n\n    if (form == null) {\n      throw new Error(\"Cannot submit a <button> or <input type=\\\"submit\\\"> without a <form>\");\n    } // <button>/<input type=\"submit\"> may override attributes of <form>\n    // When grabbing the action from the element, it will have had the basename\n    // prefixed to ensure non-JS scenarios work, so strip it since we'll\n    // re-prefix in the router\n\n\n    var _attr = target.getAttribute(\"formaction\") || form.getAttribute(\"action\");\n\n    action = _attr ? stripBasename(_attr, basename) : null;\n    method = target.getAttribute(\"formmethod\") || form.getAttribute(\"method\") || defaultMethod;\n    encType = getFormEncType(target.getAttribute(\"formenctype\")) || getFormEncType(form.getAttribute(\"enctype\")) || defaultEncType; // Build a FormData object populated from a form and submitter\n\n    formData = new FormData(form, target); // If this browser doesn't support the `FormData(el, submitter)` format,\n    // then tack on the submitter value at the end.  This is a lightweight\n    // solution that is not 100% spec compliant.  For complete support in older\n    // browsers, consider using the `formdata-submitter-polyfill` package\n\n    if (!isFormDataSubmitterSupported()) {\n      var name = target.name,\n          type = target.type,\n          value = target.value;\n\n      if (type === \"image\") {\n        var prefix = name ? name + \".\" : \"\";\n        formData.append(prefix + \"x\", \"0\");\n        formData.append(prefix + \"y\", \"0\");\n      } else if (name) {\n        formData.append(name, value);\n      }\n    }\n  } else if (isHtmlElement(target)) {\n    throw new Error(\"Cannot submit element that is not <form>, <button>, or \" + \"<input type=\\\"submit|image\\\">\");\n  } else {\n    method = defaultMethod;\n    action = null;\n    encType = defaultEncType;\n    body = target;\n  } // Send body for <Form encType=\"text/plain\" so we encode it into text\n\n\n  if (formData && encType === \"text/plain\") {\n    body = formData;\n    formData = undefined;\n  }\n\n  return {\n    action: action,\n    method: method.toLowerCase(),\n    encType: encType,\n    formData: formData,\n    body: body\n  };\n}\n\nvar _excluded = [\"onClick\", \"relative\", \"reloadDocument\", \"replace\", \"state\", \"target\", \"to\", \"preventScrollReset\", \"unstable_viewTransition\"],\n    _excluded2 = [\"aria-current\", \"caseSensitive\", \"className\", \"end\", \"style\", \"to\", \"unstable_viewTransition\", \"children\"],\n    _excluded3 = [\"fetcherKey\", \"navigate\", \"reloadDocument\", \"replace\", \"state\", \"method\", \"action\", \"onSubmit\", \"relative\", \"preventScrollReset\", \"unstable_viewTransition\"]; // HEY YOU! DON'T TOUCH THIS VARIABLE!\n//\n// It is replaced with the proper version at build time via a babel plugin in\n// the rollup config.\n//\n// Export a global property onto the window for React Router detection by the\n// Core Web Vitals Technology Report.  This way they can configure the `wappalyzer`\n// to detect and properly classify live websites as being built with React Router:\n// https://github.com/HTTPArchive/wappalyzer/blob/main/src/technologies/r.json\n\nvar REACT_ROUTER_VERSION = \"6\";\n\ntry {\n  window.__reactRouterVersion = REACT_ROUTER_VERSION;\n} catch (e) {// no-op\n}\n\nfunction createBrowserRouter(routes, opts) {\n  return createRouter({\n    basename: opts == null ? void 0 : opts.basename,\n    future: _extends({}, opts == null ? void 0 : opts.future, {\n      v7_prependBasename: true\n    }),\n    history: createBrowserHistory({\n      window: opts == null ? void 0 : opts.window\n    }),\n    hydrationData: (opts == null ? void 0 : opts.hydrationData) || parseHydrationData(),\n    routes: routes,\n    mapRouteProperties: UNSAFE_mapRouteProperties,\n    unstable_dataStrategy: opts == null ? void 0 : opts.unstable_dataStrategy,\n    unstable_patchRoutesOnMiss: opts == null ? void 0 : opts.unstable_patchRoutesOnMiss,\n    window: opts == null ? void 0 : opts.window\n  }).initialize();\n}\n\nfunction createHashRouter(routes, opts) {\n  return createRouter({\n    basename: opts == null ? void 0 : opts.basename,\n    future: _extends({}, opts == null ? void 0 : opts.future, {\n      v7_prependBasename: true\n    }),\n    history: createHashHistory({\n      window: opts == null ? void 0 : opts.window\n    }),\n    hydrationData: (opts == null ? void 0 : opts.hydrationData) || parseHydrationData(),\n    routes: routes,\n    mapRouteProperties: UNSAFE_mapRouteProperties,\n    unstable_dataStrategy: opts == null ? void 0 : opts.unstable_dataStrategy,\n    unstable_patchRoutesOnMiss: opts == null ? void 0 : opts.unstable_patchRoutesOnMiss,\n    window: opts == null ? void 0 : opts.window\n  }).initialize();\n}\n\nfunction parseHydrationData() {\n  var _window;\n\n  var state = (_window = window) == null ? void 0 : _window.__staticRouterHydrationData;\n\n  if (state && state.errors) {\n    state = _extends({}, state, {\n      errors: deserializeErrors(state.errors)\n    });\n  }\n\n  return state;\n}\n\nfunction deserializeErrors(errors) {\n  if (!errors) return null;\n  var entries = Object.entries(errors);\n  var serialized = {};\n\n  for (var _i = 0, _entries = entries; _i < _entries.length; _i++) {\n    var _entries$_i = _slicedToArray(_entries[_i], 2),\n        key = _entries$_i[0],\n        val = _entries$_i[1];\n\n    // Hey you!  If you change this, please change the corresponding logic in\n    // serializeErrors in react-router-dom/server.tsx :)\n    if (val && val.__type === \"RouteErrorResponse\") {\n      serialized[key] = new UNSAFE_ErrorResponseImpl(val.status, val.statusText, val.data, val.internal === true);\n    } else if (val && val.__type === \"Error\") {\n      // Attempt to reconstruct the right type of Error (i.e., ReferenceError)\n      if (val.__subType) {\n        var ErrorConstructor = window[val.__subType];\n\n        if (typeof ErrorConstructor === \"function\") {\n          try {\n            // @ts-expect-error\n            var error = new ErrorConstructor(val.message); // Wipe away the client-side stack trace.  Nothing to fill it in with\n            // because we don't serialize SSR stack traces for security reasons\n\n            error.stack = \"\";\n            serialized[key] = error;\n          } catch (e) {// no-op - fall through and create a normal Error\n          }\n        }\n      }\n\n      if (serialized[key] == null) {\n        var _error = new Error(val.message); // Wipe away the client-side stack trace.  Nothing to fill it in with\n        // because we don't serialize SSR stack traces for security reasons\n\n\n        _error.stack = \"\";\n        serialized[key] = _error;\n      }\n    } else {\n      serialized[key] = val;\n    }\n  }\n\n  return serialized;\n}\n\nvar ViewTransitionContext = /*#__PURE__*/React.createContext({\n  isTransitioning: false\n});\n\nif (process.env.NODE_ENV !== \"production\") {\n  ViewTransitionContext.displayName = \"ViewTransition\";\n}\n\nvar FetchersContext = /*#__PURE__*/React.createContext(new Map());\n\nif (process.env.NODE_ENV !== \"production\") {\n  FetchersContext.displayName = \"Fetchers\";\n} //#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region Components\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n  Webpack + React 17 fails to compile on any of the following because webpack\n  complains that `startTransition` doesn't exist in `React`:\n  * import { startTransition } from \"react\"\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React.startTransition(() => setState()) : setState()\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React[\"startTransition\"](() => setState()) : setState()\n\n  Moving it to a constant such as the following solves the Webpack/React 17 issue:\n  * import * as React from from \"react\";\n    const START_TRANSITION = \"startTransition\";\n    START_TRANSITION in React ? React[START_TRANSITION](() => setState()) : setState()\n\n  However, that introduces webpack/terser minification issues in production builds\n  in React 18 where minification/obfuscation ends up removing the call of\n  React.startTransition entirely from the first half of the ternary.  Grabbing\n  this exported reference once up front resolves that issue.\n\n  See https://github.com/remix-run/react-router/issues/10579\n*/\n\n\nvar START_TRANSITION = \"startTransition\";\nvar startTransitionImpl = React[START_TRANSITION];\nvar FLUSH_SYNC = \"flushSync\";\nvar flushSyncImpl = ReactDOM[FLUSH_SYNC];\nvar USE_ID = \"useId\";\nvar useIdImpl = React[USE_ID];\n\nfunction startTransitionSafe(cb) {\n  if (startTransitionImpl) {\n    startTransitionImpl(cb);\n  } else {\n    cb();\n  }\n}\n\nfunction flushSyncSafe(cb) {\n  if (flushSyncImpl) {\n    flushSyncImpl(cb);\n  } else {\n    cb();\n  }\n}\n\nvar Deferred = function Deferred() {\n  var _this = this;\n\n  _classCallCheck(this, Deferred);\n\n  this.status = \"pending\";\n  this.promise = new Promise(function (resolve, reject) {\n    _this.resolve = function (value) {\n      if (_this.status === \"pending\") {\n        _this.status = \"resolved\";\n        resolve(value);\n      }\n    };\n\n    _this.reject = function (reason) {\n      if (_this.status === \"pending\") {\n        _this.status = \"rejected\";\n        reject(reason);\n      }\n    };\n  });\n};\n/**\n * Given a Remix Router instance, render the appropriate UI\n */\n\n\nfunction RouterProvider(_ref) {\n  var fallbackElement = _ref.fallbackElement,\n      router = _ref.router,\n      future = _ref.future;\n\n  var _React$useState = React.useState(router.state),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      state = _React$useState2[0],\n      setStateImpl = _React$useState2[1];\n\n  var _React$useState3 = React.useState(),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      pendingState = _React$useState4[0],\n      setPendingState = _React$useState4[1];\n\n  var _React$useState5 = React.useState({\n    isTransitioning: false\n  }),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      vtContext = _React$useState6[0],\n      setVtContext = _React$useState6[1];\n\n  var _React$useState7 = React.useState(),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      renderDfd = _React$useState8[0],\n      setRenderDfd = _React$useState8[1];\n\n  var _React$useState9 = React.useState(),\n      _React$useState10 = _slicedToArray(_React$useState9, 2),\n      transition = _React$useState10[0],\n      setTransition = _React$useState10[1];\n\n  var _React$useState11 = React.useState(),\n      _React$useState12 = _slicedToArray(_React$useState11, 2),\n      interruption = _React$useState12[0],\n      setInterruption = _React$useState12[1];\n\n  var fetcherData = React.useRef(new Map());\n\n  var _ref13 = future || {},\n      v7_startTransition = _ref13.v7_startTransition;\n\n  var optInStartTransition = React.useCallback(function (cb) {\n    if (v7_startTransition) {\n      startTransitionSafe(cb);\n    } else {\n      cb();\n    }\n  }, [v7_startTransition]);\n  var setState = React.useCallback(function (newState, _ref2) {\n    var deletedFetchers = _ref2.deletedFetchers,\n        flushSync = _ref2.unstable_flushSync,\n        viewTransitionOpts = _ref2.unstable_viewTransitionOpts;\n    deletedFetchers.forEach(function (key) {\n      return fetcherData.current.delete(key);\n    });\n    newState.fetchers.forEach(function (fetcher, key) {\n      if (fetcher.data !== undefined) {\n        fetcherData.current.set(key, fetcher.data);\n      }\n    });\n    var isViewTransitionUnavailable = router.window == null || router.window.document == null || typeof router.window.document.startViewTransition !== \"function\"; // If this isn't a view transition or it's not available in this browser,\n    // just update and be done with it\n\n    if (!viewTransitionOpts || isViewTransitionUnavailable) {\n      if (flushSync) {\n        flushSyncSafe(function () {\n          return setStateImpl(newState);\n        });\n      } else {\n        optInStartTransition(function () {\n          return setStateImpl(newState);\n        });\n      }\n\n      return;\n    } // flushSync + startViewTransition\n\n\n    if (flushSync) {\n      // Flush through the context to mark DOM elements as transition=ing\n      flushSyncSafe(function () {\n        // Cancel any pending transitions\n        if (transition) {\n          renderDfd && renderDfd.resolve();\n          transition.skipTransition();\n        }\n\n        setVtContext({\n          isTransitioning: true,\n          flushSync: true,\n          currentLocation: viewTransitionOpts.currentLocation,\n          nextLocation: viewTransitionOpts.nextLocation\n        });\n      }); // Update the DOM\n\n      var t = router.window.document.startViewTransition(function () {\n        flushSyncSafe(function () {\n          return setStateImpl(newState);\n        });\n      }); // Clean up after the animation completes\n\n      t.finished.finally(function () {\n        flushSyncSafe(function () {\n          setRenderDfd(undefined);\n          setTransition(undefined);\n          setPendingState(undefined);\n          setVtContext({\n            isTransitioning: false\n          });\n        });\n      });\n      flushSyncSafe(function () {\n        return setTransition(t);\n      });\n      return;\n    } // startTransition + startViewTransition\n\n\n    if (transition) {\n      // Interrupting an in-progress transition, cancel and let everything flush\n      // out, and then kick off a new transition from the interruption state\n      renderDfd && renderDfd.resolve();\n      transition.skipTransition();\n      setInterruption({\n        state: newState,\n        currentLocation: viewTransitionOpts.currentLocation,\n        nextLocation: viewTransitionOpts.nextLocation\n      });\n    } else {\n      // Completed navigation update with opted-in view transitions, let 'er rip\n      setPendingState(newState);\n      setVtContext({\n        isTransitioning: true,\n        flushSync: false,\n        currentLocation: viewTransitionOpts.currentLocation,\n        nextLocation: viewTransitionOpts.nextLocation\n      });\n    }\n  }, [router.window, transition, renderDfd, fetcherData, optInStartTransition]); // Need to use a layout effect here so we are subscribed early enough to\n  // pick up on any render-driven redirects/navigations (useEffect/<Navigate>)\n\n  React.useLayoutEffect(function () {\n    return router.subscribe(setState);\n  }, [router, setState]); // When we start a view transition, create a Deferred we can use for the\n  // eventual \"completed\" render\n\n  React.useEffect(function () {\n    if (vtContext.isTransitioning && !vtContext.flushSync) {\n      setRenderDfd(new Deferred());\n    }\n  }, [vtContext]); // Once the deferred is created, kick off startViewTransition() to update the\n  // DOM and then wait on the Deferred to resolve (indicating the DOM update has\n  // happened)\n\n  React.useEffect(function () {\n    if (renderDfd && pendingState && router.window) {\n      var newState = pendingState;\n      var renderPromise = renderDfd.promise;\n\n      var _transition = router.window.document.startViewTransition( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                optInStartTransition(function () {\n                  return setStateImpl(newState);\n                });\n                _context.next = 3;\n                return renderPromise;\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      })));\n\n      _transition.finished.finally(function () {\n        setRenderDfd(undefined);\n        setTransition(undefined);\n        setPendingState(undefined);\n        setVtContext({\n          isTransitioning: false\n        });\n      });\n\n      setTransition(_transition);\n    }\n  }, [optInStartTransition, pendingState, renderDfd, router.window]); // When the new location finally renders and is committed to the DOM, this\n  // effect will run to resolve the transition\n\n  React.useEffect(function () {\n    if (renderDfd && pendingState && state.location.key === pendingState.location.key) {\n      renderDfd.resolve();\n    }\n  }, [renderDfd, transition, state.location, pendingState]); // If we get interrupted with a new navigation during a transition, we skip\n  // the active transition, let it cleanup, then kick it off again here\n\n  React.useEffect(function () {\n    if (!vtContext.isTransitioning && interruption) {\n      setPendingState(interruption.state);\n      setVtContext({\n        isTransitioning: true,\n        flushSync: false,\n        currentLocation: interruption.currentLocation,\n        nextLocation: interruption.nextLocation\n      });\n      setInterruption(undefined);\n    }\n  }, [vtContext.isTransitioning, interruption]);\n  React.useEffect(function () {\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(fallbackElement == null || !router.future.v7_partialHydration, \"`<RouterProvider fallbackElement>` is deprecated when using \" + \"`v7_partialHydration`, use a `HydrateFallback` component instead\") : void 0; // Only log this once on initial mount\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  var navigator = React.useMemo(function () {\n    return {\n      createHref: router.createHref,\n      encodeLocation: router.encodeLocation,\n      go: function go(n) {\n        return router.navigate(n);\n      },\n      push: function push(to, state, opts) {\n        return router.navigate(to, {\n          state: state,\n          preventScrollReset: opts == null ? void 0 : opts.preventScrollReset\n        });\n      },\n      replace: function replace(to, state, opts) {\n        return router.navigate(to, {\n          replace: true,\n          state: state,\n          preventScrollReset: opts == null ? void 0 : opts.preventScrollReset\n        });\n      }\n    };\n  }, [router]);\n  var basename = router.basename || \"/\";\n  var dataRouterContext = React.useMemo(function () {\n    return {\n      router: router,\n      navigator: navigator,\n      static: false,\n      basename: basename\n    };\n  }, [router, navigator, basename]);\n  var routerFuture = React.useMemo(function () {\n    return {\n      v7_relativeSplatPath: router.future.v7_relativeSplatPath\n    };\n  }, [router.future.v7_relativeSplatPath]); // The fragment and {null} here are important!  We need them to keep React 18's\n  // useId happy when we are server-rendering since we may have a <script> here\n  // containing the hydrated server-side staticContext (from StaticRouterProvider).\n  // useId relies on the component tree structure to generate deterministic id's\n  // so we need to ensure it remains the same on the client even though\n  // we don't need the <script> tag\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(UNSAFE_DataRouterContext.Provider, {\n    value: dataRouterContext\n  }, /*#__PURE__*/React.createElement(UNSAFE_DataRouterStateContext.Provider, {\n    value: state\n  }, /*#__PURE__*/React.createElement(FetchersContext.Provider, {\n    value: fetcherData.current\n  }, /*#__PURE__*/React.createElement(ViewTransitionContext.Provider, {\n    value: vtContext\n  }, /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    location: state.location,\n    navigationType: state.historyAction,\n    navigator: navigator,\n    future: routerFuture\n  }, state.initialized || router.future.v7_partialHydration ? /*#__PURE__*/React.createElement(MemoizedDataRoutes, {\n    routes: router.routes,\n    future: router.future,\n    state: state\n  }) : fallbackElement))))), null);\n} // Memoize to avoid re-renders when updating `ViewTransitionContext`\n\n\nvar MemoizedDataRoutes = /*#__PURE__*/React.memo(DataRoutes);\n\nfunction DataRoutes(_ref3) {\n  var routes = _ref3.routes,\n      future = _ref3.future,\n      state = _ref3.state;\n  return UNSAFE_useRoutesImpl(routes, undefined, state, future);\n}\n/**\n * A `<Router>` for use in web browsers. Provides the cleanest URLs.\n */\n\n\nfunction BrowserRouter(_ref4) {\n  var basename = _ref4.basename,\n      children = _ref4.children,\n      future = _ref4.future,\n      window = _ref4.window;\n  var historyRef = React.useRef();\n\n  if (historyRef.current == null) {\n    historyRef.current = createBrowserHistory({\n      window: window,\n      v5Compat: true\n    });\n  }\n\n  var history = historyRef.current;\n\n  var _React$useState13 = React.useState({\n    action: history.action,\n    location: history.location\n  }),\n      _React$useState14 = _slicedToArray(_React$useState13, 2),\n      state = _React$useState14[0],\n      setStateImpl = _React$useState14[1];\n\n  var _ref15 = future || {},\n      v7_startTransition = _ref15.v7_startTransition;\n\n  var setState = React.useCallback(function (newState) {\n    v7_startTransition && startTransitionImpl ? startTransitionImpl(function () {\n      return setStateImpl(newState);\n    }) : setStateImpl(newState);\n  }, [setStateImpl, v7_startTransition]);\n  React.useLayoutEffect(function () {\n    return history.listen(setState);\n  }, [history, setState]);\n  return /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history,\n    future: future\n  });\n}\n/**\n * A `<Router>` for use in web browsers. Stores the location in the hash\n * portion of the URL so it is not sent to the server.\n */\n\n\nfunction HashRouter(_ref5) {\n  var basename = _ref5.basename,\n      children = _ref5.children,\n      future = _ref5.future,\n      window = _ref5.window;\n  var historyRef = React.useRef();\n\n  if (historyRef.current == null) {\n    historyRef.current = createHashHistory({\n      window: window,\n      v5Compat: true\n    });\n  }\n\n  var history = historyRef.current;\n\n  var _React$useState15 = React.useState({\n    action: history.action,\n    location: history.location\n  }),\n      _React$useState16 = _slicedToArray(_React$useState15, 2),\n      state = _React$useState16[0],\n      setStateImpl = _React$useState16[1];\n\n  var _ref16 = future || {},\n      v7_startTransition = _ref16.v7_startTransition;\n\n  var setState = React.useCallback(function (newState) {\n    v7_startTransition && startTransitionImpl ? startTransitionImpl(function () {\n      return setStateImpl(newState);\n    }) : setStateImpl(newState);\n  }, [setStateImpl, v7_startTransition]);\n  React.useLayoutEffect(function () {\n    return history.listen(setState);\n  }, [history, setState]);\n  return /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history,\n    future: future\n  });\n}\n/**\n * A `<Router>` that accepts a pre-instantiated history object. It's important\n * to note that using your own history object is highly discouraged and may add\n * two versions of the history library to your bundles unless you use the same\n * version of the history library that React Router uses internally.\n */\n\n\nfunction HistoryRouter(_ref6) {\n  var basename = _ref6.basename,\n      children = _ref6.children,\n      future = _ref6.future,\n      history = _ref6.history;\n\n  var _React$useState17 = React.useState({\n    action: history.action,\n    location: history.location\n  }),\n      _React$useState18 = _slicedToArray(_React$useState17, 2),\n      state = _React$useState18[0],\n      setStateImpl = _React$useState18[1];\n\n  var _ref17 = future || {},\n      v7_startTransition = _ref17.v7_startTransition;\n\n  var setState = React.useCallback(function (newState) {\n    v7_startTransition && startTransitionImpl ? startTransitionImpl(function () {\n      return setStateImpl(newState);\n    }) : setStateImpl(newState);\n  }, [setStateImpl, v7_startTransition]);\n  React.useLayoutEffect(function () {\n    return history.listen(setState);\n  }, [history, setState]);\n  return /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history,\n    future: future\n  });\n}\n\nif (process.env.NODE_ENV !== \"production\") {\n  HistoryRouter.displayName = \"unstable_HistoryRouter\";\n}\n\nvar isBrowser = typeof window !== \"undefined\" && typeof window.document !== \"undefined\" && typeof window.document.createElement !== \"undefined\";\nvar ABSOLUTE_URL_REGEX = /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i;\n/**\n * The public API for rendering a history-aware `<a>`.\n */\n\nvar Link = /*#__PURE__*/React.forwardRef(function LinkWithRef(_ref7, ref) {\n  var onClick = _ref7.onClick,\n      relative = _ref7.relative,\n      reloadDocument = _ref7.reloadDocument,\n      replace = _ref7.replace,\n      state = _ref7.state,\n      target = _ref7.target,\n      to = _ref7.to,\n      preventScrollReset = _ref7.preventScrollReset,\n      unstable_viewTransition = _ref7.unstable_viewTransition,\n      rest = _objectWithoutPropertiesLoose(_ref7, _excluded);\n\n  var _React$useContext = React.useContext(UNSAFE_NavigationContext),\n      basename = _React$useContext.basename; // Rendered into <a href> for absolute URLs\n\n\n  var absoluteHref;\n  var isExternal = false;\n\n  if (typeof to === \"string\" && ABSOLUTE_URL_REGEX.test(to)) {\n    // Render the absolute href server- and client-side\n    absoluteHref = to; // Only check for external origins client-side\n\n    if (isBrowser) {\n      try {\n        var currentUrl = new URL(window.location.href);\n        var targetUrl = to.startsWith(\"//\") ? new URL(currentUrl.protocol + to) : new URL(to);\n        var path = stripBasename(targetUrl.pathname, basename);\n\n        if (targetUrl.origin === currentUrl.origin && path != null) {\n          // Strip the protocol/origin/basename for same-origin absolute URLs\n          to = path + targetUrl.search + targetUrl.hash;\n        } else {\n          isExternal = true;\n        }\n      } catch (e) {\n        // We can't do external URL detection without a valid URL\n        process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, \"<Link to=\\\"\" + to + \"\\\"> contains an invalid URL which will probably break \" + \"when clicked - please update to a valid URL path.\") : void 0;\n      }\n    }\n  } // Rendered into <a href> for relative URLs\n\n\n  var href = useHref(to, {\n    relative: relative\n  });\n  var internalOnClick = useLinkClickHandler(to, {\n    replace: replace,\n    state: state,\n    target: target,\n    preventScrollReset: preventScrollReset,\n    relative: relative,\n    unstable_viewTransition: unstable_viewTransition\n  });\n\n  function handleClick(event) {\n    if (onClick) onClick(event);\n\n    if (!event.defaultPrevented) {\n      internalOnClick(event);\n    }\n  }\n\n  return (\n    /*#__PURE__*/\n    // eslint-disable-next-line jsx-a11y/anchor-has-content\n    React.createElement(\"a\", _extends({}, rest, {\n      href: absoluteHref || href,\n      onClick: isExternal || reloadDocument ? onClick : handleClick,\n      ref: ref,\n      target: target\n    }))\n  );\n});\n\nif (process.env.NODE_ENV !== \"production\") {\n  Link.displayName = \"Link\";\n}\n/**\n * A `<Link>` wrapper that knows if it's \"active\" or not.\n */\n\n\nvar NavLink = /*#__PURE__*/React.forwardRef(function NavLinkWithRef(_ref8, ref) {\n  var _ref8$ariaCurrent = _ref8[\"aria-current\"],\n      ariaCurrentProp = _ref8$ariaCurrent === void 0 ? \"page\" : _ref8$ariaCurrent,\n      _ref8$caseSensitive = _ref8.caseSensitive,\n      caseSensitive = _ref8$caseSensitive === void 0 ? false : _ref8$caseSensitive,\n      _ref8$className = _ref8.className,\n      classNameProp = _ref8$className === void 0 ? \"\" : _ref8$className,\n      _ref8$end = _ref8.end,\n      end = _ref8$end === void 0 ? false : _ref8$end,\n      styleProp = _ref8.style,\n      to = _ref8.to,\n      unstable_viewTransition = _ref8.unstable_viewTransition,\n      children = _ref8.children,\n      rest = _objectWithoutPropertiesLoose(_ref8, _excluded2);\n\n  var path = useResolvedPath(to, {\n    relative: rest.relative\n  });\n  var location = useLocation();\n  var routerState = React.useContext(UNSAFE_DataRouterStateContext);\n\n  var _React$useContext2 = React.useContext(UNSAFE_NavigationContext),\n      navigator = _React$useContext2.navigator,\n      basename = _React$useContext2.basename;\n\n  var isTransitioning = routerState != null && // Conditional usage is OK here because the usage of a data router is static\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  useViewTransitionState(path) && unstable_viewTransition === true;\n  var toPathname = navigator.encodeLocation ? navigator.encodeLocation(path).pathname : path.pathname;\n  var locationPathname = location.pathname;\n  var nextLocationPathname = routerState && routerState.navigation && routerState.navigation.location ? routerState.navigation.location.pathname : null;\n\n  if (!caseSensitive) {\n    locationPathname = locationPathname.toLowerCase();\n    nextLocationPathname = nextLocationPathname ? nextLocationPathname.toLowerCase() : null;\n    toPathname = toPathname.toLowerCase();\n  }\n\n  if (nextLocationPathname && basename) {\n    nextLocationPathname = stripBasename(nextLocationPathname, basename) || nextLocationPathname;\n  } // If the `to` has a trailing slash, look at that exact spot.  Otherwise,\n  // we're looking for a slash _after_ what's in `to`.  For example:\n  //\n  // <NavLink to=\"/users\"> and <NavLink to=\"/users/\">\n  // both want to look for a / at index 6 to match URL `/users/matt`\n\n\n  var endSlashPosition = toPathname !== \"/\" && toPathname.endsWith(\"/\") ? toPathname.length - 1 : toPathname.length;\n  var isActive = locationPathname === toPathname || !end && locationPathname.startsWith(toPathname) && locationPathname.charAt(endSlashPosition) === \"/\";\n  var isPending = nextLocationPathname != null && (nextLocationPathname === toPathname || !end && nextLocationPathname.startsWith(toPathname) && nextLocationPathname.charAt(toPathname.length) === \"/\");\n  var renderProps = {\n    isActive: isActive,\n    isPending: isPending,\n    isTransitioning: isTransitioning\n  };\n  var ariaCurrent = isActive ? ariaCurrentProp : undefined;\n  var className;\n\n  if (typeof classNameProp === \"function\") {\n    className = classNameProp(renderProps);\n  } else {\n    // If the className prop is not a function, we use a default `active`\n    // class for <NavLink />s that are active. In v5 `active` was the default\n    // value for `activeClassName`, but we are removing that API and can still\n    // use the old default behavior for a cleaner upgrade path and keep the\n    // simple styling rules working as they currently do.\n    className = [classNameProp, isActive ? \"active\" : null, isPending ? \"pending\" : null, isTransitioning ? \"transitioning\" : null].filter(Boolean).join(\" \");\n  }\n\n  var style = typeof styleProp === \"function\" ? styleProp(renderProps) : styleProp;\n  return /*#__PURE__*/React.createElement(Link, _extends({}, rest, {\n    \"aria-current\": ariaCurrent,\n    className: className,\n    ref: ref,\n    style: style,\n    to: to,\n    unstable_viewTransition: unstable_viewTransition\n  }), typeof children === \"function\" ? children(renderProps) : children);\n});\n\nif (process.env.NODE_ENV !== \"production\") {\n  NavLink.displayName = \"NavLink\";\n}\n/**\n * A `@remix-run/router`-aware `<form>`. It behaves like a normal form except\n * that the interaction with the server is with `fetch` instead of new document\n * requests, allowing components to add nicer UX to the page as the form is\n * submitted and returns with data.\n */\n\n\nvar Form = /*#__PURE__*/React.forwardRef(function (_ref9, forwardedRef) {\n  var fetcherKey = _ref9.fetcherKey,\n      navigate = _ref9.navigate,\n      reloadDocument = _ref9.reloadDocument,\n      replace = _ref9.replace,\n      state = _ref9.state,\n      _ref9$method = _ref9.method,\n      method = _ref9$method === void 0 ? defaultMethod : _ref9$method,\n      action = _ref9.action,\n      onSubmit = _ref9.onSubmit,\n      relative = _ref9.relative,\n      preventScrollReset = _ref9.preventScrollReset,\n      unstable_viewTransition = _ref9.unstable_viewTransition,\n      props = _objectWithoutPropertiesLoose(_ref9, _excluded3);\n\n  var submit = useSubmit();\n  var formAction = useFormAction(action, {\n    relative: relative\n  });\n  var formMethod = method.toLowerCase() === \"get\" ? \"get\" : \"post\";\n\n  var submitHandler = function submitHandler(event) {\n    onSubmit && onSubmit(event);\n    if (event.defaultPrevented) return;\n    event.preventDefault();\n    var submitter = event.nativeEvent.submitter;\n    var submitMethod = (submitter == null ? void 0 : submitter.getAttribute(\"formmethod\")) || method;\n    submit(submitter || event.currentTarget, {\n      fetcherKey: fetcherKey,\n      method: submitMethod,\n      navigate: navigate,\n      replace: replace,\n      state: state,\n      relative: relative,\n      preventScrollReset: preventScrollReset,\n      unstable_viewTransition: unstable_viewTransition\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", _extends({\n    ref: forwardedRef,\n    method: formMethod,\n    action: formAction,\n    onSubmit: reloadDocument ? onSubmit : submitHandler\n  }, props));\n});\n\nif (process.env.NODE_ENV !== \"production\") {\n  Form.displayName = \"Form\";\n}\n/**\n * This component will emulate the browser's scroll restoration on location\n * changes.\n */\n\n\nfunction ScrollRestoration(_ref10) {\n  var getKey = _ref10.getKey,\n      storageKey = _ref10.storageKey;\n  useScrollRestoration({\n    getKey: getKey,\n    storageKey: storageKey\n  });\n  return null;\n}\n\nif (process.env.NODE_ENV !== \"production\") {\n  ScrollRestoration.displayName = \"ScrollRestoration\";\n} //#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region Hooks\n////////////////////////////////////////////////////////////////////////////////\n\n\nvar DataRouterHook;\n\n(function (DataRouterHook) {\n  DataRouterHook[\"UseScrollRestoration\"] = \"useScrollRestoration\";\n  DataRouterHook[\"UseSubmit\"] = \"useSubmit\";\n  DataRouterHook[\"UseSubmitFetcher\"] = \"useSubmitFetcher\";\n  DataRouterHook[\"UseFetcher\"] = \"useFetcher\";\n  DataRouterHook[\"useViewTransitionState\"] = \"useViewTransitionState\";\n})(DataRouterHook || (DataRouterHook = {}));\n\nvar DataRouterStateHook;\n\n(function (DataRouterStateHook) {\n  DataRouterStateHook[\"UseFetcher\"] = \"useFetcher\";\n  DataRouterStateHook[\"UseFetchers\"] = \"useFetchers\";\n  DataRouterStateHook[\"UseScrollRestoration\"] = \"useScrollRestoration\";\n})(DataRouterStateHook || (DataRouterStateHook = {})); // Internal hooks\n\n\nfunction getDataRouterConsoleError(hookName) {\n  return hookName + \" must be used within a data router.  See https://reactrouter.com/routers/picking-a-router.\";\n}\n\nfunction useDataRouterContext(hookName) {\n  var ctx = React.useContext(UNSAFE_DataRouterContext);\n  !ctx ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, getDataRouterConsoleError(hookName)) : UNSAFE_invariant(false) : void 0;\n  return ctx;\n}\n\nfunction useDataRouterState(hookName) {\n  var state = React.useContext(UNSAFE_DataRouterStateContext);\n  !state ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, getDataRouterConsoleError(hookName)) : UNSAFE_invariant(false) : void 0;\n  return state;\n} // External hooks\n\n/**\n * Handles the click behavior for router `<Link>` components. This is useful if\n * you need to create custom `<Link>` components with the same click behavior we\n * use in our exported `<Link>`.\n */\n\n\nfunction useLinkClickHandler(to, _temp) {\n  var _ref18 = _temp === void 0 ? {} : _temp,\n      target = _ref18.target,\n      replaceProp = _ref18.replace,\n      state = _ref18.state,\n      preventScrollReset = _ref18.preventScrollReset,\n      relative = _ref18.relative,\n      unstable_viewTransition = _ref18.unstable_viewTransition;\n\n  var navigate = useNavigate();\n  var location = useLocation();\n  var path = useResolvedPath(to, {\n    relative: relative\n  });\n  return React.useCallback(function (event) {\n    if (shouldProcessLinkClick(event, target)) {\n      event.preventDefault(); // If the URL hasn't changed, a regular <a> will do a replace instead of\n      // a push, so do the same here unless the replace prop is explicitly set\n\n      var _replace = replaceProp !== undefined ? replaceProp : createPath(location) === createPath(path);\n\n      navigate(to, {\n        replace: _replace,\n        state: state,\n        preventScrollReset: preventScrollReset,\n        relative: relative,\n        unstable_viewTransition: unstable_viewTransition\n      });\n    }\n  }, [location, navigate, path, replaceProp, state, target, to, preventScrollReset, relative, unstable_viewTransition]);\n}\n/**\n * A convenient wrapper for reading and writing search parameters via the\n * URLSearchParams interface.\n */\n\n\nfunction useSearchParams(defaultInit) {\n  process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(typeof URLSearchParams !== \"undefined\", \"You cannot use the `useSearchParams` hook in a browser that does not \" + \"support the URLSearchParams API. If you need to support Internet \" + \"Explorer 11, we recommend you load a polyfill such as \" + \"https://github.com/ungap/url-search-params.\") : void 0;\n  var defaultSearchParamsRef = React.useRef(createSearchParams(defaultInit));\n  var hasSetSearchParamsRef = React.useRef(false);\n  var location = useLocation();\n  var searchParams = React.useMemo(function () {\n    return (// Only merge in the defaults if we haven't yet called setSearchParams.\n      // Once we call that we want those to take precedence, otherwise you can't\n      // remove a param with setSearchParams({}) if it has an initial value\n      getSearchParamsForLocation(location.search, hasSetSearchParamsRef.current ? null : defaultSearchParamsRef.current)\n    );\n  }, [location.search]);\n  var navigate = useNavigate();\n  var setSearchParams = React.useCallback(function (nextInit, navigateOptions) {\n    var newSearchParams = createSearchParams(typeof nextInit === \"function\" ? nextInit(searchParams) : nextInit);\n    hasSetSearchParamsRef.current = true;\n    navigate(\"?\" + newSearchParams, navigateOptions);\n  }, [navigate, searchParams]);\n  return [searchParams, setSearchParams];\n}\n\nfunction validateClientSideSubmission() {\n  if (typeof document === \"undefined\") {\n    throw new Error(\"You are calling submit during the server render. \" + \"Try calling submit within a `useEffect` or callback instead.\");\n  }\n}\n\nvar fetcherId = 0;\n\nvar getUniqueFetcherId = function getUniqueFetcherId() {\n  return \"__\" + String(++fetcherId) + \"__\";\n};\n/**\n * Returns a function that may be used to programmatically submit a form (or\n * some arbitrary data) to the server.\n */\n\n\nfunction useSubmit() {\n  var _useDataRouterContext = useDataRouterContext(DataRouterHook.UseSubmit),\n      router = _useDataRouterContext.router;\n\n  var _React$useContext3 = React.useContext(UNSAFE_NavigationContext),\n      basename = _React$useContext3.basename;\n\n  var currentRouteId = UNSAFE_useRouteId();\n  return React.useCallback(function (target, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    validateClientSideSubmission();\n\n    var _getFormSubmissionInf = getFormSubmissionInfo(target, basename),\n        action = _getFormSubmissionInf.action,\n        method = _getFormSubmissionInf.method,\n        encType = _getFormSubmissionInf.encType,\n        formData = _getFormSubmissionInf.formData,\n        body = _getFormSubmissionInf.body;\n\n    if (options.navigate === false) {\n      var key = options.fetcherKey || getUniqueFetcherId();\n      router.fetch(key, currentRouteId, options.action || action, {\n        preventScrollReset: options.preventScrollReset,\n        formData: formData,\n        body: body,\n        formMethod: options.method || method,\n        formEncType: options.encType || encType,\n        unstable_flushSync: options.unstable_flushSync\n      });\n    } else {\n      router.navigate(options.action || action, {\n        preventScrollReset: options.preventScrollReset,\n        formData: formData,\n        body: body,\n        formMethod: options.method || method,\n        formEncType: options.encType || encType,\n        replace: options.replace,\n        state: options.state,\n        fromRouteId: currentRouteId,\n        unstable_flushSync: options.unstable_flushSync,\n        unstable_viewTransition: options.unstable_viewTransition\n      });\n    }\n  }, [router, basename, currentRouteId]);\n} // v7: Eventually we should deprecate this entirely in favor of using the\n// router method directly?\n\n\nfunction useFormAction(action, _temp2) {\n  var _ref19 = _temp2 === void 0 ? {} : _temp2,\n      relative = _ref19.relative;\n\n  var _React$useContext4 = React.useContext(UNSAFE_NavigationContext),\n      basename = _React$useContext4.basename;\n\n  var routeContext = React.useContext(UNSAFE_RouteContext);\n  !routeContext ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"useFormAction must be used inside a RouteContext\") : UNSAFE_invariant(false) : void 0;\n\n  var _routeContext$matches = routeContext.matches.slice(-1),\n      _routeContext$matches2 = _slicedToArray(_routeContext$matches, 1),\n      match = _routeContext$matches2[0]; // Shallow clone path so we can modify it below, otherwise we modify the\n  // object referenced by useMemo inside useResolvedPath\n\n\n  var path = _extends({}, useResolvedPath(action ? action : \".\", {\n    relative: relative\n  })); // If no action was specified, browsers will persist current search params\n  // when determining the path, so match that behavior\n  // https://github.com/remix-run/remix/issues/927\n\n\n  var location = useLocation();\n\n  if (action == null) {\n    // Safe to write to this directly here since if action was undefined, we\n    // would have called useResolvedPath(\".\") which will never include a search\n    path.search = location.search; // When grabbing search params from the URL, remove any included ?index param\n    // since it might not apply to our contextual route.  We add it back based\n    // on match.route.index below\n\n    var params = new URLSearchParams(path.search);\n\n    if (params.has(\"index\") && params.get(\"index\") === \"\") {\n      params.delete(\"index\");\n      path.search = params.toString() ? \"?\" + params.toString() : \"\";\n    }\n  }\n\n  if ((!action || action === \".\") && match.route.index) {\n    path.search = path.search ? path.search.replace(/^\\?/, \"?index&\") : \"?index\";\n  } // If we're operating within a basename, prepend it to the pathname prior\n  // to creating the form action.  If this is a root navigation, then just use\n  // the raw basename which allows the basename to have full control over the\n  // presence of a trailing slash on root actions\n\n\n  if (basename !== \"/\") {\n    path.pathname = path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n  }\n\n  return createPath(path);\n} // TODO: (v7) Change the useFetcher generic default from `any` to `unknown`\n\n/**\n * Interacts with route loaders and actions without causing a navigation. Great\n * for any interaction that stays on the same page.\n */\n\n\nfunction useFetcher(_temp3) {\n  var _route$matches;\n\n  var _ref20 = _temp3 === void 0 ? {} : _temp3,\n      key = _ref20.key;\n\n  var _useDataRouterContext2 = useDataRouterContext(DataRouterHook.UseFetcher),\n      router = _useDataRouterContext2.router;\n\n  var state = useDataRouterState(DataRouterStateHook.UseFetcher);\n  var fetcherData = React.useContext(FetchersContext);\n  var route = React.useContext(UNSAFE_RouteContext);\n  var routeId = (_route$matches = route.matches[route.matches.length - 1]) == null ? void 0 : _route$matches.route.id;\n  !fetcherData ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"useFetcher must be used inside a FetchersContext\") : UNSAFE_invariant(false) : void 0;\n  !route ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"useFetcher must be used inside a RouteContext\") : UNSAFE_invariant(false) : void 0;\n  !(routeId != null) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"useFetcher can only be used on routes that contain a unique \\\"id\\\"\") : UNSAFE_invariant(false) : void 0; // Fetcher key handling\n  // OK to call conditionally to feature detect `useId`\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n\n  var defaultKey = useIdImpl ? useIdImpl() : \"\";\n\n  var _React$useState19 = React.useState(key || defaultKey),\n      _React$useState20 = _slicedToArray(_React$useState19, 2),\n      fetcherKey = _React$useState20[0],\n      setFetcherKey = _React$useState20[1];\n\n  if (key && key !== fetcherKey) {\n    setFetcherKey(key);\n  } else if (!fetcherKey) {\n    // We will only fall through here when `useId` is not available\n    setFetcherKey(getUniqueFetcherId());\n  } // Registration/cleanup\n\n\n  React.useEffect(function () {\n    router.getFetcher(fetcherKey);\n    return function () {\n      // Tell the router we've unmounted - if v7_fetcherPersist is enabled this\n      // will not delete immediately but instead queue up a delete after the\n      // fetcher returns to an `idle` state\n      router.deleteFetcher(fetcherKey);\n    };\n  }, [router, fetcherKey]); // Fetcher additions\n\n  var load = React.useCallback(function (href, opts) {\n    !routeId ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"No routeId available for fetcher.load()\") : UNSAFE_invariant(false) : void 0;\n    router.fetch(fetcherKey, routeId, href, opts);\n  }, [fetcherKey, routeId, router]);\n  var submitImpl = useSubmit();\n  var submit = React.useCallback(function (target, opts) {\n    submitImpl(target, _extends({}, opts, {\n      navigate: false,\n      fetcherKey: fetcherKey\n    }));\n  }, [fetcherKey, submitImpl]);\n  var FetcherForm = React.useMemo(function () {\n    var FetcherForm = /*#__PURE__*/React.forwardRef(function (props, ref) {\n      return /*#__PURE__*/React.createElement(Form, _extends({}, props, {\n        navigate: false,\n        fetcherKey: fetcherKey,\n        ref: ref\n      }));\n    });\n\n    if (process.env.NODE_ENV !== \"production\") {\n      FetcherForm.displayName = \"fetcher.Form\";\n    }\n\n    return FetcherForm;\n  }, [fetcherKey]); // Exposed FetcherWithComponents\n\n  var fetcher = state.fetchers.get(fetcherKey) || IDLE_FETCHER;\n  var data = fetcherData.get(fetcherKey);\n  var fetcherWithComponents = React.useMemo(function () {\n    return _extends({\n      Form: FetcherForm,\n      submit: submit,\n      load: load\n    }, fetcher, {\n      data: data\n    });\n  }, [FetcherForm, submit, load, fetcher, data]);\n  return fetcherWithComponents;\n}\n/**\n * Provides all fetchers currently on the page. Useful for layouts and parent\n * routes that need to provide pending/optimistic UI regarding the fetch.\n */\n\n\nfunction useFetchers() {\n  var state = useDataRouterState(DataRouterStateHook.UseFetchers);\n  return Array.from(state.fetchers.entries()).map(function (_ref11) {\n    var _ref21 = _slicedToArray(_ref11, 2),\n        key = _ref21[0],\n        fetcher = _ref21[1];\n\n    return _extends({}, fetcher, {\n      key: key\n    });\n  });\n}\n\nvar SCROLL_RESTORATION_STORAGE_KEY = \"react-router-scroll-positions\";\nvar savedScrollPositions = {};\n/**\n * When rendered inside a RouterProvider, will restore scroll positions on navigations\n */\n\nfunction useScrollRestoration(_temp4) {\n  var _ref22 = _temp4 === void 0 ? {} : _temp4,\n      getKey = _ref22.getKey,\n      storageKey = _ref22.storageKey;\n\n  var _useDataRouterContext3 = useDataRouterContext(DataRouterHook.UseScrollRestoration),\n      router = _useDataRouterContext3.router;\n\n  var _useDataRouterState = useDataRouterState(DataRouterStateHook.UseScrollRestoration),\n      restoreScrollPosition = _useDataRouterState.restoreScrollPosition,\n      preventScrollReset = _useDataRouterState.preventScrollReset;\n\n  var _React$useContext5 = React.useContext(UNSAFE_NavigationContext),\n      basename = _React$useContext5.basename;\n\n  var location = useLocation();\n  var matches = useMatches();\n  var navigation = useNavigation(); // Trigger manual scroll restoration while we're active\n\n  React.useEffect(function () {\n    window.history.scrollRestoration = \"manual\";\n    return function () {\n      window.history.scrollRestoration = \"auto\";\n    };\n  }, []); // Save positions on pagehide\n\n  usePageHide(React.useCallback(function () {\n    if (navigation.state === \"idle\") {\n      var key = (getKey ? getKey(location, matches) : null) || location.key;\n      savedScrollPositions[key] = window.scrollY;\n    }\n\n    try {\n      sessionStorage.setItem(storageKey || SCROLL_RESTORATION_STORAGE_KEY, JSON.stringify(savedScrollPositions));\n    } catch (error) {\n      process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, \"Failed to save scroll positions in sessionStorage, <ScrollRestoration /> will not work properly (\" + error + \").\") : void 0;\n    }\n\n    window.history.scrollRestoration = \"auto\";\n  }, [storageKey, getKey, navigation.state, location, matches])); // Read in any saved scroll locations\n\n  if (typeof document !== \"undefined\") {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(function () {\n      try {\n        var sessionPositions = sessionStorage.getItem(storageKey || SCROLL_RESTORATION_STORAGE_KEY);\n\n        if (sessionPositions) {\n          savedScrollPositions = JSON.parse(sessionPositions);\n        }\n      } catch (e) {// no-op, use default empty object\n      }\n    }, [storageKey]); // Enable scroll restoration in the router\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n\n    React.useLayoutEffect(function () {\n      var getKeyWithoutBasename = getKey && basename !== \"/\" ? function (location, matches) {\n        return getKey( // Strip the basename to match useLocation()\n        _extends({}, location, {\n          pathname: stripBasename(location.pathname, basename) || location.pathname\n        }), matches);\n      } : getKey;\n      var disableScrollRestoration = router == null ? void 0 : router.enableScrollRestoration(savedScrollPositions, function () {\n        return window.scrollY;\n      }, getKeyWithoutBasename);\n      return function () {\n        return disableScrollRestoration && disableScrollRestoration();\n      };\n    }, [router, basename, getKey]); // Restore scrolling when state.restoreScrollPosition changes\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n\n    React.useLayoutEffect(function () {\n      // Explicit false means don't do anything (used for submissions)\n      if (restoreScrollPosition === false) {\n        return;\n      } // been here before, scroll to it\n\n\n      if (typeof restoreScrollPosition === \"number\") {\n        window.scrollTo(0, restoreScrollPosition);\n        return;\n      } // try to scroll to the hash\n\n\n      if (location.hash) {\n        var el = document.getElementById(decodeURIComponent(location.hash.slice(1)));\n\n        if (el) {\n          el.scrollIntoView();\n          return;\n        }\n      } // Don't reset if this navigation opted out\n\n\n      if (preventScrollReset === true) {\n        return;\n      } // otherwise go to the top on new locations\n\n\n      window.scrollTo(0, 0);\n    }, [location, restoreScrollPosition, preventScrollReset]);\n  }\n}\n/**\n * Setup a callback to be fired on the window's `beforeunload` event. This is\n * useful for saving some data to `window.localStorage` just before the page\n * refreshes.\n *\n * Note: The `callback` argument should be a function created with\n * `React.useCallback()`.\n */\n\n\nfunction useBeforeUnload(callback, options) {\n  var _ref23 = options || {},\n      capture = _ref23.capture;\n\n  React.useEffect(function () {\n    var opts = capture != null ? {\n      capture: capture\n    } : undefined;\n    window.addEventListener(\"beforeunload\", callback, opts);\n    return function () {\n      window.removeEventListener(\"beforeunload\", callback, opts);\n    };\n  }, [callback, capture]);\n}\n/**\n * Setup a callback to be fired on the window's `pagehide` event. This is\n * useful for saving some data to `window.localStorage` just before the page\n * refreshes.  This event is better supported than beforeunload across browsers.\n *\n * Note: The `callback` argument should be a function created with\n * `React.useCallback()`.\n */\n\n\nfunction usePageHide(callback, options) {\n  var _ref24 = options || {},\n      capture = _ref24.capture;\n\n  React.useEffect(function () {\n    var opts = capture != null ? {\n      capture: capture\n    } : undefined;\n    window.addEventListener(\"pagehide\", callback, opts);\n    return function () {\n      window.removeEventListener(\"pagehide\", callback, opts);\n    };\n  }, [callback, capture]);\n}\n/**\n * Wrapper around useBlocker to show a window.confirm prompt to users instead\n * of building a custom UI with useBlocker.\n *\n * Warning: This has *a lot of rough edges* and behaves very differently (and\n * very incorrectly in some cases) across browsers if user click addition\n * back/forward navigations while the confirm is open.  Use at your own risk.\n */\n\n\nfunction usePrompt(_ref12) {\n  var when = _ref12.when,\n      message = _ref12.message;\n  var blocker = useBlocker(when);\n  React.useEffect(function () {\n    if (blocker.state === \"blocked\") {\n      var proceed = window.confirm(message);\n\n      if (proceed) {\n        // This timeout is needed to avoid a weird \"race\" on POP navigations\n        // between the `window.history` revert navigation and the result of\n        // `window.confirm`\n        setTimeout(blocker.proceed, 0);\n      } else {\n        blocker.reset();\n      }\n    }\n  }, [blocker, message]);\n  React.useEffect(function () {\n    if (blocker.state === \"blocked\" && !when) {\n      blocker.reset();\n    }\n  }, [blocker, when]);\n}\n/**\n * Return a boolean indicating if there is an active view transition to the\n * given href.  You can use this value to render CSS classes or viewTransitionName\n * styles onto your elements\n *\n * @param href The destination href\n * @param [opts.relative] Relative routing type (\"route\" | \"path\")\n */\n\n\nfunction useViewTransitionState(to, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  var vtContext = React.useContext(ViewTransitionContext);\n  !(vtContext != null) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"`unstable_useViewTransitionState` must be used within `react-router-dom`'s `RouterProvider`.  \" + \"Did you accidentally import `RouterProvider` from `react-router`?\") : UNSAFE_invariant(false) : void 0;\n\n  var _useDataRouterContext4 = useDataRouterContext(DataRouterHook.useViewTransitionState),\n      basename = _useDataRouterContext4.basename;\n\n  var path = useResolvedPath(to, {\n    relative: opts.relative\n  });\n\n  if (!vtContext.isTransitioning) {\n    return false;\n  }\n\n  var currentPath = stripBasename(vtContext.currentLocation.pathname, basename) || vtContext.currentLocation.pathname;\n  var nextPath = stripBasename(vtContext.nextLocation.pathname, basename) || vtContext.nextLocation.pathname; // Transition is active if we're going to or coming from the indicated\n  // destination.  This ensures that other PUSH navigations that reverse\n  // an indicated transition apply.  I.e., on the list view you have:\n  //\n  //   <NavLink to=\"/details/1\" unstable_viewTransition>\n  //\n  // If you click the breadcrumb back to the list view:\n  //\n  //   <NavLink to=\"/list\" unstable_viewTransition>\n  //\n  // We should apply the transition because it's indicated as active going\n  // from /list -> /details/1 and therefore should be active on the reverse\n  // (even though this isn't strictly a POP reverse)\n\n  return matchPath(path.pathname, nextPath) != null || matchPath(path.pathname, currentPath) != null;\n} //#endregion\n\n\nexport { BrowserRouter, Form, HashRouter, Link, NavLink, RouterProvider, ScrollRestoration, FetchersContext as UNSAFE_FetchersContext, ViewTransitionContext as UNSAFE_ViewTransitionContext, useScrollRestoration as UNSAFE_useScrollRestoration, createBrowserRouter, createHashRouter, createSearchParams, HistoryRouter as unstable_HistoryRouter, usePrompt as unstable_usePrompt, useViewTransitionState as unstable_useViewTransitionState, useBeforeUnload, useFetcher, useFetchers, useFormAction, useLinkClickHandler, useSearchParams, useSubmit };","map":{"version":3,"sources":["../dom.ts","../index.tsx"],"names":["defaultMethod","defaultEncType","isHtmlElement","object","tagName","isButtonElement","toLowerCase","isFormElement","isInputElement","isModifiedEvent","event","metaKey","altKey","ctrlKey","shiftKey","target","button","init","URLSearchParams","Array","isArray","Object","keys","reduce","memo","key","value","concat","map","v","locationSearch","defaultSearchParams","searchParams","createSearchParams","forEach","_","has","getAll","append","_formDataSupportsSubmitter","isFormDataSubmitterSupported","FormData","document","createElement","e","supportedFormEncTypes","Set","getFormEncType","encType","process","basename","method","action","formData","body","attr","getAttribute","stripBasename","type","form","Error","name","prefix","undefined","window","__reactRouterVersion","REACT_ROUTER_VERSION","routes","opts","createRouter","future","v7_prependBasename","history","createBrowserHistory","hydrationData","parseHydrationData","mapRouteProperties","unstable_dataStrategy","unstable_patchRoutesOnMiss","initialize","createHashHistory","state","__staticRouterHydrationData","errors","deserializeErrors","entries","serialized","val","__type","ErrorResponseImpl","status","statusText","data","internal","__subType","ErrorConstructor","error","message","stack","ViewTransitionContext","React","createContext","isTransitioning","displayName","FetchersContext","Map","START_TRANSITION","startTransitionImpl","FLUSH_SYNC","flushSyncImpl","ReactDOM","USE_ID","useIdImpl","startTransitionSafe","cb","flushSyncSafe","Deferred","constructor","promise","Promise","resolve","reject","reason","RouterProvider","fallbackElement","router","setStateImpl","useState","pendingState","setPendingState","vtContext","setVtContext","renderDfd","setRenderDfd","transition","setTransition","interruption","setInterruption","fetcherData","useRef","v7_startTransition","optInStartTransition","useCallback","setState","newState","deletedFetchers","unstable_flushSync","flushSync","unstable_viewTransitionOpts","viewTransitionOpts","current","delete","fetchers","fetcher","set","isViewTransitionUnavailable","startViewTransition","skipTransition","currentLocation","nextLocation","t","finished","finally","useLayoutEffect","subscribe","useEffect","renderPromise","location","v7_partialHydration","navigator","useMemo","createHref","encodeLocation","go","n","navigate","push","to","preventScrollReset","replace","dataRouterContext","static","routerFuture","v7_relativeSplatPath","DataRouterContext","Provider","DataRouterStateContext","Router","navigationType","historyAction","initialized","MemoizedDataRoutes","DataRoutes","useRoutesImpl","BrowserRouter","children","historyRef","v5Compat","listen","HashRouter","HistoryRouter","isBrowser","ABSOLUTE_URL_REGEX","Link","forwardRef","LinkWithRef","onClick","relative","reloadDocument","unstable_viewTransition","rest","ref","useContext","NavigationContext","absoluteHref","isExternal","test","currentUrl","URL","href","targetUrl","startsWith","protocol","path","pathname","origin","search","hash","useHref","internalOnClick","useLinkClickHandler","handleClick","defaultPrevented","NavLink","NavLinkWithRef","ariaCurrentProp","caseSensitive","className","classNameProp","end","style","styleProp","useResolvedPath","useLocation","routerState","useViewTransitionState","toPathname","locationPathname","nextLocationPathname","navigation","endSlashPosition","endsWith","length","isActive","charAt","isPending","renderProps","ariaCurrent","filter","Boolean","join","Form","fetcherKey","onSubmit","props","forwardedRef","submit","useSubmit","formAction","useFormAction","formMethod","submitHandler","preventDefault","submitter","nativeEvent","submitMethod","currentTarget","ScrollRestoration","getKey","storageKey","useScrollRestoration","DataRouterHook","DataRouterStateHook","getDataRouterConsoleError","hookName","useDataRouterContext","ctx","useDataRouterState","replaceProp","useNavigate","shouldProcessLinkClick","createPath","useSearchParams","defaultInit","defaultSearchParamsRef","hasSetSearchParamsRef","getSearchParamsForLocation","setSearchParams","nextInit","navigateOptions","newSearchParams","validateClientSideSubmission","fetcherId","getUniqueFetcherId","String","UseSubmit","currentRouteId","useRouteId","options","getFormSubmissionInfo","fetch","formEncType","fromRouteId","routeContext","RouteContext","match","matches","slice","params","get","toString","route","index","joinPaths","useFetcher","UseFetcher","routeId","id","defaultKey","setFetcherKey","getFetcher","deleteFetcher","load","submitImpl","FetcherForm","IDLE_FETCHER","fetcherWithComponents","useFetchers","UseFetchers","from","SCROLL_RESTORATION_STORAGE_KEY","savedScrollPositions","UseScrollRestoration","restoreScrollPosition","useMatches","useNavigation","scrollRestoration","usePageHide","scrollY","sessionStorage","setItem","JSON","stringify","sessionPositions","getItem","parse","getKeyWithoutBasename","_extends","disableScrollRestoration","enableScrollRestoration","scrollTo","el","getElementById","decodeURIComponent","scrollIntoView","callback","capture","addEventListener","removeEventListener","usePrompt","when","blocker","useBlocker","proceed","confirm","setTimeout","reset","currentPath","nextPath","matchPath"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAOO,IAAMA,aAAa,GAAmB,KAAtC;AACP,IAAMC,cAAc,GAAgB,mCAApC;;AAEM,SAAUC,aAAV,CAAwBC,MAAxB,EAAmC;AACvC,SAAOA,MAAM,IAAI,IAAVA,IAAkB,OAAOA,MAAM,CAACC,OAAd,KAA0B,QAAnD;AACF;;AAEM,SAAUC,eAAV,CAA0BF,MAA1B,EAAqC;AACzC,SAAOD,aAAa,CAACC,MAAD,CAAbD,IAAyBC,MAAM,CAACC,OAAPD,CAAeG,WAAfH,OAAiC,QAAjE;AACF;;AAEM,SAAUI,aAAV,CAAwBJ,MAAxB,EAAmC;AACvC,SAAOD,aAAa,CAACC,MAAD,CAAbD,IAAyBC,MAAM,CAACC,OAAPD,CAAeG,WAAfH,OAAiC,MAAjE;AACF;;AAEM,SAAUK,cAAV,CAAyBL,MAAzB,EAAoC;AACxC,SAAOD,aAAa,CAACC,MAAD,CAAbD,IAAyBC,MAAM,CAACC,OAAPD,CAAeG,WAAfH,OAAiC,OAAjE;AACF;;AAOA,SAASM,eAAT,CAAyBC,KAAzB,EAAiD;AAC/C,SAAO,CAAC,EAAEA,KAAK,CAACC,OAAND,IAAiBA,KAAK,CAACE,MAAvBF,IAAiCA,KAAK,CAACG,OAAvCH,IAAkDA,KAAK,CAACI,QAA1D,CAAR;AACF;;AAEgB,SAAA,sBAAA,CACdJ,KADc,EAEdK,MAFc,EAEC;AAEf,SACEL,KAAK,CAACM,MAANN,KAAiB,CAAjBA,MAAsB;AACrB,GAACK,MAAD,IAAWA,MAAM,KAAK,OADvBL,KACmC;AACnC,GAACD,eAAe,CAACC,KAAD,CAHlB,CAGyB;AAHzB;AAKF;AAUA;;;;;;;;;;;;;;;;;;;;;;;AAqBgB,SAAA,kBAAA,CACdO,IADc,EACgB;AAAA,MAA9BA,IAAAA,KAAAA,KAAAA,CAA8B,EAA9BA;AAAAA,IAAAA,IAAAA,GAA4B,EAA5BA;AAA8B;;AAE9B,SAAO,IAAIC,eAAJ,CACL,OAAOD,IAAP,KAAgB,QAAhB,IACAE,KAAK,CAACC,OAAND,CAAcF,IAAdE,CADA,IAEAF,IAAI,YAAYC,eAFhB,GAGID,IAHJ,GAIII,MAAM,CAACC,IAAPD,CAAYJ,IAAZI,EAAkBE,MAAlBF,CAAyB,UAACG,IAAD,EAAOC,GAAP,EAAc;AACrC,QAAIC,KAAK,GAAGT,IAAI,CAACQ,GAAD,CAAhB;AACA,WAAOD,IAAI,CAACG,MAALH,CACLL,KAAK,CAACC,OAAND,CAAcO,KAAdP,IAAuBO,KAAK,CAACE,GAANF,CAAWG,UAAAA,CAAC;AAAA,aAAK,CAACJ,GAAD,EAAMI,CAAN,CAAL;AAAA,KAAZH,CAAvBP,GAAoD,CAAC,CAACM,GAAD,EAAMC,KAAN,CAAD,CAD/CF,CAAP;AAGD,GALDH,EAKG,EALHA,CALC,CAAP;AAYF;;AAEgB,SAAA,0BAAA,CACdS,cADc,EAEdC,mBAFc,EAE6B;AAE3C,MAAIC,YAAY,GAAGC,kBAAkB,CAACH,cAAD,CAArC;;AAEA,MAAIC,mBAAJ,EAAyB;AACvB;AACA;AACA;AACA;AACA;AACAA,IAAAA,mBAAmB,CAACG,OAApBH,CAA4B,UAACI,CAAD,EAAIV,GAAJ,EAAW;AACrC,UAAI,CAACO,YAAY,CAACI,GAAbJ,CAAiBP,GAAjBO,CAAL,EAA4B;AAC1BD,QAAAA,mBAAmB,CAACM,MAApBN,CAA2BN,GAA3BM,EAAgCG,OAAhCH,CAAyCL,UAAAA,KAAK,EAAI;AAChDM,UAAAA,YAAY,CAACM,MAAbN,CAAoBP,GAApBO,EAAyBN,KAAzBM;AACD,SAFDD;AAGD;AACF,KANDA;AAOD;;AAED,SAAOC,YAAP;AACF,C,CAmBA;;;AACA,IAAIO,0BAA0B,GAAmB,IAAjD;;AAEA,SAASC,4BAAT,GAAqCA;AACnC,MAAID,0BAA0B,KAAK,IAAnC,EAAyC;AACvC,QAAI;AACF,UAAIE,QAAJ,CACEC,QAAQ,CAACC,aAATD,CAAuB,MAAvBA,CADF,EAEE;AACA,OAHF;AAKAH,MAAAA,0BAA0B,GAAG,KAA7BA;AACD,KAPD,CAOE,OAAOK,CAAP,EAAU;AACVL,MAAAA,0BAA0B,GAAG,IAA7BA;AACD;AACF;;AACD,SAAOA,0BAAP;AACF;;AAgFA,IAAMM,qBAAqB,GAAqB,IAAIC,GAAJ,CAAQ,CACtD,mCADsD,EAEtD,qBAFsD,EAGtD,YAHsD,CAAR,CAAhD;;AAMA,SAASC,cAAT,CAAwBC,OAAxB,EAA8C;AAC5C,MAAIA,OAAO,IAAI,IAAXA,IAAmB,CAACH,qBAAqB,CAACT,GAAtBS,CAA0BG,OAA1BH,CAAxB,EAA2E;AACzEI,IAAAA,OAAAA,CAAAA,GAAAA,CAAAA,QAAAA,KAAAA,YAAAA,GAAAA,cAAO,CACL,KADK,EAEL,OAAID,OAAJ,GAC0B/C,4DAD1B,IAC0BA,2BAAAA,cAAAA,GAAc,IADxC,CAFK,CAAPgD,GAIC,KAAA,CAJDA;AAMA,WAAO,IAAP;AACD;;AACD,SAAOD,OAAP;AACF;;AAEgB,SAAA,qBAAA,CACdjC,MADc,EAEdmC,QAFc,EAEE;AAQhB,MAAIC,MAAJ;AACA,MAAIC,MAAJ;AACA,MAAIJ,OAAJ;AACA,MAAIK,QAAJ;AACA,MAAIC,IAAJ;;AAEA,MAAI/C,aAAa,CAACQ,MAAD,CAAjB,EAA2B;AACzB;AACA;AACA;AACA,QAAIwC,IAAI,GAAGxC,MAAM,CAACyC,YAAPzC,CAAoB,QAApBA,CAAX;AACAqC,IAAAA,MAAM,GAAGG,IAAI,GAAGE,aAAa,CAACF,IAAD,EAAOL,QAAP,CAAhB,GAAmC,IAAhDE;AACAD,IAAAA,MAAM,GAAGpC,MAAM,CAACyC,YAAPzC,CAAoB,QAApBA,KAAiCf,aAA1CmD;AACAH,IAAAA,OAAO,GAAGD,cAAc,CAAChC,MAAM,CAACyC,YAAPzC,CAAoB,SAApBA,CAAD,CAAdgC,IAAkD9C,cAA5D+C;AAEAK,IAAAA,QAAQ,GAAG,IAAIZ,QAAJ,CAAa1B,MAAb,CAAXsC;AACD,GAVD,MAUO,IACLhD,eAAe,CAACU,MAAD,CAAfV,IACCG,cAAc,CAACO,MAAD,CAAdP,KACEO,MAAM,CAAC2C,IAAP3C,KAAgB,QAAhBA,IAA4BA,MAAM,CAAC2C,IAAP3C,KAAgB,OAD9CP,CAFI,EAIL;AACA,QAAImD,IAAI,GAAG5C,MAAM,CAAC4C,IAAlB;;AAEA,QAAIA,IAAI,IAAI,IAAZ,EAAkB;AAChB,YAAM,IAAIC,KAAJ,CAAS,sEAAT,CAAN;AAGD,KAPD,CASA;AAEA;AACA;AACA;;;AACA,QAAIL,KAAI,GAAGxC,MAAM,CAACyC,YAAPzC,CAAoB,YAApBA,KAAqC4C,IAAI,CAACH,YAALG,CAAkB,QAAlBA,CAAhD;;AACAP,IAAAA,MAAM,GAAGG,KAAI,GAAGE,aAAa,CAACF,KAAD,EAAOL,QAAP,CAAhB,GAAmC,IAAhDE;AAEAD,IAAAA,MAAM,GACJpC,MAAM,CAACyC,YAAPzC,CAAoB,YAApBA,KACA4C,IAAI,CAACH,YAALG,CAAkB,QAAlBA,CADA5C,IAEAf,aAHFmD;AAIAH,IAAAA,OAAO,GACLD,cAAc,CAAChC,MAAM,CAACyC,YAAPzC,CAAoB,aAApBA,CAAD,CAAdgC,IACAA,cAAc,CAACY,IAAI,CAACH,YAALG,CAAkB,SAAlBA,CAAD,CADdZ,IAEA9C,cAHF+C,CArBA,CA0BA;;AACAK,IAAAA,QAAQ,GAAG,IAAIZ,QAAJ,CAAakB,IAAb,EAAmB5C,MAAnB,CAAXsC,CA3BA,CA6BA;AACA;AACA;AACA;;AACA,QAAI,CAACb,4BAA4B,EAAjC,EAAqC;AAAA,UAC7BqB,IAD6B,GACP9C,MADO,CAC7B8C,IAD6B;AAAA,UACvBH,IADuB,GACP3C,MADO,CACvB2C,IADuB;AAAA,UACjBhC,KADiB,GACPX,MADO,CACjBW,KADiB;;AAEnC,UAAIgC,IAAI,KAAK,OAAb,EAAsB;AACpB,YAAII,MAAM,GAAGD,IAAI,GAAMA,IAAI,GAAA,GAAV,GAAgB,EAAjC;AACAR,QAAAA,QAAQ,CAACf,MAATe,CAAmBS,MAAM,GAAA,GAAzBT,EAA8B,GAA9BA;AACAA,QAAAA,QAAQ,CAACf,MAATe,CAAmBS,MAAM,GAAA,GAAzBT,EAA8B,GAA9BA;AACD,OAJD,MAIO,IAAIQ,IAAJ,EAAU;AACfR,QAAAA,QAAQ,CAACf,MAATe,CAAgBQ,IAAhBR,EAAsB3B,KAAtB2B;AACD;AACF;AACF,GA/CM,MA+CA,IAAInD,aAAa,CAACa,MAAD,CAAjB,EAA2B;AAChC,UAAM,IAAI6C,KAAJ,CACJ,4DAAA,+BADI,CAAN;AAID,GALM,MAKA;AACLT,IAAAA,MAAM,GAAGnD,aAATmD;AACAC,IAAAA,MAAM,GAAG,IAATA;AACAJ,IAAAA,OAAO,GAAG/C,cAAV+C;AACAM,IAAAA,IAAI,GAAGvC,MAAPuC;AACD,GAjFe,CAmFhB;;;AACA,MAAID,QAAQ,IAAIL,OAAO,KAAK,YAA5B,EAA0C;AACxCM,IAAAA,IAAI,GAAGD,QAAPC;AACAD,IAAAA,QAAQ,GAAGU,SAAXV;AACD;;AAED,SAAO;AAAED,IAAAA,MAAM,EAANA,MAAF;AAAUD,IAAAA,MAAM,EAAEA,MAAM,CAAC7C,WAAP6C,EAAlB;AAAwCH,IAAAA,OAAO,EAAPA,OAAxC;AAAiDK,IAAAA,QAAQ,EAARA,QAAjD;AAA2DC,IAAAA,IAAAA,EAAAA;AAA3D,GAAP;AACF;;;;gLCvGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAAA,IAAA,oBAAA,GAAA,GAAA;;AAEA,IAAI;AACFU,EAAAA,MAAM,CAACC,oBAAPD,GAA8BE,oBAA9BF;AACD,CAFD,CAEE,OAAOpB,CAAP,EAAU,CACV;AAAA;;AAgBc,SAAA,mBAAA,CACduB,MADc,EAEdC,IAFc,EAEM;AAEpB,SAAOC,YAAY,CAAC;AAClBnB,IAAAA,QAAQ,EAAEkB,IAAI,IAAJA,IAAAA,GAAAA,KAAAA,CAAAA,GAAAA,IAAI,CAAElB,QADE;AAElBoB,IAAAA,MAAM,EAAA,QAAA,CAAA,EAAA,EACDF,IAAI,IAAJA,IAAAA,GAAAA,KAAAA,CAAAA,GAAAA,IAAI,CAAEE,MADL,EACW;AACfC,MAAAA,kBAAkB,EAAE;AADL,KADX,CAFY;AAMlBC,IAAAA,OAAO,EAAEC,oBAAoB,CAAC;AAAET,MAAAA,MAAM,EAAEI,IAAI,IAAJA,IAAAA,GAAAA,KAAAA,CAAAA,GAAAA,IAAI,CAAEJ;AAAhB,KAAD,CANX;AAOlBU,IAAAA,aAAa,EAAE,CAAA,IAAI,IAAJ,IAAA,GAAA,KAAA,CAAA,GAAA,IAAI,CAAEA,aAAN,KAAuBC,kBAAkB,EAPtC;AAQlBR,IAAAA,MAAM,EAANA,MARkB;wBASlBS,yBATkB;AAUlBC,IAAAA,qBAAqB,EAAET,IAAI,IAAJA,IAAAA,GAAAA,KAAAA,CAAAA,GAAAA,IAAI,CAAES,qBAVX;AAWlBC,IAAAA,0BAA0B,EAAEV,IAAI,IAAJA,IAAAA,GAAAA,KAAAA,CAAAA,GAAAA,IAAI,CAAEU,0BAXhB;AAYlBd,IAAAA,MAAM,EAAEI,IAAI,IAAJA,IAAAA,GAAAA,KAAAA,CAAAA,GAAAA,IAAI,CAAEJ;AAZI,GAAD,CAAZK,CAaJU,UAbIV,EAAP;AAcF;;AAEgB,SAAA,gBAAA,CACdF,MADc,EAEdC,IAFc,EAEM;AAEpB,SAAOC,YAAY,CAAC;AAClBnB,IAAAA,QAAQ,EAAEkB,IAAI,IAAJA,IAAAA,GAAAA,KAAAA,CAAAA,GAAAA,IAAI,CAAElB,QADE;AAElBoB,IAAAA,MAAM,EAAA,QAAA,CAAA,EAAA,EACDF,IAAI,IAAJA,IAAAA,GAAAA,KAAAA,CAAAA,GAAAA,IAAI,CAAEE,MADL,EACW;AACfC,MAAAA,kBAAkB,EAAE;AADL,KADX,CAFY;AAMlBC,IAAAA,OAAO,EAAEQ,iBAAiB,CAAC;AAAEhB,MAAAA,MAAM,EAAEI,IAAI,IAAJA,IAAAA,GAAAA,KAAAA,CAAAA,GAAAA,IAAI,CAAEJ;AAAhB,KAAD,CANR;AAOlBU,IAAAA,aAAa,EAAE,CAAA,IAAI,IAAJ,IAAA,GAAA,KAAA,CAAA,GAAA,IAAI,CAAEA,aAAN,KAAuBC,kBAAkB,EAPtC;AAQlBR,IAAAA,MAAM,EAANA,MARkB;wBASlBS,yBATkB;AAUlBC,IAAAA,qBAAqB,EAAET,IAAI,IAAJA,IAAAA,GAAAA,KAAAA,CAAAA,GAAAA,IAAI,CAAES,qBAVX;AAWlBC,IAAAA,0BAA0B,EAAEV,IAAI,IAAJA,IAAAA,GAAAA,KAAAA,CAAAA,GAAAA,IAAI,CAAEU,0BAXhB;AAYlBd,IAAAA,MAAM,EAAEI,IAAI,IAAJA,IAAAA,GAAAA,KAAAA,CAAAA,GAAAA,IAAI,CAAEJ;AAZI,GAAD,CAAZK,CAaJU,UAbIV,EAAP;AAcF;;AAEA,SAASM,kBAAT,GAA2B;AAAA,MAAA,OAAA;;AACzB,MAAIM,KAAK,GAAA,CAAA,OAAA,GAAGjB,MAAH,KAAGA,IAAH,GAAGA,KAAAA,CAAH,GAAGA,OAAAA,CAAQkB,2BAApB;;AACA,MAAID,KAAK,IAAIA,KAAK,CAACE,MAAnB,EAA2B;AACzBF,IAAAA,KAAK,GAAA,QAAA,CAAA,EAAA,EACAA,KADA,EACK;AACRE,MAAAA,MAAM,EAAEC,iBAAiB,CAACH,KAAK,CAACE,MAAP;AADjB,KADL,CAALF;AAID;;AACD,SAAOA,KAAP;AACF;;AAEA,SAASG,iBAAT,CACED,MADF,EACwC;AAEtC,MAAI,CAACA,MAAL,EAAa,OAAO,IAAP;AACb,MAAIE,OAAO,GAAGhE,MAAM,CAACgE,OAAPhE,CAAe8D,MAAf9D,CAAd;AACA,MAAIiE,UAAU,GAAmC,EAAjD;;AACA,8BAAuBD,OAAvB,8BAAgC;AAAA;AAAA,QAAtB5D,GAAsB;AAAA,QAAjB8D,GAAiB;;AAC9B;AACA;AACA,QAAIA,GAAG,IAAIA,GAAG,CAACC,MAAJD,KAAe,oBAA1B,EAAgD;AAC9CD,MAAAA,UAAU,CAAC7D,GAAD,CAAV6D,GAAkB,IAAIG,wBAAJ,CAChBF,GAAG,CAACG,MADY,EAEhBH,GAAG,CAACI,UAFY,EAGhBJ,GAAG,CAACK,IAHY,EAIhBL,GAAG,CAACM,QAAJN,KAAiB,IAJD,CAAlBD;AAMD,KAPD,MAOO,IAAIC,GAAG,IAAIA,GAAG,CAACC,MAAJD,KAAe,OAA1B,EAAmC;AACxC;AACA,UAAIA,GAAG,CAACO,SAAR,EAAmB;AACjB,YAAIC,gBAAgB,GAAG/B,MAAM,CAACuB,GAAG,CAACO,SAAL,CAA7B;;AACA,YAAI,OAAOC,gBAAP,KAA4B,UAAhC,EAA4C;AAC1C,cAAI;AACF;AACA,gBAAIC,KAAK,GAAG,IAAID,gBAAJ,CAAqBR,GAAG,CAACU,OAAzB,CAAZ,CAFE,CAGF;AACA;;AACAD,YAAAA,KAAK,CAACE,KAANF,GAAc,EAAdA;AACAV,YAAAA,UAAU,CAAC7D,GAAD,CAAV6D,GAAkBU,KAAlBV;AACD,WAPD,CAOE,OAAO1C,CAAP,EAAU,CACV;AAAA;AAEH;AACF;;AAED,UAAI0C,UAAU,CAAC7D,GAAD,CAAV6D,IAAmB,IAAvB,EAA6B;AAC3B,YAAIU,MAAK,GAAG,IAAIpC,KAAJ,CAAU2B,GAAG,CAACU,OAAd,CAAZ,CAD2B,CAE3B;AACA;;;AACAD,QAAAA,MAAK,CAACE,KAANF,GAAc,EAAdA;AACAV,QAAAA,UAAU,CAAC7D,GAAD,CAAV6D,GAAkBU,MAAlBV;AACD;AACF,KAzBM,MAyBA;AACLA,MAAAA,UAAU,CAAC7D,GAAD,CAAV6D,GAAkBC,GAAlBD;AACD;AACF;;AACD,SAAOA,UAAP;AACF;;AAmBA,IAAMa,qBAAqB,GAAA,aAAGC,KAAK,CAACC,aAAND,CAAiD;AAC7EE,EAAAA,eAAe,EAAE;AAD4D,CAAjDF,CAA9B;;AAGA,IAAA,OAAA,CAAA,GAAA,CAAA,QAAA,KAAa,YAAb,EAAa;AACXD,EAAAA,qBAAqB,CAACI,WAAtBJ,GAAoC,gBAApCA;AACD;;AAOKK,IAAAA,eAAe,GAAA,aAAGJ,KAAK,CAACC,aAAND,CAA2C,IAAIK,GAAJ,EAA3CL,CAAlBI;;AACN,IAAA,OAAA,CAAA,GAAA,CAAA,QAAA,KAAa,YAAb,EAAa;AACXA,EAAAA,eAAe,CAACD,WAAhBC,GAA8B,UAA9BA;AACD,C,CAID;AAEA;AACA;AACA;;AAEA;;;;;;;;;;;;;;;;;;;;;;;AAqBA,IAAME,gBAAgB,GAAG,iBAAzB;AACA,IAAMC,mBAAmB,GAAGP,KAAK,CAACM,gBAAD,CAAjC;AACA,IAAME,UAAU,GAAG,WAAnB;AACA,IAAMC,aAAa,GAAGC,QAAQ,CAACF,UAAD,CAA9B;AACA,IAAMG,MAAM,GAAG,OAAf;AACA,IAAMC,SAAS,GAAGZ,KAAK,CAACW,MAAD,CAAvB;;AAEA,SAASE,mBAAT,CAA6BC,EAA7B,EAA2C;AACzC,MAAIP,mBAAJ,EAAyB;AACvBA,IAAAA,mBAAmB,CAACO,EAAD,CAAnBP;AACD,GAFD,MAEO;AACLO,IAAAA,EAAE;AACH;AACH;;AAEA,SAASC,aAAT,CAAuBD,EAAvB,EAAqC;AACnC,MAAIL,aAAJ,EAAmB;AACjBA,IAAAA,aAAa,CAACK,EAAD,CAAbL;AACD,GAFD,MAEO;AACLK,IAAAA,EAAE;AACH;AACH;;IASME,Q,GAOJC,oBAAAA;AAAAA;;AAAAA;;AANA,OAAM,MAAN,GAA8C,SAA9C;AAOE,OAAKC,OAAL,GAAe,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAoB;AAC7C,IAAA,KAAI,CAACD,OAAL,GAAgB9F,UAAAA,KAAK,EAAI;AACvB,UAAI,KAAI,CAACgE,MAAL,KAAgB,SAApB,EAA+B;AAC7B,QAAA,KAAI,CAACA,MAAL,GAAc,UAAd;AACA8B,QAAAA,OAAO,CAAC9F,KAAD,CAAP8F;AACD;AACF,KALD;;AAMA,IAAA,KAAI,CAACC,MAAL,GAAeC,UAAAA,MAAM,EAAI;AACvB,UAAI,KAAI,CAAChC,MAAL,KAAgB,SAApB,EAA+B;AAC7B,QAAA,KAAI,CAACA,MAAL,GAAc,UAAd;AACA+B,QAAAA,MAAM,CAACC,MAAD,CAAND;AACD;AACF,KALD;AAMD,GAbc,CAAf;AAcF,C;AAGF;;;;;AAGM,SAAUE,cAAV,CAAwBA,IAAxB,EAIgB;AAAA,MAHpBC,eAGoB,GAAA,IAAA,CAHpBA,eAGoB;AAAA,MAFpBC,MAEoB,GAAA,IAAA,CAFpBA,MAEoB;AAAA,MADpBvD,MACoB,GAAA,IAAA,CADpBA,MACoB;;AAAA,wBACQ8B,KAAK,CAAC2B,QAAN3B,CAAeyB,MAAM,CAAC5C,KAAtBmB,CADR;AAAA;AAAA,MACfnB,KADe;AAAA,MACR6C,YADQ;;AAAA,yBAEkB1B,KAAK,CAAC2B,QAAN3B,EAFlB;AAAA;AAAA,MAEf4B,YAFe;AAAA,MAEDC,eAFC;;AAAA,yBAGY7B,KAAK,CAAC2B,QAAN3B,CAA4C;AAC1EE,IAAAA,eAAe,EAAE;AADyD,GAA5CF,CAHZ;AAAA;AAAA,MAGf8B,SAHe;AAAA,MAGJC,YAHI;;AAAA,yBAMY/B,KAAK,CAAC2B,QAAN3B,EANZ;AAAA;AAAA,MAMfgC,SANe;AAAA,MAMJC,YANI;;AAAA,yBAOcjC,KAAK,CAAC2B,QAAN3B,EAPd;AAAA;AAAA,MAOfkC,UAPe;AAAA,MAOHC,aAPG;;AAAA,0BAQkBnC,KAAK,CAAC2B,QAAN3B,EARlB;AAAA;AAAA,MAQfoC,YARe;AAAA,MAQDC,eARC;;AAapB,MAAIC,WAAW,GAAGtC,KAAK,CAACuC,MAANvC,CAA+B,IAAIK,GAAJ,EAA/BL,CAAlB;;AAboB,eAcS9B,MAAM,IAAI,EAdnB;AAAA,MAcdsE,kBAdc,UAcdA,kBAdc;;AAgBpB,MAAIC,oBAAoB,GAAGzC,KAAK,CAAC0C,WAAN1C,CACxBc,UAAAA,EAAc,EAAI;AACjB,QAAI0B,kBAAJ,EAAwB;AACtB3B,MAAAA,mBAAmB,CAACC,EAAD,CAAnBD;AACD,KAFD,MAEO;AACLC,MAAAA,EAAE;AACH;AACF,GAPwBd,EAQzB,CAACwC,kBAAD,CARyBxC,CAA3B;AAWA,MAAI2C,QAAQ,GAAG3C,KAAK,CAAC0C,WAAN1C,CACb,UACE4C,QADF,EACuB,KADvB,EAOI;AAAA,QAJAC,eAIA,GADD,KACC,CAJAA,eAIA;AAAA,QAHoBE,SAGpB,GADD,KACC,CAHAD,kBAGA;AAAA,QAF6BG,kBAE7B,GADD,KACC,CAFAD,2BAEA;AACFH,IAAAA,eAAe,CAAC/G,OAAhB+G,CAAyBxH,UAAAA,GAAG;AAAA,aAAKiH,WAAW,CAACY,OAAZZ,CAAoBa,MAApBb,CAA2BjH,GAA3BiH,CAAL;AAAA,KAA5BO;AACAD,IAAAA,QAAQ,CAACQ,QAATR,CAAkB9G,OAAlB8G,CAA0B,UAACS,OAAD,EAAUhI,GAAV,EAAiB;AACzC,UAAIgI,OAAO,CAAC7D,IAAR6D,KAAiB1F,SAArB,EAAgC;AAC9B2E,QAAAA,WAAW,CAACY,OAAZZ,CAAoBgB,GAApBhB,CAAwBjH,GAAxBiH,EAA6Be,OAAO,CAAC7D,IAArC8C;AACD;AACF,KAJDM;AAMA,QAAIW,2BAA2B,GAC7B9B,MAAM,CAAC7D,MAAP6D,IAAiB,IAAjBA,IACAA,MAAM,CAAC7D,MAAP6D,CAAcnF,QAAdmF,IAA0B,IAD1BA,IAEA,OAAOA,MAAM,CAAC7D,MAAP6D,CAAcnF,QAAdmF,CAAuB+B,mBAA9B,KAAsD,UAHxD,CARE,CAaF;AACA;;AACA,QAAI,CAACP,kBAAD,IAAuBM,2BAA3B,EAAwD;AACtD,UAAIR,SAAJ,EAAe;AACbhC,QAAAA,aAAa,CAAC;AAAA,iBAAMW,YAAY,CAACkB,QAAD,CAAlB;AAAA,SAAD,CAAb7B;AACD,OAFD,MAEO;AACL0B,QAAAA,oBAAoB,CAAC;AAAA,iBAAMf,YAAY,CAACkB,QAAD,CAAlB;AAAA,SAAD,CAApBH;AACD;;AACD;AACD,KAtBC,CAwBF;;;AACA,QAAIM,SAAJ,EAAe;AACb;AACAhC,MAAAA,aAAa,CAAC,YAAK;AACjB;AACA,YAAImB,UAAJ,EAAgB;AACdF,UAAAA,SAAS,IAAIA,SAAS,CAACZ,OAAVY,EAAbA;AACAE,UAAAA,UAAU,CAACuB,cAAXvB;AACD;;AACDH,QAAAA,YAAY,CAAC;AACX7B,UAAAA,eAAe,EAAE,IADN;AAEX6C,UAAAA,SAAS,EAAE,IAFA;AAGXW,UAAAA,eAAe,EAAET,kBAAkB,CAACS,eAHzB;AAIXC,UAAAA,YAAY,EAAEV,kBAAkB,CAACU;AAJtB,SAAD,CAAZ5B;AAMD,OAZY,CAAbhB,CAFa,CAgBb;;AACA,UAAI6C,CAAC,GAAGnC,MAAM,CAAC7D,MAAP6D,CAAenF,QAAfmF,CAAwB+B,mBAAxB/B,CAA4C,YAAK;AACvDV,QAAAA,aAAa,CAAC;AAAA,iBAAMW,YAAY,CAACkB,QAAD,CAAlB;AAAA,SAAD,CAAb7B;AACD,OAFOU,CAAR,CAjBa,CAqBb;;AACAmC,MAAAA,CAAC,CAACC,QAAFD,CAAWE,OAAXF,CAAmB,YAAK;AACtB7C,QAAAA,aAAa,CAAC,YAAK;AACjBkB,UAAAA,YAAY,CAACtE,SAAD,CAAZsE;AACAE,UAAAA,aAAa,CAACxE,SAAD,CAAbwE;AACAN,UAAAA,eAAe,CAAClE,SAAD,CAAfkE;AACAE,UAAAA,YAAY,CAAC;AAAE7B,YAAAA,eAAe,EAAE;AAAnB,WAAD,CAAZ6B;AACD,SALY,CAAbhB;AAMD,OAPD6C;AASA7C,MAAAA,aAAa,CAAC;AAAA,eAAMoB,aAAa,CAACyB,CAAD,CAAnB;AAAA,OAAD,CAAb7C;AACA;AACD,KA1DC,CA4DF;;;AACA,QAAImB,UAAJ,EAAgB;AACd;AACA;AACAF,MAAAA,SAAS,IAAIA,SAAS,CAACZ,OAAVY,EAAbA;AACAE,MAAAA,UAAU,CAACuB,cAAXvB;AACAG,MAAAA,eAAe,CAAC;AACdxD,QAAAA,KAAK,EAAE+D,QADO;AAEdc,QAAAA,eAAe,EAAET,kBAAkB,CAACS,eAFtB;AAGdC,QAAAA,YAAY,EAAEV,kBAAkB,CAACU;AAHnB,OAAD,CAAftB;AAKD,KAVD,MAUO;AACL;AACAR,MAAAA,eAAe,CAACe,QAAD,CAAff;AACAE,MAAAA,YAAY,CAAC;AACX7B,QAAAA,eAAe,EAAE,IADN;AAEX6C,QAAAA,SAAS,EAAE,KAFA;AAGXW,QAAAA,eAAe,EAAET,kBAAkB,CAACS,eAHzB;AAIXC,QAAAA,YAAY,EAAEV,kBAAkB,CAACU;AAJtB,OAAD,CAAZ5B;AAMD;AACF,GAzFY/B,EA0Fb,CAACyB,MAAM,CAAC7D,MAAR,EAAgBsE,UAAhB,EAA4BF,SAA5B,EAAuCM,WAAvC,EAAoDG,oBAApD,CA1FazC,CAAf,CA3BoB,CAwHpB;AACA;;AACAA,EAAAA,KAAK,CAAC+D,eAAN/D,CAAsB;AAAA,WAAMyB,MAAM,CAACuC,SAAPvC,CAAiBkB,QAAjBlB,CAAN;AAAA,GAAtBzB,EAAwD,CAACyB,MAAD,EAASkB,QAAT,CAAxD3C,EA1HoB,CA4HpB;AACA;;AACAA,EAAAA,KAAK,CAACiE,SAANjE,CAAgB,YAAK;AACnB,QAAI8B,SAAS,CAAC5B,eAAV4B,IAA6B,CAACA,SAAS,CAACiB,SAA5C,EAAuD;AACrDd,MAAAA,YAAY,CAAC,IAAIjB,QAAJ,EAAD,CAAZiB;AACD;AACF,GAJDjC,EAIG,CAAC8B,SAAD,CAJH9B,EA9HoB,CAoIpB;AACA;AACA;;AACAA,EAAAA,KAAK,CAACiE,SAANjE,CAAgB,YAAK;AACnB,QAAIgC,SAAS,IAAIJ,YAAbI,IAA6BP,MAAM,CAAC7D,MAAxC,EAAgD;AAC9C,UAAIgF,QAAQ,GAAGhB,YAAf;AACA,UAAIsC,aAAa,GAAGlC,SAAS,CAACd,OAA9B;;AACA,UAAIgB,WAAU,GAAGT,MAAM,CAAC7D,MAAP6D,CAAcnF,QAAdmF,CAAuB+B,mBAAvB/B,wEAA2C;AAAA;AAAA;AAAA;AAAA;AAC1DgB,gBAAAA,oBAAoB,CAAC;AAAA,yBAAMf,YAAY,CAACkB,QAAD,CAAlB;AAAA,iBAAD,CAApBH;AAD0D;AAAA,uBAEpDyB,aAFoD;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA3CzC,GAAjB;;AAIAS,MAAAA,WAAU,CAAC2B,QAAX3B,CAAoB4B,OAApB5B,CAA4B,YAAK;AAC/BD,QAAAA,YAAY,CAACtE,SAAD,CAAZsE;AACAE,QAAAA,aAAa,CAACxE,SAAD,CAAbwE;AACAN,QAAAA,eAAe,CAAClE,SAAD,CAAfkE;AACAE,QAAAA,YAAY,CAAC;AAAE7B,UAAAA,eAAe,EAAE;AAAnB,SAAD,CAAZ6B;AACD,OALDG;;AAMAC,MAAAA,aAAa,CAACD,WAAD,CAAbC;AACD;AACF,GAhBDnC,EAgBG,CAACyC,oBAAD,EAAuBb,YAAvB,EAAqCI,SAArC,EAAgDP,MAAM,CAAC7D,MAAvD,CAhBHoC,EAvIoB,CAyJpB;AACA;;AACAA,EAAAA,KAAK,CAACiE,SAANjE,CAAgB,YAAK;AACnB,QACEgC,SAAS,IACTJ,YADAI,IAEAnD,KAAK,CAACsF,QAANtF,CAAexD,GAAfwD,KAAuB+C,YAAY,CAACuC,QAAbvC,CAAsBvG,GAH/C,EAIE;AACA2G,MAAAA,SAAS,CAACZ,OAAVY;AACD;AACF,GARDhC,EAQG,CAACgC,SAAD,EAAYE,UAAZ,EAAwBrD,KAAK,CAACsF,QAA9B,EAAwCvC,YAAxC,CARH5B,EA3JoB,CAqKpB;AACA;;AACAA,EAAAA,KAAK,CAACiE,SAANjE,CAAgB,YAAK;AACnB,QAAI,CAAC8B,SAAS,CAAC5B,eAAX,IAA8BkC,YAAlC,EAAgD;AAC9CP,MAAAA,eAAe,CAACO,YAAY,CAACvD,KAAd,CAAfgD;AACAE,MAAAA,YAAY,CAAC;AACX7B,QAAAA,eAAe,EAAE,IADN;AAEX6C,QAAAA,SAAS,EAAE,KAFA;AAGXW,QAAAA,eAAe,EAAEtB,YAAY,CAACsB,eAHnB;AAIXC,QAAAA,YAAY,EAAEvB,YAAY,CAACuB;AAJhB,OAAD,CAAZ5B;AAMAM,MAAAA,eAAe,CAAC1E,SAAD,CAAf0E;AACD;AACF,GAXDrC,EAWG,CAAC8B,SAAS,CAAC5B,eAAX,EAA4BkC,YAA5B,CAXHpC;AAaAA,EAAAA,KAAK,CAACiE,SAANjE,CAAgB,YAAK;AACnBnD,IAAAA,OAAAA,CAAAA,GAAAA,CAAAA,QAAAA,KAAAA,YAAAA,GAAAA,cAAO,CACL2E,eAAe,IAAI,IAAnBA,IAA2B,CAACC,MAAM,CAACvD,MAAPuD,CAAc2C,mBADrC,EAEL,iEACE,kEAHG,CAAPvH,GAIC,KAAA,CAJDA,CADmB,CAMnB;AACA;AACD,GARDmD,EAQG,EARHA;AAUA,MAAIqE,SAAS,GAAGrE,KAAK,CAACsE,OAANtE,CAAc,YAAgB;AAC5C,WAAO;AACLuE,MAAAA,UAAU,EAAE9C,MAAM,CAAC8C,UADd;AAELC,MAAAA,cAAc,EAAE/C,MAAM,CAAC+C,cAFlB;AAGLC,MAAAA,EAAE,EAAGC,YAAAA,CAAC;AAAA,eAAKjD,MAAM,CAACkD,QAAPlD,CAAgBiD,CAAhBjD,CAAL;AAAA,OAHD;AAILmD,MAAAA,IAAI,EAAEA,cAACC,EAADD,EAAK/F,KAAL+F,EAAY5G,IAAZ4G;AAAAA,eACJnD,MAAM,CAACkD,QAAPlD,CAAgBoD,EAAhBpD,EAAoB;AAClB5C,UAAAA,KAAK,EAALA,KADkB;AAElBiG,UAAAA,kBAAkB,EAAE9G,IAAI,IAAJA,IAAAA,GAAAA,KAAAA,CAAAA,GAAAA,IAAI,CAAE8G;AAFR,SAApBrD,CADImD;AAAAA,OAJD;AASLG,MAAAA,OAAO,EAAEA,iBAACF,EAADE,EAAKlG,KAALkG,EAAY/G,IAAZ+G;AAAAA,eACPtD,MAAM,CAACkD,QAAPlD,CAAgBoD,EAAhBpD,EAAoB;AAClBsD,UAAAA,OAAO,EAAE,IADS;AAElBlG,UAAAA,KAAK,EAALA,KAFkB;AAGlBiG,UAAAA,kBAAkB,EAAE9G,IAAI,IAAJA,IAAAA,GAAAA,KAAAA,CAAAA,GAAAA,IAAI,CAAE8G;AAHR,SAApBrD,CADOsD;AAAAA;AATJ,KAAP;AAgBD,GAjBe/E,EAiBb,CAACyB,MAAD,CAjBazB,CAAhB;AAmBA,MAAIlD,QAAQ,GAAG2E,MAAM,CAAC3E,QAAP2E,IAAmB,GAAlC;AAEA,MAAIuD,iBAAiB,GAAGhF,KAAK,CAACsE,OAANtE,CACtB;AAAA,WAAO;AACLyB,MAAAA,MAAM,EAANA,MADK;AAEL4C,MAAAA,SAAS,EAATA,SAFK;AAGLY,MAAAA,MAAM,EAAE,KAHH;AAILnI,MAAAA,QAAAA,EAAAA;AAJK,KAAP;AAAA,GADsBkD,EAOtB,CAACyB,MAAD,EAAS4C,SAAT,EAAoBvH,QAApB,CAPsBkD,CAAxB;AAUA,MAAIkF,YAAY,GAAGlF,KAAK,CAACsE,OAANtE,CACjB;AAAA,WAAO;AACLmF,MAAAA,oBAAoB,EAAE1D,MAAM,CAACvD,MAAPuD,CAAc0D;AAD/B,KAAP;AAAA,GADiBnF,EAIjB,CAACyB,MAAM,CAACvD,MAAPuD,CAAc0D,oBAAf,CAJiBnF,CAAnB,CA7NoB,CAoOpB;AACA;AACA;AACA;AACA;AACA;;AACA,SAAA,aACEA,KAAAA,CAAAA,aAAAA,CAAAA,KAAAA,CAAAA,QAAAA,EAAAA,IAAAA,EAAAA,aACEA,KAAAA,CAAAA,aAAAA,CAACoF,wBAAiB,CAACC,QAAnBrF,EAA4B1E;AAAAA,IAAAA,KAAK,EAAE0J;AAAP1J,GAA5B0E,EAAoD,aAClDA,KAAAA,CAAAA,aAAAA,CAACsF,6BAAsB,CAACD,QAAxBrF,EAAiC1E;AAAAA,IAAAA,KAAK,EAAEuD;AAAPvD,GAAjC0E,EAA6C,aAC3CA,KAAC,CAAA,aAADA,CAAC,eAAe,CAACqF,QAAjBrF,EAAyB;AAAC1E,IAAAA,KAAK,EAAEgH,WAAW,CAACY;AAApB,GAAzBlD,EAAoD,aAClDA,KAAAA,CAAAA,aAAAA,CAACD,qBAAqB,CAACsF,QAAvBrF,EAAgC1E;AAAAA,IAAAA,KAAK,EAAEwG;AAAPxG,GAAhC0E,EAAgD,aAC9CA,KAAAA,CAAAA,aAAAA,CAACuF,MAADvF,EAAO;AACLlD,IAAAA,QAAQ,EAAEA,QADL;AAELqH,IAAAA,QAAQ,EAAEtF,KAAK,CAACsF,QAFX;AAGLqB,IAAAA,cAAc,EAAE3G,KAAK,CAAC4G,aAHjB;AAILpB,IAAAA,SAAS,EAAEA,SAJN;AAKLnG,IAAAA,MAAM,EAAEgH;AALH,GAAPlF,EAOG,KAAK,CAAC0F,WAAN,IAAqBjE,MAAM,CAACvD,MAAPuD,CAAc2C,mBAAnC,GAAsD,aACrDpE,KAAAA,CAAAA,aAAAA,CAAC2F,kBAAD3F,EACEjC;AAAAA,IAAAA,MAAM,EAAE0D,MAAM,CAAC1D,MAAfA;AACAG,IAAAA,MAAM,EAAEuD,MAAM,CAACvD,MADfH;AAEAc,IAAAA,KAAK,EAAEA;AAFPd,GADFiC,CADD,GAOCwB,eAdJxB,CADFA,CADFA,CADFA,CADFA,CADFA,EA0BG,IA1BHA,CADF;AA8BF,C,CAEA;;;AACA,IAAM2F,kBAAkB,GAAA,aAAG3F,KAAK,CAAC5E,IAAN4E,CAAW4F,UAAX5F,CAA3B;;AAEA,SAAS4F,UAAT,CAAmBA,KAAnB,EAQC;AAAA,MAPC7H,MAOD,GAAA,KAAA,CAPCA,MAOD;AAAA,MANCG,MAMD,GAAA,KAAA,CANCA,MAMD;AAAA,MALCW,KAKD,GAAA,KAAA,CALCA,KAKD;AACC,SAAOgH,oBAAa,CAAC9H,MAAD,EAASJ,SAAT,EAAoBkB,KAApB,EAA2BX,MAA3B,CAApB;AACF;AASA;;;;;AAGM,SAAU4H,aAAV,CAAuBA,KAAvB,EAKe;AAAA,MAJnBhJ,QAImB,GAAA,KAAA,CAJnBA,QAImB;AAAA,MAHnBiJ,QAGmB,GAAA,KAAA,CAHnBA,QAGmB;AAAA,MAFnB7H,MAEmB,GAAA,KAAA,CAFnBA,MAEmB;AAAA,MADnBN,MACmB,GAAA,KAAA,CADnBA,MACmB;AACnB,MAAIoI,UAAU,GAAGhG,KAAK,CAACuC,MAANvC,EAAjB;;AACA,MAAIgG,UAAU,CAAC9C,OAAX8C,IAAsB,IAA1B,EAAgC;AAC9BA,IAAAA,UAAU,CAAC9C,OAAX8C,GAAqB3H,oBAAoB,CAAC;AAAET,MAAAA,MAAM,EAANA,MAAF;AAAUqI,MAAAA,QAAQ,EAAE;AAApB,KAAD,CAAzCD;AACD;;AAED,MAAI5H,OAAO,GAAG4H,UAAU,CAAC9C,OAAzB;;AANmB,0BAOSlD,KAAK,CAAC2B,QAAN3B,CAAe;AACzChD,IAAAA,MAAM,EAAEoB,OAAO,CAACpB,MADyB;AAEzCmH,IAAAA,QAAQ,EAAE/F,OAAO,CAAC+F;AAFuB,GAAfnE,CAPT;AAAA;AAAA,MAOdnB,KAPc;AAAA,MAOP6C,YAPO;;AAAA,eAWUxD,MAAM,IAAI,EAXpB;AAAA,MAWbsE,kBAXa,UAWbA,kBAXa;;AAYnB,MAAIG,QAAQ,GAAG3C,KAAK,CAAC0C,WAAN1C,CACZ4C,UAAAA,QAAwD,EAAI;AAC3DJ,IAAAA,kBAAkB,IAAIjC,mBAAtBiC,GACIjC,mBAAmB,CAAC;AAAA,aAAMmB,YAAY,CAACkB,QAAD,CAAlB;AAAA,KAAD,CADvBJ,GAEId,YAAY,CAACkB,QAAD,CAFhBJ;AAGD,GALYxC,EAMb,CAAC0B,YAAD,EAAec,kBAAf,CANaxC,CAAf;AASAA,EAAAA,KAAK,CAAC+D,eAAN/D,CAAsB;AAAA,WAAM5B,OAAO,CAAC8H,MAAR9H,CAAeuE,QAAfvE,CAAN;AAAA,GAAtB4B,EAAsD,CAAC5B,OAAD,EAAUuE,QAAV,CAAtD3C;AAEA,SAAA,aACEA,KAAAA,CAAAA,aAAAA,CAACuF,MAADvF,EAAO;AACLlD,IAAAA,QAAQ,EAAEA,QADL;AAELiJ,IAAAA,QAAQ,EAAEA,QAFL;AAGL5B,IAAAA,QAAQ,EAAEtF,KAAK,CAACsF,QAHX;AAILqB,IAAAA,cAAc,EAAE3G,KAAK,CAAC7B,MAJjB;AAKLqH,IAAAA,SAAS,EAAEjG,OALN;AAMLF,IAAAA,MAAM,EAAEA;AANH,GAAP8B,CADF;AAUF;AASA;;;;;;AAIM,SAAUmG,UAAV,CAAoBA,KAApB,EAKY;AAAA,MAJhBrJ,QAIgB,GAAA,KAAA,CAJhBA,QAIgB;AAAA,MAHhBiJ,QAGgB,GAAA,KAAA,CAHhBA,QAGgB;AAAA,MAFhB7H,MAEgB,GAAA,KAAA,CAFhBA,MAEgB;AAAA,MADhBN,MACgB,GAAA,KAAA,CADhBA,MACgB;AAChB,MAAIoI,UAAU,GAAGhG,KAAK,CAACuC,MAANvC,EAAjB;;AACA,MAAIgG,UAAU,CAAC9C,OAAX8C,IAAsB,IAA1B,EAAgC;AAC9BA,IAAAA,UAAU,CAAC9C,OAAX8C,GAAqBpH,iBAAiB,CAAC;AAAEhB,MAAAA,MAAM,EAANA,MAAF;AAAUqI,MAAAA,QAAQ,EAAE;AAApB,KAAD,CAAtCD;AACD;;AAED,MAAI5H,OAAO,GAAG4H,UAAU,CAAC9C,OAAzB;;AANgB,0BAOYlD,KAAK,CAAC2B,QAAN3B,CAAe;AACzChD,IAAAA,MAAM,EAAEoB,OAAO,CAACpB,MADyB;AAEzCmH,IAAAA,QAAQ,EAAE/F,OAAO,CAAC+F;AAFuB,GAAfnE,CAPZ;AAAA;AAAA,MAOXnB,KAPW;AAAA,MAOJ6C,YAPI;;AAAA,eAWaxD,MAAM,IAAI,EAXvB;AAAA,MAWVsE,kBAXU,UAWVA,kBAXU;;AAYhB,MAAIG,QAAQ,GAAG3C,KAAK,CAAC0C,WAAN1C,CACZ4C,UAAAA,QAAwD,EAAI;AAC3DJ,IAAAA,kBAAkB,IAAIjC,mBAAtBiC,GACIjC,mBAAmB,CAAC;AAAA,aAAMmB,YAAY,CAACkB,QAAD,CAAlB;AAAA,KAAD,CADvBJ,GAEId,YAAY,CAACkB,QAAD,CAFhBJ;AAGD,GALYxC,EAMb,CAAC0B,YAAD,EAAec,kBAAf,CANaxC,CAAf;AASAA,EAAAA,KAAK,CAAC+D,eAAN/D,CAAsB;AAAA,WAAM5B,OAAO,CAAC8H,MAAR9H,CAAeuE,QAAfvE,CAAN;AAAA,GAAtB4B,EAAsD,CAAC5B,OAAD,EAAUuE,QAAV,CAAtD3C;AAEA,SAAA,aACEA,KAAAA,CAAAA,aAAAA,CAACuF,MAADvF,EAAO;AACLlD,IAAAA,QAAQ,EAAEA,QADL;AAELiJ,IAAAA,QAAQ,EAAEA,QAFL;AAGL5B,IAAAA,QAAQ,EAAEtF,KAAK,CAACsF,QAHX;AAILqB,IAAAA,cAAc,EAAE3G,KAAK,CAAC7B,MAJjB;AAKLqH,IAAAA,SAAS,EAAEjG,OALN;AAMLF,IAAAA,MAAM,EAAEA;AANH,GAAP8B,CADF;AAUF;AASA;;;;;;;;AAMA,SAASoG,aAAT,CAAsBA,KAAtB,EAKqB;AAAA,MAJnBtJ,QAImB,GAAA,KAAA,CAJnBA,QAImB;AAAA,MAHnBiJ,QAGmB,GAAA,KAAA,CAHnBA,QAGmB;AAAA,MAFnB7H,MAEmB,GAAA,KAAA,CAFnBA,MAEmB;AAAA,MADnBE,OACmB,GAAA,KAAA,CADnBA,OACmB;;AAAA,0BACS4B,KAAK,CAAC2B,QAAN3B,CAAe;AACzChD,IAAAA,MAAM,EAAEoB,OAAO,CAACpB,MADyB;AAEzCmH,IAAAA,QAAQ,EAAE/F,OAAO,CAAC+F;AAFuB,GAAfnE,CADT;AAAA;AAAA,MACdnB,KADc;AAAA,MACP6C,YADO;;AAAA,eAKUxD,MAAM,IAAI,EALpB;AAAA,MAKbsE,kBALa,UAKbA,kBALa;;AAMnB,MAAIG,QAAQ,GAAG3C,KAAK,CAAC0C,WAAN1C,CACZ4C,UAAAA,QAAwD,EAAI;AAC3DJ,IAAAA,kBAAkB,IAAIjC,mBAAtBiC,GACIjC,mBAAmB,CAAC;AAAA,aAAMmB,YAAY,CAACkB,QAAD,CAAlB;AAAA,KAAD,CADvBJ,GAEId,YAAY,CAACkB,QAAD,CAFhBJ;AAGD,GALYxC,EAMb,CAAC0B,YAAD,EAAec,kBAAf,CANaxC,CAAf;AASAA,EAAAA,KAAK,CAAC+D,eAAN/D,CAAsB;AAAA,WAAM5B,OAAO,CAAC8H,MAAR9H,CAAeuE,QAAfvE,CAAN;AAAA,GAAtB4B,EAAsD,CAAC5B,OAAD,EAAUuE,QAAV,CAAtD3C;AAEA,SAAA,aACEA,KAAAA,CAAAA,aAAAA,CAACuF,MAADvF,EAAO;AACLlD,IAAAA,QAAQ,EAAEA,QADL;AAELiJ,IAAAA,QAAQ,EAAEA,QAFL;AAGL5B,IAAAA,QAAQ,EAAEtF,KAAK,CAACsF,QAHX;AAILqB,IAAAA,cAAc,EAAE3G,KAAK,CAAC7B,MAJjB;AAKLqH,IAAAA,SAAS,EAAEjG,OALN;AAMLF,IAAAA,MAAM,EAAEA;AANH,GAAP8B,CADF;AAUF;;AAEA,IAAA,OAAA,CAAA,GAAA,CAAA,QAAA,KAAa,YAAb,EAAa;AACXoG,EAAAA,aAAa,CAACjG,WAAdiG,GAA4B,wBAA5BA;AACD;;AAeD,IAAMC,SAAS,GACb,OAAOzI,MAAP,KAAkB,WAAlB,IACA,OAAOA,MAAM,CAACtB,QAAd,KAA2B,WAD3B,IAEA,OAAOsB,MAAM,CAACtB,QAAPsB,CAAgBrB,aAAvB,KAAyC,WAH3C;AAKA,IAAM+J,kBAAkB,GAAG,+BAA3B;AAEA;;;;AAGaC,IAAAA,IAAI,GAAA,aAAGvG,KAAK,CAACwG,UAANxG,CAClB,SAASyG,WAAT,CAAoBA,KAApB,EAaEM,GAbF,EAaK;AAAA,MAXDL,OAWC,GADF,KACE,CAXDA,OAWC;AAAA,MAVDC,QAUC,GADF,KACE,CAVDA,QAUC;AAAA,MATDC,cASC,GADF,KACE,CATDA,cASC;AAAA,MARD7B,OAQC,GADF,KACE,CARDA,OAQC;AAAA,MAPDlG,KAOC,GADF,KACE,CAPDA,KAOC;AAAA,MANDlE,MAMC,GADF,KACE,CANDA,MAMC;AAAA,MALDkK,EAKC,GADF,KACE,CALDA,EAKC;AAAA,MAJDC,kBAIC,GADF,KACE,CAJDA,kBAIC;AAAA,MAHD+B,uBAGC,GADF,KACE,CAHDA,uBAGC;AAAA,MAFEC,IAEF,GAFM,6BAAA,CAAA,KAAA,EAAA,SAAA,CAEN;;AAAA,0BAEgB9G,KAAK,CAACgH,UAANhH,CAAiBiH,wBAAjBjH,CAFhB;AAAA,MAEGlD,QAFH,qBAEGA,QAFH,EAIH;;;AACA,MAAIoK,YAAJ;AACA,MAAIC,UAAU,GAAG,KAAjB;;AAEA,MAAI,OAAOtC,EAAP,KAAc,QAAd,IAA0ByB,kBAAkB,CAACc,IAAnBd,CAAwBzB,EAAxByB,CAA9B,EAA2D;AACzD;AACAY,IAAAA,YAAY,GAAGrC,EAAfqC,CAFyD,CAIzD;;AACA,QAAIb,SAAJ,EAAe;AACb,UAAI;AACF,YAAIgB,UAAU,GAAG,IAAIC,GAAJ,CAAQ1J,MAAM,CAACuG,QAAPvG,CAAgB2J,IAAxB,CAAjB;AACA,YAAIC,SAAS,GAAG3C,EAAE,CAAC4C,UAAH5C,CAAc,IAAdA,IACZ,IAAIyC,GAAJ,CAAQD,UAAU,CAACK,QAAXL,GAAsBxC,EAA9B,CADYA,GAEZ,IAAIyC,GAAJ,CAAQzC,EAAR,CAFJ;AAGA,YAAI8C,IAAI,GAAGtK,aAAa,CAACmK,SAAS,CAACI,QAAX,EAAqB9K,QAArB,CAAxB;;AAEA,YAAI0K,SAAS,CAACK,MAAVL,KAAqBH,UAAU,CAACQ,MAAhCL,IAA0CG,IAAI,IAAI,IAAtD,EAA4D;AAC1D;AACA9C,UAAAA,EAAE,GAAG8C,IAAI,GAAGH,SAAS,CAACM,MAAjBH,GAA0BH,SAAS,CAACO,IAAzClD;AACD,SAHD,MAGO;AACLsC,UAAAA,UAAU,GAAG,IAAbA;AACD;AACF,OAbD,CAaE,OAAO3K,CAAP,EAAU;AACV;AACAK,QAAAA,OAAAA,CAAAA,GAAAA,CAAAA,QAAAA,KAAAA,YAAAA,GAAAA,cAAO,CACL,KADK,EAEL,gBAAagI,EAAb,GAAe,wDAAf,GAAe,mDAFV,CAAPhI,GAIC,KAAA,CAJDA;AAKD;AACF;AACF,GApCE,CAsCH;;;AACA,MAAI0K,IAAI,GAAGS,OAAO,CAACnD,EAAD,EAAK;AAAE8B,IAAAA,QAAAA,EAAAA;AAAF,GAAL,CAAlB;AAEA,MAAIsB,eAAe,GAAGC,mBAAmB,CAACrD,EAAD,EAAK;AAC5CE,IAAAA,OAAO,EAAPA,OAD4C;AAE5ClG,IAAAA,KAAK,EAALA,KAF4C;AAG5ClE,IAAAA,MAAM,EAANA,MAH4C;AAI5CmK,IAAAA,kBAAkB,EAAlBA,kBAJ4C;AAK5C6B,IAAAA,QAAQ,EAARA,QAL4C;AAM5CE,IAAAA,uBAAAA,EAAAA;AAN4C,GAAL,CAAzC;;AAQA,WAASsB,WAAT,CACE7N,KADF,EACwD;AAEtD,QAAIoM,OAAJ,EAAaA,OAAO,CAACpM,KAAD,CAAPoM;;AACb,QAAI,CAACpM,KAAK,CAAC8N,gBAAX,EAA6B;AAC3BH,MAAAA,eAAe,CAAC3N,KAAD,CAAf2N;AACD;AACH;;AAEA;AAAA;AACE;AACAjI,IAAAA,KAAAA,CAAAA,aAAAA,CAAAA,GAAAA,EAAAA,QAAAA,CAAAA,EAAAA,EACM8G,IADN9G,EACU;AACRuH,MAAAA,IAAI,EAAEL,YAAY,IAAIK,IADd;AAERb,MAAAA,OAAO,EAAES,UAAU,IAAIP,cAAdO,GAA+BT,OAA/BS,GAAyCgB,WAF1C;AAGRpB,MAAAA,GAAG,EAAEA,GAHG;AAIRpM,MAAAA,MAAM,EAAEA;AAJA,KADVqF,CAAAA;AAFF;AAUD,CAlFiBA,CAAPuG;;AAqFb,IAAA,OAAA,CAAA,GAAA,CAAA,QAAA,KAAa,YAAb,EAAa;AACXA,EAAAA,IAAI,CAACpG,WAALoG,GAAmB,MAAnBA;AACD;AAmBD;;;;;AAGa8B,IAAAA,OAAO,GAAA,aAAGrI,KAAK,CAACwG,UAANxG,CACrB,SAASsI,cAAT,CAAuBA,KAAvB,EAYEvB,GAZF,EAYK;AAAA,0BADF,KACE,CAVD,cAUC;AAAA,MAVewB,eAUf,kCAViC,MAUjC;AAAA,4BADF,KACE,CATDC,aASC;AAAA,MATDA,aASC,oCATe,KASf;AAAA,wBADF,KACE,CARDC,SAQC;AAAA,MARUC,aAQV,gCAR0B,EAQ1B;AAAA,kBADF,KACE,CAPDC,GAOC;AAAA,MAPDA,GAOC,0BAPK,KAOL;AAAA,MANME,SAMN,GADF,KACE,CANDD,KAMC;AAAA,MALD/D,EAKC,GADF,KACE,CALDA,EAKC;AAAA,MAJDgC,uBAIC,GADF,KACE,CAJDA,uBAIC;AAAA,MAHDd,QAGC,GADF,KACE,CAHDA,QAGC;AAAA,MAFEe,IAEF,GAFM,6BAAA,CAAA,KAAA,EAAA,UAAA,CAEN;;AAEH,MAAIa,IAAI,GAAGmB,eAAe,CAACjE,EAAD,EAAK;AAAE8B,IAAAA,QAAQ,EAAEG,IAAI,CAACH;AAAjB,GAAL,CAA1B;AACA,MAAIxC,QAAQ,GAAG4E,WAAW,EAA1B;AACA,MAAIC,WAAW,GAAGhJ,KAAK,CAACgH,UAANhH,CAAiBsF,6BAAjBtF,CAAlB;;AAJG,2BAK2BA,KAAK,CAACgH,UAANhH,CAAiBiH,wBAAjBjH,CAL3B;AAAA,MAKGqE,SALH,sBAKGA,SALH;AAAA,MAKcvH,QALd,sBAKcA,QALd;;AAMH,MAAIoD,eAAe,GACjB8I,WAAW,IAAI,IAAfA,IACA;AACA;AACAC,EAAAA,sBAAsB,CAACtB,IAAD,CAHtBqB,IAIAnC,uBAAuB,KAAK,IAL9B;AAOA,MAAIqC,UAAU,GAAG7E,SAAS,CAACG,cAAVH,GACbA,SAAS,CAACG,cAAVH,CAAyBsD,IAAzBtD,EAA+BuD,QADlBvD,GAEbsD,IAAI,CAACC,QAFT;AAGA,MAAIuB,gBAAgB,GAAGhF,QAAQ,CAACyD,QAAhC;AACA,MAAIwB,oBAAoB,GACtBJ,WAAW,IAAIA,WAAW,CAACK,UAA3BL,IAAyCA,WAAW,CAACK,UAAZL,CAAuB7E,QAAhE6E,GACIA,WAAW,CAACK,UAAZL,CAAuB7E,QAAvB6E,CAAgCpB,QADpCoB,GAEI,IAHN;;AAKA,MAAI,CAACR,aAAL,EAAoB;AAClBW,IAAAA,gBAAgB,GAAGA,gBAAgB,CAACjP,WAAjBiP,EAAnBA;AACAC,IAAAA,oBAAoB,GAAGA,oBAAoB,GACvCA,oBAAoB,CAAClP,WAArBkP,EADuC,GAEvC,IAFJA;AAGAF,IAAAA,UAAU,GAAGA,UAAU,CAAChP,WAAXgP,EAAbA;AACD;;AAED,MAAIE,oBAAoB,IAAItM,QAA5B,EAAsC;AACpCsM,IAAAA,oBAAoB,GAClB/L,aAAa,CAAC+L,oBAAD,EAAuBtM,QAAvB,CAAbO,IAAiD+L,oBADnDA;AAED,GAjCE,CAmCH;AACA;AACA;AACA;AACA;;;AACA,MAAME,gBAAgB,GACpBJ,UAAU,KAAK,GAAfA,IAAsBA,UAAU,CAACK,QAAXL,CAAoB,GAApBA,CAAtBA,GACIA,UAAU,CAACM,MAAXN,GAAoB,CADxBA,GAEIA,UAAU,CAACM,MAHjB;AAIA,MAAIC,QAAQ,GACVN,gBAAgB,KAAKD,UAArBC,IACC,CAACR,GAAD,IACCQ,gBAAgB,CAAC1B,UAAjB0B,CAA4BD,UAA5BC,CADD,IAECA,gBAAgB,CAACO,MAAjBP,CAAwBG,gBAAxBH,MAA8C,GAJlD;AAMA,MAAIQ,SAAS,GACXP,oBAAoB,IAAI,IAAxBA,KACCA,oBAAoB,KAAKF,UAAzBE,IACE,CAACT,GAAD,IACCS,oBAAoB,CAAC3B,UAArB2B,CAAgCF,UAAhCE,CADD,IAECA,oBAAoB,CAACM,MAArBN,CAA4BF,UAAU,CAACM,MAAvCJ,MAAmD,GAJvDA,CADF;AAOA,MAAIQ,WAAW,GAAG;AAChBH,IAAAA,QAAQ,EAARA,QADgB;AAEhBE,IAAAA,SAAS,EAATA,SAFgB;AAGhBzJ,IAAAA,eAAAA,EAAAA;AAHgB,GAAlB;AAMA,MAAI2J,WAAW,GAAGJ,QAAQ,GAAGlB,eAAH,GAAqB5K,SAA/C;AAEA,MAAI8K,SAAJ;;AACA,MAAI,OAAOC,aAAP,KAAyB,UAA7B,EAAyC;AACvCD,IAAAA,SAAS,GAAGC,aAAa,CAACkB,WAAD,CAAzBnB;AACD,GAFD,MAEO;AACL;AACA;AACA;AACA;AACA;AACAA,IAAAA,SAAS,GAAG,CACVC,aADU,EAEVe,QAAQ,GAAG,QAAH,GAAc,IAFZ,EAGVE,SAAS,GAAG,SAAH,GAAe,IAHd,EAIVzJ,eAAe,GAAG,eAAH,GAAqB,IAJ1B,EAMT4J,MANS,CAMFC,OANE,EAOTC,IAPS,CAOJ,GAPI,CAAZvB;AAQD;;AAED,MAAIG,KAAK,GACP,OAAOC,SAAP,KAAqB,UAArB,GAAkCA,SAAS,CAACe,WAAD,CAA3C,GAA2Df,SAD7D;AAGA,SAAA,aACE7I,KAAAA,CAAAA,aAAAA,CAACuG,IAADvG,EAAK,QAAA,CAAA,EAAA,EACC8G,IADD,EACK;AACM,oBAAA,WADN;AAER2B,IAAAA,SAAS,EAAEA,SAFH;AAGR1B,IAAAA,GAAG,EAAEA,GAHG;AAIR6B,IAAAA,KAAK,EAAEA,KAJC;AAKR/D,IAAAA,EAAE,EAAEA,EALI;AAMRgC,IAAAA,uBAAuB,EAAEA;AANjB,GADL,CAAL7G,EASG,OAAO+F,QAAP,KAAoB,UAApB,GAAiCA,QAAQ,CAAC6D,WAAD,CAAzC,GAAyD7D,QAT5D/F,CADF;AAaD,CAjHoBA,CAAVqI;;AAoHb,IAAA,OAAA,CAAA,GAAA,CAAA,QAAA,KAAa,YAAb,EAAa;AACXA,EAAAA,OAAO,CAAClI,WAARkI,GAAsB,SAAtBA;AACD;AAgGD;;;;;;;;AAMO,IAAM4B,IAAI,GAAA,aAAGjK,KAAK,CAACwG,UAANxG,CAClB,UAAA,KAAA,EAeEqK,YAfF,EAgBI;AAAA,MAdAH,UAcA,GAFD,KAEC,CAdAA,UAcA;AAAA,MAbAvF,QAaA,GAFD,KAEC,CAbAA,QAaA;AAAA,MAZAiC,cAYA,GAFD,KAEC,CAZAA,cAYA;AAAA,MAXA7B,OAWA,GAFD,KAEC,CAXAA,OAWA;AAAA,MAVAlG,KAUA,GAFD,KAEC,CAVAA,KAUA;AAAA,qBAFD,KAEC,CATA9B,MASA;AAAA,MATAA,MASA,6BATSnD,aAST;AAAA,MARAoD,MAQA,GAFD,KAEC,CARAA,MAQA;AAAA,MAPAmN,QAOA,GAFD,KAEC,CAPAA,QAOA;AAAA,MANAxD,QAMA,GAFD,KAEC,CANAA,QAMA;AAAA,MALA7B,kBAKA,GAFD,KAEC,CALAA,kBAKA;AAAA,MAJA+B,uBAIA,GAFD,KAEC,CAJAA,uBAIA;AAAA,MAHGuD,KAGH,GAHQ,6BAAA,CAAA,KAAA,EAAA,UAAA,CAGR;;AACF,MAAIE,MAAM,GAAGC,SAAS,EAAtB;AACA,MAAIC,UAAU,GAAGC,aAAa,CAACzN,MAAD,EAAS;AAAE2J,IAAAA,QAAAA,EAAAA;AAAF,GAAT,CAA9B;AACA,MAAI+D,UAAU,GACZ3N,MAAM,CAAC7C,WAAP6C,OAAyB,KAAzBA,GAAiC,KAAjCA,GAAyC,MAD3C;;AAGA,MAAI4N,aAAa,GAA6CrQ,SAA1DqQ,aAA0DrQ,CAAAA,KAAK,EAAI;AACrE6P,IAAAA,QAAQ,IAAIA,QAAQ,CAAC7P,KAAD,CAApB6P;AACA,QAAI7P,KAAK,CAAC8N,gBAAV,EAA4B;AAC5B9N,IAAAA,KAAK,CAACsQ,cAANtQ;AAEA,QAAIuQ,SAAS,GAAIvQ,KAAoC,CAACwQ,WAArCxQ,CACduQ,SADH;AAGA,QAAIE,YAAY,GACb,CAAA,SAAS,IAAT,IAAA,GAAA,KAAA,CAAA,GAAA,SAAS,CAAE3N,YAAX,CAAwB,YAAxB,CAAA,KACDL,MAFF;AAIAuN,IAAAA,MAAM,CAACO,SAAS,IAAIvQ,KAAK,CAAC0Q,aAApB,EAAmC;AACvCd,MAAAA,UAAU,EAAVA,UADuC;AAEvCnN,MAAAA,MAAM,EAAEgO,YAF+B;AAGvCpG,MAAAA,QAAQ,EAARA,QAHuC;AAIvCI,MAAAA,OAAO,EAAPA,OAJuC;AAKvClG,MAAAA,KAAK,EAALA,KALuC;AAMvC8H,MAAAA,QAAQ,EAARA,QANuC;AAOvC7B,MAAAA,kBAAkB,EAAlBA,kBAPuC;AAQvC+B,MAAAA,uBAAAA,EAAAA;AARuC,KAAnC,CAANyD;AAUD,GAtBD;;AAwBA,SAAA,aACEtK,KAAAA,CAAAA,aAAAA,CAAAA,MAAAA,EAAAA,QAAAA,CAAAA;AACE+G,IAAAA,GAAG,EAAEsD,YADPrK;AAEEjD,IAAAA,MAAM,EAAE2N,UAFV1K;AAGEhD,IAAAA,MAAM,EAAEwN,UAHVxK;AAIEmK,IAAAA,QAAQ,EAAEvD,cAAc,GAAGuD,QAAH,GAAcQ;AAJxC3K,GAAAA,EAKMoK,KALNpK,CAAAA,CADF;AASD,CAxDiBA,CAAb;;AA2DP,IAAA,OAAA,CAAA,GAAA,CAAA,QAAA,KAAa,YAAb,EAAa;AACXiK,EAAAA,IAAI,CAAC9J,WAAL8J,GAAmB,MAAnBA;AACD;AAOD;;;;;;SAIgBgB,iB,CAAiBA,M,EAGR;AAAA,MAFvBC,MAEuB,GAAA,MAAA,CAFvBA,MAEuB;AAAA,MADvBC,UACuB,GAAA,MAAA,CADvBA,UACuB;AACvBC,EAAAA,oBAAoB,CAAC;AAAEF,IAAAA,MAAM,EAANA,MAAF;AAAUC,IAAAA,UAAAA,EAAAA;AAAV,GAAD,CAApBC;AACA,SAAO,IAAP;AACF;;AAEA,IAAA,OAAA,CAAA,GAAA,CAAA,QAAA,KAAa,YAAb,EAAa;AACXH,EAAAA,iBAAiB,CAAC9K,WAAlB8K,GAAgC,mBAAhCA;AACD,C,CACD;AAEA;AACA;AACA;;;AAEA,IAAKI,cAAL;;AAAA,CAAA,UAAKA,cAAL,EAAmB;AACjBA,EAAAA,cAAAA,CAAAA,sBAAAA,CAAAA,GAAAA,sBAAAA;AACAA,EAAAA,cAAAA,CAAAA,WAAAA,CAAAA,GAAAA,WAAAA;AACAA,EAAAA,cAAAA,CAAAA,kBAAAA,CAAAA,GAAAA,kBAAAA;AACAA,EAAAA,cAAAA,CAAAA,YAAAA,CAAAA,GAAAA,YAAAA;AACAA,EAAAA,cAAAA,CAAAA,wBAAAA,CAAAA,GAAAA,wBAAAA;AACD,CAND,EAAKA,cAAc,KAAdA,cAAc,GAMlB,EANkB,CAAnB;;AAQA,IAAKC,mBAAL;;AAAA,CAAA,UAAKA,mBAAL,EAAwB;AACtBA,EAAAA,mBAAAA,CAAAA,YAAAA,CAAAA,GAAAA,YAAAA;AACAA,EAAAA,mBAAAA,CAAAA,aAAAA,CAAAA,GAAAA,aAAAA;AACAA,EAAAA,mBAAAA,CAAAA,sBAAAA,CAAAA,GAAAA,sBAAAA;AACD,CAJD,EAAKA,mBAAmB,KAAnBA,mBAAmB,GAIvB,EAJuB,CAAxB,E,CAMA;;;AAEA,SAASC,yBAAT,CACEC,QADF,EACgD;AAE9C,SAAUA,QAAQ,GAAA,4FAAlB;AACF;;AAEA,SAASC,oBAAT,CAA8BD,QAA9B,EAAsD;AACpD,MAAIE,GAAG,GAAG1L,KAAK,CAACgH,UAANhH,CAAiBoF,wBAAjBpF,CAAV;AACA,GAAU0L,GAAV,GAAa,OAAA,CAAA,GAAA,CAAA,QAAA,KAAb,YAAa,GAAb,gBAAS,CAAA,KAAA,EAAMH,yBAAyB,CAACC,QAAD,CAA/B,CAAI,GAAb,gBAAS,CAAA,KAAA,CAAT,GAAS,KAAA,CAAT;AACA,SAAOE,GAAP;AACF;;AAEA,SAASC,kBAAT,CAA4BH,QAA5B,EAAyD;AACvD,MAAI3M,KAAK,GAAGmB,KAAK,CAACgH,UAANhH,CAAiBsF,6BAAjBtF,CAAZ;AACA,GAAUnB,KAAV,GAAe,OAAA,CAAA,GAAA,CAAA,QAAA,KAAf,YAAe,GAAf,gBAAS,CAAA,KAAA,EAAQ0M,yBAAyB,CAACC,QAAD,CAAjC,CAAM,GAAf,gBAAS,CAAA,KAAA,CAAT,GAAS,KAAA,CAAT;AACA,SAAO3M,KAAP;AACF,C,CAEA;;AAEA;;;;;;;AAKM,SAAUqJ,mBAAV,CACJrD,EADI,EACE,KADF,EAgBE;AAAA,e,mBAAF,E,GAAE,KAAA;AAAA,MAbJlK,MAaI,UAbJA,MAaI;AAAA,MAZKiR,WAYL,UAZJ7G,OAYI;AAAA,MAXJlG,KAWI,UAXJA,KAWI;AAAA,MAVJiG,kBAUI,UAVJA,kBAUI;AAAA,MATJ6B,QASI,UATJA,QASI;AAAA,MARJE,uBAQI,UARJA,uBAQI;;AAEN,MAAIlC,QAAQ,GAAGkH,WAAW,EAA1B;AACA,MAAI1H,QAAQ,GAAG4E,WAAW,EAA1B;AACA,MAAIpB,IAAI,GAAGmB,eAAe,CAACjE,EAAD,EAAK;AAAE8B,IAAAA,QAAAA,EAAAA;AAAF,GAAL,CAA1B;AAEA,SAAO3G,KAAK,CAAC0C,WAAN1C,CACJ1F,UAAAA,KAAsC,EAAI;AACzC,QAAIwR,sBAAsB,CAACxR,KAAD,EAAQK,MAAR,CAA1B,EAA2C;AACzCL,MAAAA,KAAK,CAACsQ,cAANtQ,GADyC,CAGzC;AACA;;AACA,UAAIyK,QAAO,GACT6G,WAAW,KAAKjO,SAAhBiO,GACIA,WADJA,GAEIG,UAAU,CAAC5H,QAAD,CAAV4H,KAAyBA,UAAU,CAACpE,IAAD,CAHzC;;AAKAhD,MAAAA,QAAQ,CAACE,EAAD,EAAK;AACXE,QAAAA,OAAO,EAAPA,QADW;AAEXlG,QAAAA,KAAK,EAALA,KAFW;AAGXiG,QAAAA,kBAAkB,EAAlBA,kBAHW;AAIX6B,QAAAA,QAAQ,EAARA,QAJW;AAKXE,QAAAA,uBAAAA,EAAAA;AALW,OAAL,CAARlC;AAOD;AACF,GApBI3E,EAqBL,CACEmE,QADF,EAEEQ,QAFF,EAGEgD,IAHF,EAIEiE,WAJF,EAKE/M,KALF,EAMElE,MANF,EAOEkK,EAPF,EAQEC,kBARF,EASE6B,QATF,EAUEE,uBAVF,CArBK7G,CAAP;AAkCF;AAEA;;;;;;AAIM,SAAUgM,eAAV,CACJC,WADI,EAC6B;AAEjCpP,EAAAA,OAAAA,CAAAA,GAAAA,CAAAA,QAAAA,KAAAA,YAAAA,GAAAA,cAAO,CACL,OAAO/B,eAAP,KAA2B,WADtB,EAEL,0EACqE,mEADrE,GACqE,wDADrE,GAE0D,6CAJrD,CAAP+B,GAMC,KAAA,CANDA;AAQA,MAAIqP,sBAAsB,GAAGlM,KAAK,CAACuC,MAANvC,CAAanE,kBAAkB,CAACoQ,WAAD,CAA/BjM,CAA7B;AACA,MAAImM,qBAAqB,GAAGnM,KAAK,CAACuC,MAANvC,CAAa,KAAbA,CAA5B;AAEA,MAAImE,QAAQ,GAAG4E,WAAW,EAA1B;AACA,MAAInN,YAAY,GAAGoE,KAAK,CAACsE,OAANtE,CACjB;AAAA,WACE;AACA;AACA;AACAoM,MAAAA,0BAA0B,CACxBjI,QAAQ,CAAC2D,MADe,EAExBqE,qBAAqB,CAACjJ,OAAtBiJ,GAAgC,IAAhCA,GAAuCD,sBAAsB,CAAChJ,OAFtC;AAJ5B;AAAA,GADiBlD,EASjB,CAACmE,QAAQ,CAAC2D,MAAV,CATiB9H,CAAnB;AAYA,MAAI2E,QAAQ,GAAGkH,WAAW,EAA1B;AACA,MAAIQ,eAAe,GAAGrM,KAAK,CAAC0C,WAAN1C,CACpB,UAACsM,QAAD,EAAWC,eAAX,EAA8B;AAC5B,QAAMC,eAAe,GAAG3Q,kBAAkB,CACxC,OAAOyQ,QAAP,KAAoB,UAApB,GAAiCA,QAAQ,CAAC1Q,YAAD,CAAzC,GAA0D0Q,QADlB,CAA1C;AAGAH,IAAAA,qBAAqB,CAACjJ,OAAtBiJ,GAAgC,IAAhCA;AACAxH,IAAAA,QAAQ,CAAC,MAAM6H,eAAP,EAAwBD,eAAxB,CAAR5H;AACD,GAPmB3E,EAQpB,CAAC2E,QAAD,EAAW/I,YAAX,CARoBoE,CAAtB;AAWA,SAAO,CAACpE,YAAD,EAAeyQ,eAAf,CAAP;AACF;;AA2CA,SAASI,4BAAT,GAAqCA;AACnC,MAAI,OAAOnQ,QAAP,KAAoB,WAAxB,EAAqC;AACnC,UAAM,IAAIkB,KAAJ,CACJ,sDACE,8DAFE,CAAN;AAID;AACH;;AAEA,IAAIkP,SAAS,GAAG,CAAhB;;AACA,IAAIC,kBAAkB,GAAGA,SAArBA,kBAAqBA;AAAAA,SAAAA,OAAWC,MAAM,CAAC,EAAEF,SAAH,CAAjBC,GAAkC,IAAlCA;AAAAA,CAAzB;AAEA;;;;;;SAIgBpC,S,GAASA;AAAAA,8BACNkB,oBAAoB,CAACJ,cAAc,CAACwB,SAAhB,CADdtC;AAAAA,MACjB9I,MADiB8I,yBACjB9I,MADiB8I;;AAAAA,2BAEJvK,KAAK,CAACgH,UAANhH,CAAiBiH,wBAAjBjH,CAFIuK;AAAAA,MAEjBzN,QAFiByN,sBAEjBzN,QAFiByN;;AAGvB,MAAIuC,cAAc,GAAGC,iBAAU,EAA/B;AAEA,SAAO/M,KAAK,CAAC0C,WAAN1C,CACL,UAACrF,MAAD,EAASqS,OAAT,EAAyB;AAAA,QAAhBA,OAAO,KAAA,KAAA,CAAS,EAAT;AAAPA,MAAAA,OAAO,GAAG,EAAVA;AAAY;;AACnBP,IAAAA,4BAA4B;;AADL,gCAG2BQ,qBAAqB,CACrEtS,MADqE,EAErEmC,QAFqE,CAHhD;AAAA,QAGjBE,MAHiB,yBAGjBA,MAHiB;AAAA,QAGTD,MAHS,yBAGTA,MAHS;AAAA,QAGDH,OAHC,yBAGDA,OAHC;AAAA,QAGQK,QAHR,yBAGQA,QAHR;AAAA,QAGkBC,IAHlB,yBAGkBA,IAHlB;;AAQvB,QAAI8P,OAAO,CAACrI,QAARqI,KAAqB,KAAzB,EAAgC;AAC9B,UAAI3R,GAAG,GAAG2R,OAAO,CAAC9C,UAAR8C,IAAsBL,kBAAkB,EAAlD;AACAlL,MAAAA,MAAM,CAACyL,KAAPzL,CAAapG,GAAboG,EAAkBqL,cAAlBrL,EAAkCuL,OAAO,CAAChQ,MAARgQ,IAAkBhQ,MAApDyE,EAA4D;AAC1DqD,QAAAA,kBAAkB,EAAEkI,OAAO,CAAClI,kBAD8B;AAE1D7H,QAAAA,QAAQ,EAARA,QAF0D;AAG1DC,QAAAA,IAAI,EAAJA,IAH0D;AAI1DwN,QAAAA,UAAU,EAAEsC,OAAO,CAACjQ,MAARiQ,IAAmBjQ,MAJ2B;AAK1DoQ,QAAAA,WAAW,EAAEH,OAAO,CAACpQ,OAARoQ,IAAoBpQ,OALyB;AAM1DkG,QAAAA,kBAAkB,EAAEkK,OAAO,CAAClK;AAN8B,OAA5DrB;AAQD,KAVD,MAUO;AACLA,MAAAA,MAAM,CAACkD,QAAPlD,CAAgBuL,OAAO,CAAChQ,MAARgQ,IAAkBhQ,MAAlCyE,EAA0C;AACxCqD,QAAAA,kBAAkB,EAAEkI,OAAO,CAAClI,kBADY;AAExC7H,QAAAA,QAAQ,EAARA,QAFwC;AAGxCC,QAAAA,IAAI,EAAJA,IAHwC;AAIxCwN,QAAAA,UAAU,EAAEsC,OAAO,CAACjQ,MAARiQ,IAAmBjQ,MAJS;AAKxCoQ,QAAAA,WAAW,EAAEH,OAAO,CAACpQ,OAARoQ,IAAoBpQ,OALO;AAMxCmI,QAAAA,OAAO,EAAEiI,OAAO,CAACjI,OANuB;AAOxClG,QAAAA,KAAK,EAAEmO,OAAO,CAACnO,KAPyB;AAQxCuO,QAAAA,WAAW,EAAEN,cAR2B;AASxChK,QAAAA,kBAAkB,EAAEkK,OAAO,CAAClK,kBATY;AAUxC+D,QAAAA,uBAAuB,EAAEmG,OAAO,CAACnG;AAVO,OAA1CpF;AAYD;AACF,GAjCIzB,EAkCL,CAACyB,MAAD,EAAS3E,QAAT,EAAmBgQ,cAAnB,CAlCK9M,CAAP;AAoCF,C,CAEA;AACA;;;AACM,SAAUyK,aAAV,CACJzN,MADI,EACW,MADX,EAEiD;AAAA,e,oBAAF,E,GAAE,MAAA;AAAA,MAAnD2J,QAAmD,UAAnDA,QAAmD;;AAAA,2BAElC3G,KAAK,CAACgH,UAANhH,CAAiBiH,wBAAjBjH,CAFkC;AAAA,MAE/ClD,QAF+C,sBAE/CA,QAF+C;;AAGrD,MAAIuQ,YAAY,GAAGrN,KAAK,CAACgH,UAANhH,CAAiBsN,mBAAjBtN,CAAnB;AACA,GAAUqN,YAAV,GAAsB,OAAA,CAAA,GAAA,CAAA,QAAA,KAAA,YAAA,GAAtB,gBAAS,CAAA,KAAA,EAAe,kDAAf,CAAa,GAAtB,gBAAS,CAAA,KAAA,CAAT,GAAS,KAAA,CAAT;;AAJqD,8BAMvCA,YAAY,CAACG,OAAbH,CAAqBI,KAArBJ,CAA2B,CAAC,CAA5BA,CANuC;AAAA;AAAA,MAMhDE,KANgD,8BAOrD;AACA;;;AACA,MAAI5F,IAAI,GAAA,QAAA,CAAQmB,EAAR,EAAQA,eAAe,CAAC9L,MAAM,GAAGA,MAAH,GAAY,GAAnB,EAAwB;AAAE2J,IAAAA,QAAAA,EAAAA;AAAF,GAAxB,CAAvB,CAAR,CATqD,CAWrD;AACA;AACA;;;AACA,MAAIxC,QAAQ,GAAG4E,WAAW,EAA1B;;AACA,MAAI/L,MAAM,IAAI,IAAd,EAAoB;AAClB;AACA;AACA2K,IAAAA,IAAI,CAACG,MAALH,GAAcxD,QAAQ,CAAC2D,MAAvBH,CAHkB,CAKlB;AACA;AACA;;AACA,QAAI+F,MAAM,GAAG,IAAI5S,eAAJ,CAAoB6M,IAAI,CAACG,MAAzB,CAAb;;AACA,QAAI4F,MAAM,CAAC1R,GAAP0R,CAAW,OAAXA,KAAuBA,MAAM,CAACC,GAAPD,CAAW,OAAXA,MAAwB,EAAnD,EAAuD;AACrDA,MAAAA,MAAM,CAACvK,MAAPuK,CAAc,OAAdA;AACA/F,MAAAA,IAAI,CAACG,MAALH,GAAc+F,MAAM,CAACE,QAAPF,KAAiB,MAAOA,MAAM,CAACE,QAAPF,EAAxBA,GAA8C,EAA5D/F;AACD;AACF;;AAED,MAAI,CAAC,CAAC3K,MAAD,IAAWA,MAAM,KAAK,GAAvB,KAA+BuQ,KAAK,CAACM,KAANN,CAAYO,KAA/C,EAAsD;AACpDnG,IAAAA,IAAI,CAACG,MAALH,GAAcA,IAAI,CAACG,MAALH,GACVA,IAAI,CAACG,MAALH,CAAY5C,OAAZ4C,CAAoB,KAApBA,EAA2B,SAA3BA,CADUA,GAEV,QAFJA;AAGD,GAlCoD,CAoCrD;AACA;AACA;AACA;;;AACA,MAAI7K,QAAQ,KAAK,GAAjB,EAAsB;AACpB6K,IAAAA,IAAI,CAACC,QAALD,GACEA,IAAI,CAACC,QAALD,KAAkB,GAAlBA,GAAwB7K,QAAxB6K,GAAmCoG,SAAS,CAAC,CAACjR,QAAD,EAAW6K,IAAI,CAACC,QAAhB,CAAD,CAD9CD;AAED;;AAED,SAAOoE,UAAU,CAACpE,IAAD,CAAjB;AACF,C,CAUA;;AAEA;;;;;;SAIgBqG,U,CAAUA,M,EAEF;AAAA,MAAA,cAAA;;AAAA,e,oBAAF,E,GAAE,MAAA;AAAA,MADtB3S,GACsB,UADtBA,GACsB;;AAAA,+BACLoQ,oBAAoB,CAACJ,cAAc,CAAC4C,UAAhB,CADf;AAAA,MAChBxM,MADgB,0BAChBA,MADgB;;AAEtB,MAAI5C,KAAK,GAAG8M,kBAAkB,CAACL,mBAAmB,CAAC2C,UAArB,CAA9B;AACA,MAAI3L,WAAW,GAAGtC,KAAK,CAACgH,UAANhH,CAAiBI,eAAjBJ,CAAlB;AACA,MAAI6N,KAAK,GAAG7N,KAAK,CAACgH,UAANhH,CAAiBsN,mBAAjBtN,CAAZ;AACA,MAAIkO,OAAO,GAAA,CAAA,cAAA,GAAGL,KAAK,CAACL,OAANK,CAAcA,KAAK,CAACL,OAANK,CAAcrE,MAAdqE,GAAuB,CAArCA,CAAH,KAA0C,IAA1C,GAA0C,KAAA,CAA1C,GAAGA,cAAAA,CAAyCA,KAAzCA,CAA+CM,EAA7D;AAEA,GAAU7L,WAAV,GAAqB,OAAA,CAAA,GAAA,CAAA,QAAA,KAAA,YAAA,GAArB,gBAAS,CAAA,KAAA,EAAA,kDAAA,CAAY,GAArB,gBAAS,CAAA,KAAA,CAAT,GAAS,KAAA,CAAT;AACA,GAAUuL,KAAV,GAAe,OAAA,CAAA,GAAA,CAAA,QAAA,KAAA,YAAA,GAAf,gBAAS,CAAA,KAAA,EAAA,+CAAA,CAAM,GAAf,gBAAS,CAAA,KAAA,CAAT,GAAS,KAAA,CAAT;AACA,IACEK,OAAO,IAAI,IADb,IACiB,OAAA,CAAA,GAAA,CAAA,QAAA,KAAA,YAAA,GADjB,gBAAS,CAAA,KAAA,EAAA,oEAAA,CACQ,GADjB,gBAAS,CAAA,KAAA,CAAT,GAAS,KAAA,CAAT,CATsB,CActB;AACA;AACA;;AACA,MAAIE,UAAU,GAAGxN,SAAS,GAAGA,SAAS,EAAZ,GAAiB,EAA3C;;AAjBsB,0BAkBYZ,KAAK,CAAC2B,QAAN3B,CAAuB3E,GAAG,IAAI+S,UAA9BpO,CAlBZ;AAAA;AAAA,MAkBjBkK,UAlBiB;AAAA,MAkBLmE,aAlBK;;AAmBtB,MAAIhT,GAAG,IAAIA,GAAG,KAAK6O,UAAnB,EAA+B;AAC7BmE,IAAAA,aAAa,CAAChT,GAAD,CAAbgT;AACD,GAFD,MAEO,IAAI,CAACnE,UAAL,EAAiB;AACtB;AACAmE,IAAAA,aAAa,CAAC1B,kBAAkB,EAAnB,CAAb0B;AACD,GAxBqB,CA0BtB;;;AACArO,EAAAA,KAAK,CAACiE,SAANjE,CAAgB,YAAK;AACnByB,IAAAA,MAAM,CAAC6M,UAAP7M,CAAkByI,UAAlBzI;AACA,WAAO,YAAK;AACV;AACA;AACA;AACAA,MAAAA,MAAM,CAAC8M,aAAP9M,CAAqByI,UAArBzI;AACD,KALD;AAMD,GARDzB,EAQG,CAACyB,MAAD,EAASyI,UAAT,CARHlK,EA3BsB,CAqCtB;;AACA,MAAIwO,IAAI,GAAGxO,KAAK,CAAC0C,WAAN1C,CACT,UAACuH,IAAD,EAAevJ,IAAf,EAA0D;AACxD,KAAUkQ,OAAV,GAAiB,OAAA,CAAA,GAAA,CAAA,QAAA,KAAA,YAAA,GAAjB,gBAAS,CAAA,KAAA,EAAU,yCAAV,CAAQ,GAAjB,gBAAS,CAAA,KAAA,CAAT,GAAS,KAAA,CAAT;AACAzM,IAAAA,MAAM,CAACyL,KAAPzL,CAAayI,UAAbzI,EAAyByM,OAAzBzM,EAAkC8F,IAAlC9F,EAAwCzD,IAAxCyD;AACD,GAJQzB,EAKT,CAACkK,UAAD,EAAagE,OAAb,EAAsBzM,MAAtB,CALSzB,CAAX;AAQA,MAAIyO,UAAU,GAAGlE,SAAS,EAA1B;AACA,MAAID,MAAM,GAAGtK,KAAK,CAAC0C,WAAN1C,CACX,UAACrF,MAAD,EAASqD,IAAT,EAAiB;AACfyQ,IAAAA,UAAU,CAAC9T,MAAD,EAAO,QAAA,CAAA,EAAA,EACZqD,IADY,EACR;AACP2G,MAAAA,QAAQ,EAAE,KADH;AAEPuF,MAAAA,UAAAA,EAAAA;AAFO,KADQ,CAAP,CAAVuE;AAKD,GAPUzO,EAQX,CAACkK,UAAD,EAAauE,UAAb,CARWzO,CAAb;AAWA,MAAI0O,WAAW,GAAG1O,KAAK,CAACsE,OAANtE,CAAc,YAAK;AACnC,QAAI0O,WAAW,GAAA,aAAG1O,KAAK,CAACwG,UAANxG,CAChB,UAACoK,KAAD,EAAQrD,GAAR,EAAe;AACb,aAAA,aACE/G,KAAC,CAAA,aAADA,CAAC,IAADA,EAAK,QAAA,CAAA,EAAA,EAAKoK,KAAL,EAAU;AAAEzF,QAAAA,QAAQ,EAAE,KAAZ;AAAmBuF,QAAAA,UAAU,EAAEA,UAA/B;AAA2CnD,QAAAA,GAAG,EAAEA;AAAhD,OAAV,CAAL/G,CADF;AAGD,KALeA,CAAlB;;AAOA,QAAA,OAAA,CAAA,GAAA,CAAA,QAAA,KAAa,YAAb,EAAa;AACX0O,MAAAA,WAAW,CAACvO,WAAZuO,GAA0B,cAA1BA;AACD;;AACD,WAAOA,WAAP;AACD,GAZiB1O,EAYf,CAACkK,UAAD,CAZelK,CAAlB,CA1DsB,CAwEtB;;AACA,MAAIqD,OAAO,GAAGxE,KAAK,CAACuE,QAANvE,CAAe8O,GAAf9O,CAAmBqL,UAAnBrL,KAAkC8P,YAAhD;AACA,MAAInP,IAAI,GAAG8C,WAAW,CAACqL,GAAZrL,CAAgB4H,UAAhB5H,CAAX;AACA,MAAIsM,qBAAqB,GAAG5O,KAAK,CAACsE,OAANtE,CAC1B;AAAA,WAAA,QAAA,CAAA;AACEiK,MAAAA,IAAI,EAAEyE,WADR;AAEEpE,MAAAA,MAAM,EAANA,MAFF;AAGEkE,MAAAA,IAAAA,EAAAA;AAHF,KAAA,EAIKnL,OAJL,EAIY;AACV7D,MAAAA,IAAAA,EAAAA;AADU,KAJZ,CAAA;AAAA,GAD0BQ,EAQ1B,CAAC0O,WAAD,EAAcpE,MAAd,EAAsBkE,IAAtB,EAA4BnL,OAA5B,EAAqC7D,IAArC,CAR0BQ,CAA5B;AAWA,SAAO4O,qBAAP;AACF;AAEA;;;;;;SAIgBC,W,GAAWA;AACzB,MAAIhQ,KAAK,GAAG8M,kBAAkB,CAACL,mBAAmB,CAACwD,WAArB,CAA9B;AACA,SAAO/T,KAAK,CAACgU,IAANhU,CAAW8D,KAAK,CAACuE,QAANvE,CAAeI,OAAfJ,EAAX9D,EAAqCS,GAArCT,CAAyC,UAAA,MAAA,EAAA;AAAA,gCAAe,MAAf;AAAA,QAAEM,GAAF;AAAA,QAAOgI,OAAP;;AAAe,WAAA,QAAA,CAAA,EAAA,EAC1DA,OAD0D,EACnD;AACVhI,MAAAA,GAAAA,EAAAA;AADU,KADmD,CAAA;AAG7D,GAHKN,CAAP;AAIF;;AAEA,IAAMiU,8BAA8B,GAAG,+BAAvC;AACA,IAAIC,oBAAoB,GAA2B,EAAnD;AAEA;;;;AAGA,SAAS7D,oBAAT,CAA6BA,MAA7B,EAMM;AAAA,e,oBAAF,E,GAAE,MAAA;AAAA,MALJF,MAKI,UALJA,MAKI;AAAA,MAJJC,UAII,UAJJA,UAII;;AAAA,+BACaM,oBAAoB,CAACJ,cAAc,CAAC6D,oBAAhB,CADjC;AAAA,MACEzN,MADF,0BACEA,MADF;;AAAA,4BAEgDkK,kBAAkB,CACpEL,mBAAmB,CAAC4D,oBADgD,CAFlE;AAAA,MAEEC,qBAFF,uBAEEA,qBAFF;AAAA,MAEyBrK,kBAFzB,uBAEyBA,kBAFzB;;AAAA,2BAKe9E,KAAK,CAACgH,UAANhH,CAAiBiH,wBAAjBjH,CALf;AAAA,MAKElD,QALF,sBAKEA,QALF;;AAMJ,MAAIqH,QAAQ,GAAG4E,WAAW,EAA1B;AACA,MAAIyE,OAAO,GAAG4B,UAAU,EAAxB;AACA,MAAI/F,UAAU,GAAGgG,aAAa,EAA9B,CARI,CAUJ;;AACArP,EAAAA,KAAK,CAACiE,SAANjE,CAAgB,YAAK;AACnBpC,IAAAA,MAAM,CAACQ,OAAPR,CAAe0R,iBAAf1R,GAAmC,QAAnCA;AACA,WAAO,YAAK;AACVA,MAAAA,MAAM,CAACQ,OAAPR,CAAe0R,iBAAf1R,GAAmC,MAAnCA;AACD,KAFD;AAGD,GALDoC,EAKG,EALHA,EAXI,CAkBJ;;AACAuP,EAAAA,WAAW,CACTvP,KAAK,CAAC0C,WAAN1C,CAAkB,YAAK;AACrB,QAAIqJ,UAAU,CAACxK,KAAXwK,KAAqB,MAAzB,EAAiC;AAC/B,UAAIhO,GAAG,GAAG,CAAC6P,MAAM,GAAGA,MAAM,CAAC/G,QAAD,EAAWqJ,OAAX,CAAT,GAA+B,IAAtC,KAA+CrJ,QAAQ,CAAC9I,GAAlE;AACA4T,MAAAA,oBAAoB,CAAC5T,GAAD,CAApB4T,GAA4BrR,MAAM,CAAC4R,OAAnCP;AACD;;AACD,QAAI;AACFQ,MAAAA,cAAc,CAACC,OAAfD,CACEtE,UAAU,IAAI6D,8BADhBS,EAEEE,IAAI,CAACC,SAALD,CAAeV,oBAAfU,CAFFF;AAID,KALD,CAKE,OAAO7P,KAAP,EAAc;AACd/C,MAAAA,OAAAA,CAAAA,GAAAA,CAAAA,QAAAA,KAAAA,YAAAA,GAAAA,cAAO,CACL,KADK,EACA,sGAC+F+C,KAD/F,GACoG,IAFpG,CAAP/C,GAGC,KAAA,CAHDA;AAID;;AACDe,IAAAA,MAAM,CAACQ,OAAPR,CAAe0R,iBAAf1R,GAAmC,MAAnCA;AACD,GAjBDoC,EAiBG,CAACmL,UAAD,EAAaD,MAAb,EAAqB7B,UAAU,CAACxK,KAAhC,EAAuCsF,QAAvC,EAAiDqJ,OAAjD,CAjBHxN,CADS,CAAXuP,CAnBI,CAwCJ;;AACA,MAAI,OAAOjT,QAAP,KAAoB,WAAxB,EAAqC;AACnC;AACA0D,IAAAA,KAAK,CAAC+D,eAAN/D,CAAsB,YAAK;AACzB,UAAI;AACF,YAAI6P,gBAAgB,GAAGJ,cAAc,CAACK,OAAfL,CACrBtE,UAAU,IAAI6D,8BADOS,CAAvB;;AAGA,YAAII,gBAAJ,EAAsB;AACpBZ,UAAAA,oBAAoB,GAAGU,IAAI,CAACI,KAALJ,CAAWE,gBAAXF,CAAvBV;AACD;AACF,OAPD,CAOE,OAAOzS,CAAP,EAAU,CACV;AAAA;AAEH,KAXDwD,EAWG,CAACmL,UAAD,CAXHnL,EAFmC,CAenC;AACA;;AACAA,IAAAA,KAAK,CAAC+D,eAAN/D,CAAsB,YAAK;AACzB,UAAIgQ,qBAAqB,GACvB9E,MAAM,IAAIpO,QAAQ,KAAK,GAAvBoO,GACI,UAAC/G,QAAD,EAAWqJ,OAAX;AAAA,eACEtC,MAAM,EAAA;AACJ+E,QAAAA,QAAAA,CAAAA,EAAAA,EAEK9L,QAFL8L,EAEa;AACXrI,UAAAA,QAAQ,EACNvK,aAAa,CAAC8G,QAAQ,CAACyD,QAAV,EAAoB9K,QAApB,CAAbO,IACA8G,QAAQ,CAACyD;AAHA,SAFbqI,CADI,EAQJzC,OARI,CADR;AAAA,OADJtC,GAYIA,MAbN;AAcA,UAAIgF,wBAAwB,GAAGzO,MAAM,IAANA,IAAAA,GAAAA,KAAAA,CAAAA,GAAAA,MAAM,CAAE0O,uBAAR1O,CAC7BwN,oBAD6BxN,EAE7B;AAAA,eAAM7D,MAAM,CAAC4R,OAAb;AAAA,OAF6B/N,EAG7BuO,qBAH6BvO,CAA/B;AAKA,aAAO;AAAA,eAAMyO,wBAAwB,IAAIA,wBAAwB,EAA1D;AAAA,OAAP;AACD,KArBDlQ,EAqBG,CAACyB,MAAD,EAAS3E,QAAT,EAAmBoO,MAAnB,CArBHlL,EAjBmC,CAwCnC;AACA;;AACAA,IAAAA,KAAK,CAAC+D,eAAN/D,CAAsB,YAAK;AACzB;AACA,UAAImP,qBAAqB,KAAK,KAA9B,EAAqC;AACnC;AACD,OAJwB,CAMzB;;;AACA,UAAI,OAAOA,qBAAP,KAAiC,QAArC,EAA+C;AAC7CvR,QAAAA,MAAM,CAACwS,QAAPxS,CAAgB,CAAhBA,EAAmBuR,qBAAnBvR;AACA;AACD,OAVwB,CAYzB;;;AACA,UAAIuG,QAAQ,CAAC4D,IAAb,EAAmB;AACjB,YAAIsI,EAAE,GAAG/T,QAAQ,CAACgU,cAAThU,CACPiU,kBAAkB,CAACpM,QAAQ,CAAC4D,IAAT5D,CAAcsJ,KAAdtJ,CAAoB,CAApBA,CAAD,CADX7H,CAAT;;AAGA,YAAI+T,EAAJ,EAAQ;AACNA,UAAAA,EAAE,CAACG,cAAHH;AACA;AACD;AACF,OArBwB,CAuBzB;;;AACA,UAAIvL,kBAAkB,KAAK,IAA3B,EAAiC;AAC/B;AACD,OA1BwB,CA4BzB;;;AACAlH,MAAAA,MAAM,CAACwS,QAAPxS,CAAgB,CAAhBA,EAAmB,CAAnBA;AACD,KA9BDoC,EA8BG,CAACmE,QAAD,EAAWgL,qBAAX,EAAkCrK,kBAAlC,CA9BH9E;AA+BD;AACH;AAIA;;;;;;;;;;AAQgB,SAAA,eAAA,CACdyQ,QADc,EAEdzD,OAFc,EAEiB;AAAA,eAEbA,OAAO,IAAI,EAFE;AAAA,MAEzB0D,OAFyB,UAEzBA,OAFyB;;AAG/B1Q,EAAAA,KAAK,CAACiE,SAANjE,CAAgB,YAAK;AACnB,QAAIhC,IAAI,GAAG0S,OAAO,IAAI,IAAXA,GAAkB;AAAEA,MAAAA,OAAAA,EAAAA;AAAF,KAAlBA,GAAgC/S,SAA3C;AACAC,IAAAA,MAAM,CAAC+S,gBAAP/S,CAAwB,cAAxBA,EAAwC6S,QAAxC7S,EAAkDI,IAAlDJ;AACA,WAAO,YAAK;AACVA,MAAAA,MAAM,CAACgT,mBAAPhT,CAA2B,cAA3BA,EAA2C6S,QAA3C7S,EAAqDI,IAArDJ;AACD,KAFD;AAGD,GANDoC,EAMG,CAACyQ,QAAD,EAAWC,OAAX,CANH1Q;AAOF;AAEA;;;;;;;;;;AAQA,SAASuP,WAAT,CACEkB,QADF,EAEEzD,OAFF,EAEiC;AAAA,eAEbA,OAAO,IAAI,EAFE;AAAA,MAEzB0D,OAFyB,UAEzBA,OAFyB;;AAG/B1Q,EAAAA,KAAK,CAACiE,SAANjE,CAAgB,YAAK;AACnB,QAAIhC,IAAI,GAAG0S,OAAO,IAAI,IAAXA,GAAkB;AAAEA,MAAAA,OAAAA,EAAAA;AAAF,KAAlBA,GAAgC/S,SAA3C;AACAC,IAAAA,MAAM,CAAC+S,gBAAP/S,CAAwB,UAAxBA,EAAoC6S,QAApC7S,EAA8CI,IAA9CJ;AACA,WAAO,YAAK;AACVA,MAAAA,MAAM,CAACgT,mBAAPhT,CAA2B,UAA3BA,EAAuC6S,QAAvC7S,EAAiDI,IAAjDJ;AACD,KAFD;AAGD,GANDoC,EAMG,CAACyQ,QAAD,EAAWC,OAAX,CANH1Q;AAOF;AAEA;;;;;;;;;;AAQA,SAAS6Q,SAAT,CAAkBA,MAAlB,EAMC;AAAA,MALCC,IAKD,GAAA,MAAA,CALCA,IAKD;AAAA,MAJCjR,OAID,GAAA,MAAA,CAJCA,OAID;AACC,MAAIkR,OAAO,GAAGC,UAAU,CAACF,IAAD,CAAxB;AAEA9Q,EAAAA,KAAK,CAACiE,SAANjE,CAAgB,YAAK;AACnB,QAAI+Q,OAAO,CAAClS,KAARkS,KAAkB,SAAtB,EAAiC;AAC/B,UAAIE,OAAO,GAAGrT,MAAM,CAACsT,OAAPtT,CAAeiC,OAAfjC,CAAd;;AACA,UAAIqT,OAAJ,EAAa;AACX;AACA;AACA;AACAE,QAAAA,UAAU,CAACJ,OAAO,CAACE,OAAT,EAAkB,CAAlB,CAAVE;AACD,OALD,MAKO;AACLJ,QAAAA,OAAO,CAACK,KAARL;AACD;AACF;AACF,GAZD/Q,EAYG,CAAC+Q,OAAD,EAAUlR,OAAV,CAZHG;AAcAA,EAAAA,KAAK,CAACiE,SAANjE,CAAgB,YAAK;AACnB,QAAI+Q,OAAO,CAAClS,KAARkS,KAAkB,SAAlBA,IAA+B,CAACD,IAApC,EAA0C;AACxCC,MAAAA,OAAO,CAACK,KAARL;AACD;AACF,GAJD/Q,EAIG,CAAC+Q,OAAD,EAAUD,IAAV,CAJH9Q;AAKF;AAIA;;;;;;;;;;AAQA,SAASiJ,sBAAT,CACEpE,EADF,EAEE7G,IAFF,EAE+C;AAAA,MAA7CA,IAAAA,KAAAA,KAAAA,CAA6C,EAA7CA;AAAAA,IAAAA,IAAAA,GAA2C,EAA3CA;AAA6C;;AAE7C,MAAI8D,SAAS,GAAG9B,KAAK,CAACgH,UAANhH,CAAiBD,qBAAjBC,CAAhB;AAEA,IACE8B,SAAS,IAAI,IADf,IACmB,OAAA,CAAA,GAAA,CAAA,QAAA,KAAA,YAAA,GADnB,gBAAS,CAEP,KAFO,EAEP,mGACE,mEAHK,CACU,GADnB,gBAAS,CAAA,KAAA,CAAT,GAAS,KAAA,CAAT;;AAJ6C,+BAU1B2J,oBAAoB,CACrCJ,cAAc,CAACpC,sBADsB,CAVM;AAAA,MAUvCnM,QAVuC,0BAUvCA,QAVuC;;AAa7C,MAAI6K,IAAI,GAAGmB,eAAe,CAACjE,EAAD,EAAK;AAAE8B,IAAAA,QAAQ,EAAE3I,IAAI,CAAC2I;AAAjB,GAAL,CAA1B;;AACA,MAAI,CAAC7E,SAAS,CAAC5B,eAAf,EAAgC;AAC9B,WAAO,KAAP;AACD;;AAED,MAAImR,WAAW,GACbhU,aAAa,CAACyE,SAAS,CAAC4B,eAAV5B,CAA0B8F,QAA3B,EAAqC9K,QAArC,CAAbO,IACAyE,SAAS,CAAC4B,eAAV5B,CAA0B8F,QAF5B;AAGA,MAAI0J,QAAQ,GACVjU,aAAa,CAACyE,SAAS,CAAC6B,YAAV7B,CAAuB8F,QAAxB,EAAkC9K,QAAlC,CAAbO,IACAyE,SAAS,CAAC6B,YAAV7B,CAAuB8F,QAFzB,CArB6C,CAyB7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SACE2J,SAAS,CAAC5J,IAAI,CAACC,QAAN,EAAgB0J,QAAhB,CAATC,IAAsC,IAAtCA,IACAA,SAAS,CAAC5J,IAAI,CAACC,QAAN,EAAgByJ,WAAhB,CAATE,IAAyC,IAF3C;AAIF,C,CAIA","sourcesContent":["import type {\n  FormEncType,\n  HTMLFormMethod,\n  RelativeRoutingType,\n} from \"@remix-run/router\";\nimport { stripBasename, UNSAFE_warning as warning } from \"@remix-run/router\";\n\nexport const defaultMethod: HTMLFormMethod = \"get\";\nconst defaultEncType: FormEncType = \"application/x-www-form-urlencoded\";\n\nexport function isHtmlElement(object: any): object is HTMLElement {\n  return object != null && typeof object.tagName === \"string\";\n}\n\nexport function isButtonElement(object: any): object is HTMLButtonElement {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"button\";\n}\n\nexport function isFormElement(object: any): object is HTMLFormElement {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"form\";\n}\n\nexport function isInputElement(object: any): object is HTMLInputElement {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"input\";\n}\n\ntype LimitedMouseEvent = Pick<\n  MouseEvent,\n  \"button\" | \"metaKey\" | \"altKey\" | \"ctrlKey\" | \"shiftKey\"\n>;\n\nfunction isModifiedEvent(event: LimitedMouseEvent) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n}\n\nexport function shouldProcessLinkClick(\n  event: LimitedMouseEvent,\n  target?: string\n) {\n  return (\n    event.button === 0 && // Ignore everything but left clicks\n    (!target || target === \"_self\") && // Let browser handle \"target=_blank\" etc.\n    !isModifiedEvent(event) // Ignore clicks with modifier keys\n  );\n}\n\nexport type ParamKeyValuePair = [string, string];\n\nexport type URLSearchParamsInit =\n  | string\n  | ParamKeyValuePair[]\n  | Record<string, string | string[]>\n  | URLSearchParams;\n\n/**\n * Creates a URLSearchParams object using the given initializer.\n *\n * This is identical to `new URLSearchParams(init)` except it also\n * supports arrays as values in the object form of the initializer\n * instead of just strings. This is convenient when you need multiple\n * values for a given key, but don't want to use an array initializer.\n *\n * For example, instead of:\n *\n *   let searchParams = new URLSearchParams([\n *     ['sort', 'name'],\n *     ['sort', 'price']\n *   ]);\n *\n * you can do:\n *\n *   let searchParams = createSearchParams({\n *     sort: ['name', 'price']\n *   });\n */\nexport function createSearchParams(\n  init: URLSearchParamsInit = \"\"\n): URLSearchParams {\n  return new URLSearchParams(\n    typeof init === \"string\" ||\n    Array.isArray(init) ||\n    init instanceof URLSearchParams\n      ? init\n      : Object.keys(init).reduce((memo, key) => {\n          let value = init[key];\n          return memo.concat(\n            Array.isArray(value) ? value.map((v) => [key, v]) : [[key, value]]\n          );\n        }, [] as ParamKeyValuePair[])\n  );\n}\n\nexport function getSearchParamsForLocation(\n  locationSearch: string,\n  defaultSearchParams: URLSearchParams | null\n) {\n  let searchParams = createSearchParams(locationSearch);\n\n  if (defaultSearchParams) {\n    // Use `defaultSearchParams.forEach(...)` here instead of iterating of\n    // `defaultSearchParams.keys()` to work-around a bug in Firefox related to\n    // web extensions. Relevant Bugzilla tickets:\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1414602\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1023984\n    defaultSearchParams.forEach((_, key) => {\n      if (!searchParams.has(key)) {\n        defaultSearchParams.getAll(key).forEach((value) => {\n          searchParams.append(key, value);\n        });\n      }\n    });\n  }\n\n  return searchParams;\n}\n\n// Thanks https://github.com/sindresorhus/type-fest!\ntype JsonObject = { [Key in string]: JsonValue } & {\n  [Key in string]?: JsonValue | undefined;\n};\ntype JsonArray = JsonValue[] | readonly JsonValue[];\ntype JsonPrimitive = string | number | boolean | null;\ntype JsonValue = JsonPrimitive | JsonObject | JsonArray;\n\nexport type SubmitTarget =\n  | HTMLFormElement\n  | HTMLButtonElement\n  | HTMLInputElement\n  | FormData\n  | URLSearchParams\n  | JsonValue\n  | null;\n\n// One-time check for submitter support\nlet _formDataSupportsSubmitter: boolean | null = null;\n\nfunction isFormDataSubmitterSupported() {\n  if (_formDataSupportsSubmitter === null) {\n    try {\n      new FormData(\n        document.createElement(\"form\"),\n        // @ts-expect-error if FormData supports the submitter parameter, this will throw\n        0\n      );\n      _formDataSupportsSubmitter = false;\n    } catch (e) {\n      _formDataSupportsSubmitter = true;\n    }\n  }\n  return _formDataSupportsSubmitter;\n}\n\n/**\n * Submit options shared by both navigations and fetchers\n */\ninterface SharedSubmitOptions {\n  /**\n   * The HTTP method used to submit the form. Overrides `<form method>`.\n   * Defaults to \"GET\".\n   */\n  method?: HTMLFormMethod;\n\n  /**\n   * The action URL path used to submit the form. Overrides `<form action>`.\n   * Defaults to the path of the current route.\n   */\n  action?: string;\n\n  /**\n   * The encoding used to submit the form. Overrides `<form encType>`.\n   * Defaults to \"application/x-www-form-urlencoded\".\n   */\n  encType?: FormEncType;\n\n  /**\n   * Determines whether the form action is relative to the route hierarchy or\n   * the pathname.  Use this if you want to opt out of navigating the route\n   * hierarchy and want to instead route based on /-delimited URL segments\n   */\n  relative?: RelativeRoutingType;\n\n  /**\n   * In browser-based environments, prevent resetting scroll after this\n   * navigation when using the <ScrollRestoration> component\n   */\n  preventScrollReset?: boolean;\n\n  /**\n   * Enable flushSync for this submission's state updates\n   */\n  unstable_flushSync?: boolean;\n}\n\n/**\n * Submit options available to fetchers\n */\nexport interface FetcherSubmitOptions extends SharedSubmitOptions {}\n\n/**\n * Submit options available to navigations\n */\nexport interface SubmitOptions extends FetcherSubmitOptions {\n  /**\n   * Set `true` to replace the current entry in the browser's history stack\n   * instead of creating a new one (i.e. stay on \"the same page\"). Defaults\n   * to `false`.\n   */\n  replace?: boolean;\n\n  /**\n   * State object to add to the history stack entry for this navigation\n   */\n  state?: any;\n\n  /**\n   * Indicate a specific fetcherKey to use when using navigate=false\n   */\n  fetcherKey?: string;\n\n  /**\n   * navigate=false will use a fetcher instead of a navigation\n   */\n  navigate?: boolean;\n\n  /**\n   * Enable view transitions on this submission navigation\n   */\n  unstable_viewTransition?: boolean;\n}\n\nconst supportedFormEncTypes: Set<FormEncType> = new Set([\n  \"application/x-www-form-urlencoded\",\n  \"multipart/form-data\",\n  \"text/plain\",\n]);\n\nfunction getFormEncType(encType: string | null) {\n  if (encType != null && !supportedFormEncTypes.has(encType as FormEncType)) {\n    warning(\n      false,\n      `\"${encType}\" is not a valid \\`encType\\` for \\`<Form>\\`/\\`<fetcher.Form>\\` ` +\n        `and will default to \"${defaultEncType}\"`\n    );\n\n    return null;\n  }\n  return encType;\n}\n\nexport function getFormSubmissionInfo(\n  target: SubmitTarget,\n  basename: string\n): {\n  action: string | null;\n  method: string;\n  encType: string;\n  formData: FormData | undefined;\n  body: any;\n} {\n  let method: string;\n  let action: string | null;\n  let encType: string;\n  let formData: FormData | undefined;\n  let body: any;\n\n  if (isFormElement(target)) {\n    // When grabbing the action from the element, it will have had the basename\n    // prefixed to ensure non-JS scenarios work, so strip it since we'll\n    // re-prefix in the router\n    let attr = target.getAttribute(\"action\");\n    action = attr ? stripBasename(attr, basename) : null;\n    method = target.getAttribute(\"method\") || defaultMethod;\n    encType = getFormEncType(target.getAttribute(\"enctype\")) || defaultEncType;\n\n    formData = new FormData(target);\n  } else if (\n    isButtonElement(target) ||\n    (isInputElement(target) &&\n      (target.type === \"submit\" || target.type === \"image\"))\n  ) {\n    let form = target.form;\n\n    if (form == null) {\n      throw new Error(\n        `Cannot submit a <button> or <input type=\"submit\"> without a <form>`\n      );\n    }\n\n    // <button>/<input type=\"submit\"> may override attributes of <form>\n\n    // When grabbing the action from the element, it will have had the basename\n    // prefixed to ensure non-JS scenarios work, so strip it since we'll\n    // re-prefix in the router\n    let attr = target.getAttribute(\"formaction\") || form.getAttribute(\"action\");\n    action = attr ? stripBasename(attr, basename) : null;\n\n    method =\n      target.getAttribute(\"formmethod\") ||\n      form.getAttribute(\"method\") ||\n      defaultMethod;\n    encType =\n      getFormEncType(target.getAttribute(\"formenctype\")) ||\n      getFormEncType(form.getAttribute(\"enctype\")) ||\n      defaultEncType;\n\n    // Build a FormData object populated from a form and submitter\n    formData = new FormData(form, target);\n\n    // If this browser doesn't support the `FormData(el, submitter)` format,\n    // then tack on the submitter value at the end.  This is a lightweight\n    // solution that is not 100% spec compliant.  For complete support in older\n    // browsers, consider using the `formdata-submitter-polyfill` package\n    if (!isFormDataSubmitterSupported()) {\n      let { name, type, value } = target;\n      if (type === \"image\") {\n        let prefix = name ? `${name}.` : \"\";\n        formData.append(`${prefix}x`, \"0\");\n        formData.append(`${prefix}y`, \"0\");\n      } else if (name) {\n        formData.append(name, value);\n      }\n    }\n  } else if (isHtmlElement(target)) {\n    throw new Error(\n      `Cannot submit element that is not <form>, <button>, or ` +\n        `<input type=\"submit|image\">`\n    );\n  } else {\n    method = defaultMethod;\n    action = null;\n    encType = defaultEncType;\n    body = target;\n  }\n\n  // Send body for <Form encType=\"text/plain\" so we encode it into text\n  if (formData && encType === \"text/plain\") {\n    body = formData;\n    formData = undefined;\n  }\n\n  return { action, method: method.toLowerCase(), encType, formData, body };\n}\n","/**\n * NOTE: If you refactor this to split up the modules into separate files,\n * you'll need to update the rollup config for react-router-dom-v5-compat.\n */\nimport * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport type {\n  DataRouteObject,\n  FutureConfig,\n  Location,\n  NavigateOptions,\n  NavigationType,\n  Navigator,\n  RelativeRoutingType,\n  RouteObject,\n  RouterProps,\n  RouterProviderProps,\n  To,\n  unstable_PatchRoutesOnMissFunction,\n} from \"react-router\";\nimport {\n  Router,\n  createPath,\n  useHref,\n  useLocation,\n  useMatches,\n  useNavigate,\n  useNavigation,\n  useResolvedPath,\n  useBlocker,\n  UNSAFE_DataRouterContext as DataRouterContext,\n  UNSAFE_DataRouterStateContext as DataRouterStateContext,\n  UNSAFE_NavigationContext as NavigationContext,\n  UNSAFE_RouteContext as RouteContext,\n  UNSAFE_mapRouteProperties as mapRouteProperties,\n  UNSAFE_useRouteId as useRouteId,\n  UNSAFE_useRoutesImpl as useRoutesImpl,\n} from \"react-router\";\nimport type {\n  BrowserHistory,\n  unstable_DataStrategyFunction,\n  unstable_DataStrategyFunctionArgs,\n  unstable_DataStrategyMatch,\n  Fetcher,\n  FormEncType,\n  FormMethod,\n  FutureConfig as RouterFutureConfig,\n  GetScrollRestorationKeyFunction,\n  HashHistory,\n  History,\n  HTMLFormMethod,\n  HydrationState,\n  Router as RemixRouter,\n  V7_FormMethod,\n  RouterState,\n  RouterSubscriber,\n  BlockerFunction,\n} from \"@remix-run/router\";\nimport {\n  createRouter,\n  createBrowserHistory,\n  createHashHistory,\n  joinPaths,\n  stripBasename,\n  UNSAFE_ErrorResponseImpl as ErrorResponseImpl,\n  UNSAFE_invariant as invariant,\n  UNSAFE_warning as warning,\n  matchPath,\n  IDLE_FETCHER,\n} from \"@remix-run/router\";\n\nimport type {\n  SubmitOptions,\n  ParamKeyValuePair,\n  URLSearchParamsInit,\n  SubmitTarget,\n  FetcherSubmitOptions,\n} from \"./dom\";\nimport {\n  createSearchParams,\n  defaultMethod,\n  getFormSubmissionInfo,\n  getSearchParamsForLocation,\n  shouldProcessLinkClick,\n} from \"./dom\";\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Re-exports\n////////////////////////////////////////////////////////////////////////////////\n\nexport type {\n  unstable_DataStrategyFunction,\n  unstable_DataStrategyFunctionArgs,\n  unstable_DataStrategyMatch,\n  FormEncType,\n  FormMethod,\n  GetScrollRestorationKeyFunction,\n  ParamKeyValuePair,\n  SubmitOptions,\n  URLSearchParamsInit,\n  V7_FormMethod,\n};\nexport { createSearchParams, ErrorResponseImpl as UNSAFE_ErrorResponseImpl };\n\n// Note: Keep in sync with react-router exports!\nexport type {\n  ActionFunction,\n  ActionFunctionArgs,\n  AwaitProps,\n  Blocker,\n  BlockerFunction,\n  DataRouteMatch,\n  DataRouteObject,\n  ErrorResponse,\n  Fetcher,\n  FutureConfig,\n  Hash,\n  IndexRouteObject,\n  IndexRouteProps,\n  JsonFunction,\n  LazyRouteFunction,\n  LayoutRouteProps,\n  LoaderFunction,\n  LoaderFunctionArgs,\n  Location,\n  MemoryRouterProps,\n  NavigateFunction,\n  NavigateOptions,\n  NavigateProps,\n  Navigation,\n  Navigator,\n  NonIndexRouteObject,\n  OutletProps,\n  Params,\n  ParamParseKey,\n  Path,\n  PathMatch,\n  Pathname,\n  PathParam,\n  PathPattern,\n  PathRouteProps,\n  RedirectFunction,\n  RelativeRoutingType,\n  RouteMatch,\n  RouteObject,\n  RouteProps,\n  RouterProps,\n  RouterProviderProps,\n  RoutesProps,\n  Search,\n  ShouldRevalidateFunction,\n  ShouldRevalidateFunctionArgs,\n  To,\n  UIMatch,\n  unstable_HandlerResult,\n  unstable_PatchRoutesOnMissFunction,\n} from \"react-router\";\nexport {\n  AbortedDeferredError,\n  Await,\n  MemoryRouter,\n  Navigate,\n  NavigationType,\n  Outlet,\n  Route,\n  Router,\n  Routes,\n  createMemoryRouter,\n  createPath,\n  createRoutesFromChildren,\n  createRoutesFromElements,\n  defer,\n  isRouteErrorResponse,\n  generatePath,\n  json,\n  matchPath,\n  matchRoutes,\n  parsePath,\n  redirect,\n  redirectDocument,\n  replace,\n  renderMatches,\n  resolvePath,\n  useActionData,\n  useAsyncError,\n  useAsyncValue,\n  useBlocker,\n  useHref,\n  useInRouterContext,\n  useLoaderData,\n  useLocation,\n  useMatch,\n  useMatches,\n  useNavigate,\n  useNavigation,\n  useNavigationType,\n  useOutlet,\n  useOutletContext,\n  useParams,\n  useResolvedPath,\n  useRevalidator,\n  useRouteError,\n  useRouteLoaderData,\n  useRoutes,\n} from \"react-router\";\n\n///////////////////////////////////////////////////////////////////////////////\n// DANGER! PLEASE READ ME!\n// We provide these exports as an escape hatch in the event that you need any\n// routing data that we don't provide an explicit API for. With that said, we\n// want to cover your use case if we can, so if you feel the need to use these\n// we want to hear from you. Let us know what you're building and we'll do our\n// best to make sure we can support you!\n//\n// We consider these exports an implementation detail and do not guarantee\n// against any breaking changes, regardless of the semver release. Use with\n// extreme caution and only if you understand the consequences. Godspeed.\n///////////////////////////////////////////////////////////////////////////////\n\n/** @internal */\nexport {\n  UNSAFE_DataRouterContext,\n  UNSAFE_DataRouterStateContext,\n  UNSAFE_NavigationContext,\n  UNSAFE_LocationContext,\n  UNSAFE_RouteContext,\n  UNSAFE_useRouteId,\n} from \"react-router\";\n//#endregion\n\ndeclare global {\n  var __staticRouterHydrationData: HydrationState | undefined;\n  var __reactRouterVersion: string;\n  interface Document {\n    startViewTransition(cb: () => Promise<void> | void): ViewTransition;\n  }\n}\n\n// HEY YOU! DON'T TOUCH THIS VARIABLE!\n//\n// It is replaced with the proper version at build time via a babel plugin in\n// the rollup config.\n//\n// Export a global property onto the window for React Router detection by the\n// Core Web Vitals Technology Report.  This way they can configure the `wappalyzer`\n// to detect and properly classify live websites as being built with React Router:\n// https://github.com/HTTPArchive/wappalyzer/blob/main/src/technologies/r.json\nconst REACT_ROUTER_VERSION = \"0\";\ntry {\n  window.__reactRouterVersion = REACT_ROUTER_VERSION;\n} catch (e) {\n  // no-op\n}\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Routers\n////////////////////////////////////////////////////////////////////////////////\n\ninterface DOMRouterOpts {\n  basename?: string;\n  future?: Partial<Omit<RouterFutureConfig, \"v7_prependBasename\">>;\n  hydrationData?: HydrationState;\n  unstable_dataStrategy?: unstable_DataStrategyFunction;\n  unstable_patchRoutesOnMiss?: unstable_PatchRoutesOnMissFunction;\n  window?: Window;\n}\n\nexport function createBrowserRouter(\n  routes: RouteObject[],\n  opts?: DOMRouterOpts\n): RemixRouter {\n  return createRouter({\n    basename: opts?.basename,\n    future: {\n      ...opts?.future,\n      v7_prependBasename: true,\n    },\n    history: createBrowserHistory({ window: opts?.window }),\n    hydrationData: opts?.hydrationData || parseHydrationData(),\n    routes,\n    mapRouteProperties,\n    unstable_dataStrategy: opts?.unstable_dataStrategy,\n    unstable_patchRoutesOnMiss: opts?.unstable_patchRoutesOnMiss,\n    window: opts?.window,\n  }).initialize();\n}\n\nexport function createHashRouter(\n  routes: RouteObject[],\n  opts?: DOMRouterOpts\n): RemixRouter {\n  return createRouter({\n    basename: opts?.basename,\n    future: {\n      ...opts?.future,\n      v7_prependBasename: true,\n    },\n    history: createHashHistory({ window: opts?.window }),\n    hydrationData: opts?.hydrationData || parseHydrationData(),\n    routes,\n    mapRouteProperties,\n    unstable_dataStrategy: opts?.unstable_dataStrategy,\n    unstable_patchRoutesOnMiss: opts?.unstable_patchRoutesOnMiss,\n    window: opts?.window,\n  }).initialize();\n}\n\nfunction parseHydrationData(): HydrationState | undefined {\n  let state = window?.__staticRouterHydrationData;\n  if (state && state.errors) {\n    state = {\n      ...state,\n      errors: deserializeErrors(state.errors),\n    };\n  }\n  return state;\n}\n\nfunction deserializeErrors(\n  errors: RemixRouter[\"state\"][\"errors\"]\n): RemixRouter[\"state\"][\"errors\"] {\n  if (!errors) return null;\n  let entries = Object.entries(errors);\n  let serialized: RemixRouter[\"state\"][\"errors\"] = {};\n  for (let [key, val] of entries) {\n    // Hey you!  If you change this, please change the corresponding logic in\n    // serializeErrors in react-router-dom/server.tsx :)\n    if (val && val.__type === \"RouteErrorResponse\") {\n      serialized[key] = new ErrorResponseImpl(\n        val.status,\n        val.statusText,\n        val.data,\n        val.internal === true\n      );\n    } else if (val && val.__type === \"Error\") {\n      // Attempt to reconstruct the right type of Error (i.e., ReferenceError)\n      if (val.__subType) {\n        let ErrorConstructor = window[val.__subType];\n        if (typeof ErrorConstructor === \"function\") {\n          try {\n            // @ts-expect-error\n            let error = new ErrorConstructor(val.message);\n            // Wipe away the client-side stack trace.  Nothing to fill it in with\n            // because we don't serialize SSR stack traces for security reasons\n            error.stack = \"\";\n            serialized[key] = error;\n          } catch (e) {\n            // no-op - fall through and create a normal Error\n          }\n        }\n      }\n\n      if (serialized[key] == null) {\n        let error = new Error(val.message);\n        // Wipe away the client-side stack trace.  Nothing to fill it in with\n        // because we don't serialize SSR stack traces for security reasons\n        error.stack = \"\";\n        serialized[key] = error;\n      }\n    } else {\n      serialized[key] = val;\n    }\n  }\n  return serialized;\n}\n\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Contexts\n////////////////////////////////////////////////////////////////////////////////\n\ntype ViewTransitionContextObject =\n  | {\n      isTransitioning: false;\n    }\n  | {\n      isTransitioning: true;\n      flushSync: boolean;\n      currentLocation: Location;\n      nextLocation: Location;\n    };\n\nconst ViewTransitionContext = React.createContext<ViewTransitionContextObject>({\n  isTransitioning: false,\n});\nif (__DEV__) {\n  ViewTransitionContext.displayName = \"ViewTransition\";\n}\n\nexport { ViewTransitionContext as UNSAFE_ViewTransitionContext };\n\n// TODO: (v7) Change the useFetcher data from `any` to `unknown`\ntype FetchersContextObject = Map<string, any>;\n\nconst FetchersContext = React.createContext<FetchersContextObject>(new Map());\nif (__DEV__) {\n  FetchersContext.displayName = \"Fetchers\";\n}\n\nexport { FetchersContext as UNSAFE_FetchersContext };\n\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Components\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n  Webpack + React 17 fails to compile on any of the following because webpack\n  complains that `startTransition` doesn't exist in `React`:\n  * import { startTransition } from \"react\"\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React.startTransition(() => setState()) : setState()\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React[\"startTransition\"](() => setState()) : setState()\n\n  Moving it to a constant such as the following solves the Webpack/React 17 issue:\n  * import * as React from from \"react\";\n    const START_TRANSITION = \"startTransition\";\n    START_TRANSITION in React ? React[START_TRANSITION](() => setState()) : setState()\n\n  However, that introduces webpack/terser minification issues in production builds\n  in React 18 where minification/obfuscation ends up removing the call of\n  React.startTransition entirely from the first half of the ternary.  Grabbing\n  this exported reference once up front resolves that issue.\n\n  See https://github.com/remix-run/react-router/issues/10579\n*/\nconst START_TRANSITION = \"startTransition\";\nconst startTransitionImpl = React[START_TRANSITION];\nconst FLUSH_SYNC = \"flushSync\";\nconst flushSyncImpl = ReactDOM[FLUSH_SYNC];\nconst USE_ID = \"useId\";\nconst useIdImpl = React[USE_ID];\n\nfunction startTransitionSafe(cb: () => void) {\n  if (startTransitionImpl) {\n    startTransitionImpl(cb);\n  } else {\n    cb();\n  }\n}\n\nfunction flushSyncSafe(cb: () => void) {\n  if (flushSyncImpl) {\n    flushSyncImpl(cb);\n  } else {\n    cb();\n  }\n}\n\ninterface ViewTransition {\n  finished: Promise<void>;\n  ready: Promise<void>;\n  updateCallbackDone: Promise<void>;\n  skipTransition(): void;\n}\n\nclass Deferred<T> {\n  status: \"pending\" | \"resolved\" | \"rejected\" = \"pending\";\n  promise: Promise<T>;\n  // @ts-expect-error - no initializer\n  resolve: (value: T) => void;\n  // @ts-expect-error - no initializer\n  reject: (reason?: unknown) => void;\n  constructor() {\n    this.promise = new Promise((resolve, reject) => {\n      this.resolve = (value) => {\n        if (this.status === \"pending\") {\n          this.status = \"resolved\";\n          resolve(value);\n        }\n      };\n      this.reject = (reason) => {\n        if (this.status === \"pending\") {\n          this.status = \"rejected\";\n          reject(reason);\n        }\n      };\n    });\n  }\n}\n\n/**\n * Given a Remix Router instance, render the appropriate UI\n */\nexport function RouterProvider({\n  fallbackElement,\n  router,\n  future,\n}: RouterProviderProps): React.ReactElement {\n  let [state, setStateImpl] = React.useState(router.state);\n  let [pendingState, setPendingState] = React.useState<RouterState>();\n  let [vtContext, setVtContext] = React.useState<ViewTransitionContextObject>({\n    isTransitioning: false,\n  });\n  let [renderDfd, setRenderDfd] = React.useState<Deferred<void>>();\n  let [transition, setTransition] = React.useState<ViewTransition>();\n  let [interruption, setInterruption] = React.useState<{\n    state: RouterState;\n    currentLocation: Location;\n    nextLocation: Location;\n  }>();\n  let fetcherData = React.useRef<Map<string, any>>(new Map());\n  let { v7_startTransition } = future || {};\n\n  let optInStartTransition = React.useCallback(\n    (cb: () => void) => {\n      if (v7_startTransition) {\n        startTransitionSafe(cb);\n      } else {\n        cb();\n      }\n    },\n    [v7_startTransition]\n  );\n\n  let setState = React.useCallback<RouterSubscriber>(\n    (\n      newState: RouterState,\n      {\n        deletedFetchers,\n        unstable_flushSync: flushSync,\n        unstable_viewTransitionOpts: viewTransitionOpts,\n      }\n    ) => {\n      deletedFetchers.forEach((key) => fetcherData.current.delete(key));\n      newState.fetchers.forEach((fetcher, key) => {\n        if (fetcher.data !== undefined) {\n          fetcherData.current.set(key, fetcher.data);\n        }\n      });\n\n      let isViewTransitionUnavailable =\n        router.window == null ||\n        router.window.document == null ||\n        typeof router.window.document.startViewTransition !== \"function\";\n\n      // If this isn't a view transition or it's not available in this browser,\n      // just update and be done with it\n      if (!viewTransitionOpts || isViewTransitionUnavailable) {\n        if (flushSync) {\n          flushSyncSafe(() => setStateImpl(newState));\n        } else {\n          optInStartTransition(() => setStateImpl(newState));\n        }\n        return;\n      }\n\n      // flushSync + startViewTransition\n      if (flushSync) {\n        // Flush through the context to mark DOM elements as transition=ing\n        flushSyncSafe(() => {\n          // Cancel any pending transitions\n          if (transition) {\n            renderDfd && renderDfd.resolve();\n            transition.skipTransition();\n          }\n          setVtContext({\n            isTransitioning: true,\n            flushSync: true,\n            currentLocation: viewTransitionOpts.currentLocation,\n            nextLocation: viewTransitionOpts.nextLocation,\n          });\n        });\n\n        // Update the DOM\n        let t = router.window!.document.startViewTransition(() => {\n          flushSyncSafe(() => setStateImpl(newState));\n        });\n\n        // Clean up after the animation completes\n        t.finished.finally(() => {\n          flushSyncSafe(() => {\n            setRenderDfd(undefined);\n            setTransition(undefined);\n            setPendingState(undefined);\n            setVtContext({ isTransitioning: false });\n          });\n        });\n\n        flushSyncSafe(() => setTransition(t));\n        return;\n      }\n\n      // startTransition + startViewTransition\n      if (transition) {\n        // Interrupting an in-progress transition, cancel and let everything flush\n        // out, and then kick off a new transition from the interruption state\n        renderDfd && renderDfd.resolve();\n        transition.skipTransition();\n        setInterruption({\n          state: newState,\n          currentLocation: viewTransitionOpts.currentLocation,\n          nextLocation: viewTransitionOpts.nextLocation,\n        });\n      } else {\n        // Completed navigation update with opted-in view transitions, let 'er rip\n        setPendingState(newState);\n        setVtContext({\n          isTransitioning: true,\n          flushSync: false,\n          currentLocation: viewTransitionOpts.currentLocation,\n          nextLocation: viewTransitionOpts.nextLocation,\n        });\n      }\n    },\n    [router.window, transition, renderDfd, fetcherData, optInStartTransition]\n  );\n\n  // Need to use a layout effect here so we are subscribed early enough to\n  // pick up on any render-driven redirects/navigations (useEffect/<Navigate>)\n  React.useLayoutEffect(() => router.subscribe(setState), [router, setState]);\n\n  // When we start a view transition, create a Deferred we can use for the\n  // eventual \"completed\" render\n  React.useEffect(() => {\n    if (vtContext.isTransitioning && !vtContext.flushSync) {\n      setRenderDfd(new Deferred<void>());\n    }\n  }, [vtContext]);\n\n  // Once the deferred is created, kick off startViewTransition() to update the\n  // DOM and then wait on the Deferred to resolve (indicating the DOM update has\n  // happened)\n  React.useEffect(() => {\n    if (renderDfd && pendingState && router.window) {\n      let newState = pendingState;\n      let renderPromise = renderDfd.promise;\n      let transition = router.window.document.startViewTransition(async () => {\n        optInStartTransition(() => setStateImpl(newState));\n        await renderPromise;\n      });\n      transition.finished.finally(() => {\n        setRenderDfd(undefined);\n        setTransition(undefined);\n        setPendingState(undefined);\n        setVtContext({ isTransitioning: false });\n      });\n      setTransition(transition);\n    }\n  }, [optInStartTransition, pendingState, renderDfd, router.window]);\n\n  // When the new location finally renders and is committed to the DOM, this\n  // effect will run to resolve the transition\n  React.useEffect(() => {\n    if (\n      renderDfd &&\n      pendingState &&\n      state.location.key === pendingState.location.key\n    ) {\n      renderDfd.resolve();\n    }\n  }, [renderDfd, transition, state.location, pendingState]);\n\n  // If we get interrupted with a new navigation during a transition, we skip\n  // the active transition, let it cleanup, then kick it off again here\n  React.useEffect(() => {\n    if (!vtContext.isTransitioning && interruption) {\n      setPendingState(interruption.state);\n      setVtContext({\n        isTransitioning: true,\n        flushSync: false,\n        currentLocation: interruption.currentLocation,\n        nextLocation: interruption.nextLocation,\n      });\n      setInterruption(undefined);\n    }\n  }, [vtContext.isTransitioning, interruption]);\n\n  React.useEffect(() => {\n    warning(\n      fallbackElement == null || !router.future.v7_partialHydration,\n      \"`<RouterProvider fallbackElement>` is deprecated when using \" +\n        \"`v7_partialHydration`, use a `HydrateFallback` component instead\"\n    );\n    // Only log this once on initial mount\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  let navigator = React.useMemo((): Navigator => {\n    return {\n      createHref: router.createHref,\n      encodeLocation: router.encodeLocation,\n      go: (n) => router.navigate(n),\n      push: (to, state, opts) =>\n        router.navigate(to, {\n          state,\n          preventScrollReset: opts?.preventScrollReset,\n        }),\n      replace: (to, state, opts) =>\n        router.navigate(to, {\n          replace: true,\n          state,\n          preventScrollReset: opts?.preventScrollReset,\n        }),\n    };\n  }, [router]);\n\n  let basename = router.basename || \"/\";\n\n  let dataRouterContext = React.useMemo(\n    () => ({\n      router,\n      navigator,\n      static: false,\n      basename,\n    }),\n    [router, navigator, basename]\n  );\n\n  let routerFuture = React.useMemo<RouterProps[\"future\"]>(\n    () => ({\n      v7_relativeSplatPath: router.future.v7_relativeSplatPath,\n    }),\n    [router.future.v7_relativeSplatPath]\n  );\n\n  // The fragment and {null} here are important!  We need them to keep React 18's\n  // useId happy when we are server-rendering since we may have a <script> here\n  // containing the hydrated server-side staticContext (from StaticRouterProvider).\n  // useId relies on the component tree structure to generate deterministic id's\n  // so we need to ensure it remains the same on the client even though\n  // we don't need the <script> tag\n  return (\n    <>\n      <DataRouterContext.Provider value={dataRouterContext}>\n        <DataRouterStateContext.Provider value={state}>\n          <FetchersContext.Provider value={fetcherData.current}>\n            <ViewTransitionContext.Provider value={vtContext}>\n              <Router\n                basename={basename}\n                location={state.location}\n                navigationType={state.historyAction}\n                navigator={navigator}\n                future={routerFuture}\n              >\n                {state.initialized || router.future.v7_partialHydration ? (\n                  <MemoizedDataRoutes\n                    routes={router.routes}\n                    future={router.future}\n                    state={state}\n                  />\n                ) : (\n                  fallbackElement\n                )}\n              </Router>\n            </ViewTransitionContext.Provider>\n          </FetchersContext.Provider>\n        </DataRouterStateContext.Provider>\n      </DataRouterContext.Provider>\n      {null}\n    </>\n  );\n}\n\n// Memoize to avoid re-renders when updating `ViewTransitionContext`\nconst MemoizedDataRoutes = React.memo(DataRoutes);\n\nfunction DataRoutes({\n  routes,\n  future,\n  state,\n}: {\n  routes: DataRouteObject[];\n  future: RemixRouter[\"future\"];\n  state: RouterState;\n}): React.ReactElement | null {\n  return useRoutesImpl(routes, undefined, state, future);\n}\n\nexport interface BrowserRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  future?: Partial<FutureConfig>;\n  window?: Window;\n}\n\n/**\n * A `<Router>` for use in web browsers. Provides the cleanest URLs.\n */\nexport function BrowserRouter({\n  basename,\n  children,\n  future,\n  window,\n}: BrowserRouterProps) {\n  let historyRef = React.useRef<BrowserHistory>();\n  if (historyRef.current == null) {\n    historyRef.current = createBrowserHistory({ window, v5Compat: true });\n  }\n\n  let history = historyRef.current;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n  let { v7_startTransition } = future || {};\n  let setState = React.useCallback(\n    (newState: { action: NavigationType; location: Location }) => {\n      v7_startTransition && startTransitionImpl\n        ? startTransitionImpl(() => setStateImpl(newState))\n        : setStateImpl(newState);\n    },\n    [setStateImpl, v7_startTransition]\n  );\n\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n      future={future}\n    />\n  );\n}\n\nexport interface HashRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  future?: Partial<FutureConfig>;\n  window?: Window;\n}\n\n/**\n * A `<Router>` for use in web browsers. Stores the location in the hash\n * portion of the URL so it is not sent to the server.\n */\nexport function HashRouter({\n  basename,\n  children,\n  future,\n  window,\n}: HashRouterProps) {\n  let historyRef = React.useRef<HashHistory>();\n  if (historyRef.current == null) {\n    historyRef.current = createHashHistory({ window, v5Compat: true });\n  }\n\n  let history = historyRef.current;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n  let { v7_startTransition } = future || {};\n  let setState = React.useCallback(\n    (newState: { action: NavigationType; location: Location }) => {\n      v7_startTransition && startTransitionImpl\n        ? startTransitionImpl(() => setStateImpl(newState))\n        : setStateImpl(newState);\n    },\n    [setStateImpl, v7_startTransition]\n  );\n\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n      future={future}\n    />\n  );\n}\n\nexport interface HistoryRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  future?: FutureConfig;\n  history: History;\n}\n\n/**\n * A `<Router>` that accepts a pre-instantiated history object. It's important\n * to note that using your own history object is highly discouraged and may add\n * two versions of the history library to your bundles unless you use the same\n * version of the history library that React Router uses internally.\n */\nfunction HistoryRouter({\n  basename,\n  children,\n  future,\n  history,\n}: HistoryRouterProps) {\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n  let { v7_startTransition } = future || {};\n  let setState = React.useCallback(\n    (newState: { action: NavigationType; location: Location }) => {\n      v7_startTransition && startTransitionImpl\n        ? startTransitionImpl(() => setStateImpl(newState))\n        : setStateImpl(newState);\n    },\n    [setStateImpl, v7_startTransition]\n  );\n\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n      future={future}\n    />\n  );\n}\n\nif (__DEV__) {\n  HistoryRouter.displayName = \"unstable_HistoryRouter\";\n}\n\nexport { HistoryRouter as unstable_HistoryRouter };\n\nexport interface LinkProps\n  extends Omit<React.AnchorHTMLAttributes<HTMLAnchorElement>, \"href\"> {\n  reloadDocument?: boolean;\n  replace?: boolean;\n  state?: any;\n  preventScrollReset?: boolean;\n  relative?: RelativeRoutingType;\n  to: To;\n  unstable_viewTransition?: boolean;\n}\n\nconst isBrowser =\n  typeof window !== \"undefined\" &&\n  typeof window.document !== \"undefined\" &&\n  typeof window.document.createElement !== \"undefined\";\n\nconst ABSOLUTE_URL_REGEX = /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i;\n\n/**\n * The public API for rendering a history-aware `<a>`.\n */\nexport const Link = React.forwardRef<HTMLAnchorElement, LinkProps>(\n  function LinkWithRef(\n    {\n      onClick,\n      relative,\n      reloadDocument,\n      replace,\n      state,\n      target,\n      to,\n      preventScrollReset,\n      unstable_viewTransition,\n      ...rest\n    },\n    ref\n  ) {\n    let { basename } = React.useContext(NavigationContext);\n\n    // Rendered into <a href> for absolute URLs\n    let absoluteHref;\n    let isExternal = false;\n\n    if (typeof to === \"string\" && ABSOLUTE_URL_REGEX.test(to)) {\n      // Render the absolute href server- and client-side\n      absoluteHref = to;\n\n      // Only check for external origins client-side\n      if (isBrowser) {\n        try {\n          let currentUrl = new URL(window.location.href);\n          let targetUrl = to.startsWith(\"//\")\n            ? new URL(currentUrl.protocol + to)\n            : new URL(to);\n          let path = stripBasename(targetUrl.pathname, basename);\n\n          if (targetUrl.origin === currentUrl.origin && path != null) {\n            // Strip the protocol/origin/basename for same-origin absolute URLs\n            to = path + targetUrl.search + targetUrl.hash;\n          } else {\n            isExternal = true;\n          }\n        } catch (e) {\n          // We can't do external URL detection without a valid URL\n          warning(\n            false,\n            `<Link to=\"${to}\"> contains an invalid URL which will probably break ` +\n              `when clicked - please update to a valid URL path.`\n          );\n        }\n      }\n    }\n\n    // Rendered into <a href> for relative URLs\n    let href = useHref(to, { relative });\n\n    let internalOnClick = useLinkClickHandler(to, {\n      replace,\n      state,\n      target,\n      preventScrollReset,\n      relative,\n      unstable_viewTransition,\n    });\n    function handleClick(\n      event: React.MouseEvent<HTMLAnchorElement, MouseEvent>\n    ) {\n      if (onClick) onClick(event);\n      if (!event.defaultPrevented) {\n        internalOnClick(event);\n      }\n    }\n\n    return (\n      // eslint-disable-next-line jsx-a11y/anchor-has-content\n      <a\n        {...rest}\n        href={absoluteHref || href}\n        onClick={isExternal || reloadDocument ? onClick : handleClick}\n        ref={ref}\n        target={target}\n      />\n    );\n  }\n);\n\nif (__DEV__) {\n  Link.displayName = \"Link\";\n}\n\nexport type NavLinkRenderProps = {\n  isActive: boolean;\n  isPending: boolean;\n  isTransitioning: boolean;\n};\n\nexport interface NavLinkProps\n  extends Omit<LinkProps, \"className\" | \"style\" | \"children\"> {\n  children?: React.ReactNode | ((props: NavLinkRenderProps) => React.ReactNode);\n  caseSensitive?: boolean;\n  className?: string | ((props: NavLinkRenderProps) => string | undefined);\n  end?: boolean;\n  style?:\n    | React.CSSProperties\n    | ((props: NavLinkRenderProps) => React.CSSProperties | undefined);\n}\n\n/**\n * A `<Link>` wrapper that knows if it's \"active\" or not.\n */\nexport const NavLink = React.forwardRef<HTMLAnchorElement, NavLinkProps>(\n  function NavLinkWithRef(\n    {\n      \"aria-current\": ariaCurrentProp = \"page\",\n      caseSensitive = false,\n      className: classNameProp = \"\",\n      end = false,\n      style: styleProp,\n      to,\n      unstable_viewTransition,\n      children,\n      ...rest\n    },\n    ref\n  ) {\n    let path = useResolvedPath(to, { relative: rest.relative });\n    let location = useLocation();\n    let routerState = React.useContext(DataRouterStateContext);\n    let { navigator, basename } = React.useContext(NavigationContext);\n    let isTransitioning =\n      routerState != null &&\n      // Conditional usage is OK here because the usage of a data router is static\n      // eslint-disable-next-line react-hooks/rules-of-hooks\n      useViewTransitionState(path) &&\n      unstable_viewTransition === true;\n\n    let toPathname = navigator.encodeLocation\n      ? navigator.encodeLocation(path).pathname\n      : path.pathname;\n    let locationPathname = location.pathname;\n    let nextLocationPathname =\n      routerState && routerState.navigation && routerState.navigation.location\n        ? routerState.navigation.location.pathname\n        : null;\n\n    if (!caseSensitive) {\n      locationPathname = locationPathname.toLowerCase();\n      nextLocationPathname = nextLocationPathname\n        ? nextLocationPathname.toLowerCase()\n        : null;\n      toPathname = toPathname.toLowerCase();\n    }\n\n    if (nextLocationPathname && basename) {\n      nextLocationPathname =\n        stripBasename(nextLocationPathname, basename) || nextLocationPathname;\n    }\n\n    // If the `to` has a trailing slash, look at that exact spot.  Otherwise,\n    // we're looking for a slash _after_ what's in `to`.  For example:\n    //\n    // <NavLink to=\"/users\"> and <NavLink to=\"/users/\">\n    // both want to look for a / at index 6 to match URL `/users/matt`\n    const endSlashPosition =\n      toPathname !== \"/\" && toPathname.endsWith(\"/\")\n        ? toPathname.length - 1\n        : toPathname.length;\n    let isActive =\n      locationPathname === toPathname ||\n      (!end &&\n        locationPathname.startsWith(toPathname) &&\n        locationPathname.charAt(endSlashPosition) === \"/\");\n\n    let isPending =\n      nextLocationPathname != null &&\n      (nextLocationPathname === toPathname ||\n        (!end &&\n          nextLocationPathname.startsWith(toPathname) &&\n          nextLocationPathname.charAt(toPathname.length) === \"/\"));\n\n    let renderProps = {\n      isActive,\n      isPending,\n      isTransitioning,\n    };\n\n    let ariaCurrent = isActive ? ariaCurrentProp : undefined;\n\n    let className: string | undefined;\n    if (typeof classNameProp === \"function\") {\n      className = classNameProp(renderProps);\n    } else {\n      // If the className prop is not a function, we use a default `active`\n      // class for <NavLink />s that are active. In v5 `active` was the default\n      // value for `activeClassName`, but we are removing that API and can still\n      // use the old default behavior for a cleaner upgrade path and keep the\n      // simple styling rules working as they currently do.\n      className = [\n        classNameProp,\n        isActive ? \"active\" : null,\n        isPending ? \"pending\" : null,\n        isTransitioning ? \"transitioning\" : null,\n      ]\n        .filter(Boolean)\n        .join(\" \");\n    }\n\n    let style =\n      typeof styleProp === \"function\" ? styleProp(renderProps) : styleProp;\n\n    return (\n      <Link\n        {...rest}\n        aria-current={ariaCurrent}\n        className={className}\n        ref={ref}\n        style={style}\n        to={to}\n        unstable_viewTransition={unstable_viewTransition}\n      >\n        {typeof children === \"function\" ? children(renderProps) : children}\n      </Link>\n    );\n  }\n);\n\nif (__DEV__) {\n  NavLink.displayName = \"NavLink\";\n}\n\n/**\n * Form props shared by navigations and fetchers\n */\ninterface SharedFormProps extends React.FormHTMLAttributes<HTMLFormElement> {\n  /**\n   * The HTTP verb to use when the form is submit. Supports \"get\", \"post\",\n   * \"put\", \"delete\", \"patch\".\n   */\n  method?: HTMLFormMethod;\n\n  /**\n   * `<form encType>` - enhancing beyond the normal string type and limiting\n   * to the built-in browser supported values\n   */\n  encType?:\n    | \"application/x-www-form-urlencoded\"\n    | \"multipart/form-data\"\n    | \"text/plain\";\n\n  /**\n   * Normal `<form action>` but supports React Router's relative paths.\n   */\n  action?: string;\n\n  /**\n   * Determines whether the form action is relative to the route hierarchy or\n   * the pathname.  Use this if you want to opt out of navigating the route\n   * hierarchy and want to instead route based on /-delimited URL segments\n   */\n  relative?: RelativeRoutingType;\n\n  /**\n   * Prevent the scroll position from resetting to the top of the viewport on\n   * completion of the navigation when using the <ScrollRestoration> component\n   */\n  preventScrollReset?: boolean;\n\n  /**\n   * A function to call when the form is submitted. If you call\n   * `event.preventDefault()` then this form will not do anything.\n   */\n  onSubmit?: React.FormEventHandler<HTMLFormElement>;\n}\n\n/**\n * Form props available to fetchers\n */\nexport interface FetcherFormProps extends SharedFormProps {}\n\n/**\n * Form props available to navigations\n */\nexport interface FormProps extends SharedFormProps {\n  /**\n   * Indicate a specific fetcherKey to use when using navigate=false\n   */\n  fetcherKey?: string;\n\n  /**\n   * navigate=false will use a fetcher instead of a navigation\n   */\n  navigate?: boolean;\n\n  /**\n   * Forces a full document navigation instead of a fetch.\n   */\n  reloadDocument?: boolean;\n\n  /**\n   * Replaces the current entry in the browser history stack when the form\n   * navigates. Use this if you don't want the user to be able to click \"back\"\n   * to the page with the form on it.\n   */\n  replace?: boolean;\n\n  /**\n   * State object to add to the history stack entry for this navigation\n   */\n  state?: any;\n\n  /**\n   * Enable view transitions on this Form navigation\n   */\n  unstable_viewTransition?: boolean;\n}\n\ntype HTMLSubmitEvent = React.BaseSyntheticEvent<\n  SubmitEvent,\n  Event,\n  HTMLFormElement\n>;\n\ntype HTMLFormSubmitter = HTMLButtonElement | HTMLInputElement;\n\n/**\n * A `@remix-run/router`-aware `<form>`. It behaves like a normal form except\n * that the interaction with the server is with `fetch` instead of new document\n * requests, allowing components to add nicer UX to the page as the form is\n * submitted and returns with data.\n */\nexport const Form = React.forwardRef<HTMLFormElement, FormProps>(\n  (\n    {\n      fetcherKey,\n      navigate,\n      reloadDocument,\n      replace,\n      state,\n      method = defaultMethod,\n      action,\n      onSubmit,\n      relative,\n      preventScrollReset,\n      unstable_viewTransition,\n      ...props\n    },\n    forwardedRef\n  ) => {\n    let submit = useSubmit();\n    let formAction = useFormAction(action, { relative });\n    let formMethod: HTMLFormMethod =\n      method.toLowerCase() === \"get\" ? \"get\" : \"post\";\n\n    let submitHandler: React.FormEventHandler<HTMLFormElement> = (event) => {\n      onSubmit && onSubmit(event);\n      if (event.defaultPrevented) return;\n      event.preventDefault();\n\n      let submitter = (event as unknown as HTMLSubmitEvent).nativeEvent\n        .submitter as HTMLFormSubmitter | null;\n\n      let submitMethod =\n        (submitter?.getAttribute(\"formmethod\") as HTMLFormMethod | undefined) ||\n        method;\n\n      submit(submitter || event.currentTarget, {\n        fetcherKey,\n        method: submitMethod,\n        navigate,\n        replace,\n        state,\n        relative,\n        preventScrollReset,\n        unstable_viewTransition,\n      });\n    };\n\n    return (\n      <form\n        ref={forwardedRef}\n        method={formMethod}\n        action={formAction}\n        onSubmit={reloadDocument ? onSubmit : submitHandler}\n        {...props}\n      />\n    );\n  }\n);\n\nif (__DEV__) {\n  Form.displayName = \"Form\";\n}\n\nexport interface ScrollRestorationProps {\n  getKey?: GetScrollRestorationKeyFunction;\n  storageKey?: string;\n}\n\n/**\n * This component will emulate the browser's scroll restoration on location\n * changes.\n */\nexport function ScrollRestoration({\n  getKey,\n  storageKey,\n}: ScrollRestorationProps) {\n  useScrollRestoration({ getKey, storageKey });\n  return null;\n}\n\nif (__DEV__) {\n  ScrollRestoration.displayName = \"ScrollRestoration\";\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Hooks\n////////////////////////////////////////////////////////////////////////////////\n\nenum DataRouterHook {\n  UseScrollRestoration = \"useScrollRestoration\",\n  UseSubmit = \"useSubmit\",\n  UseSubmitFetcher = \"useSubmitFetcher\",\n  UseFetcher = \"useFetcher\",\n  useViewTransitionState = \"useViewTransitionState\",\n}\n\nenum DataRouterStateHook {\n  UseFetcher = \"useFetcher\",\n  UseFetchers = \"useFetchers\",\n  UseScrollRestoration = \"useScrollRestoration\",\n}\n\n// Internal hooks\n\nfunction getDataRouterConsoleError(\n  hookName: DataRouterHook | DataRouterStateHook\n) {\n  return `${hookName} must be used within a data router.  See https://reactrouter.com/routers/picking-a-router.`;\n}\n\nfunction useDataRouterContext(hookName: DataRouterHook) {\n  let ctx = React.useContext(DataRouterContext);\n  invariant(ctx, getDataRouterConsoleError(hookName));\n  return ctx;\n}\n\nfunction useDataRouterState(hookName: DataRouterStateHook) {\n  let state = React.useContext(DataRouterStateContext);\n  invariant(state, getDataRouterConsoleError(hookName));\n  return state;\n}\n\n// External hooks\n\n/**\n * Handles the click behavior for router `<Link>` components. This is useful if\n * you need to create custom `<Link>` components with the same click behavior we\n * use in our exported `<Link>`.\n */\nexport function useLinkClickHandler<E extends Element = HTMLAnchorElement>(\n  to: To,\n  {\n    target,\n    replace: replaceProp,\n    state,\n    preventScrollReset,\n    relative,\n    unstable_viewTransition,\n  }: {\n    target?: React.HTMLAttributeAnchorTarget;\n    replace?: boolean;\n    state?: any;\n    preventScrollReset?: boolean;\n    relative?: RelativeRoutingType;\n    unstable_viewTransition?: boolean;\n  } = {}\n): (event: React.MouseEvent<E, MouseEvent>) => void {\n  let navigate = useNavigate();\n  let location = useLocation();\n  let path = useResolvedPath(to, { relative });\n\n  return React.useCallback(\n    (event: React.MouseEvent<E, MouseEvent>) => {\n      if (shouldProcessLinkClick(event, target)) {\n        event.preventDefault();\n\n        // If the URL hasn't changed, a regular <a> will do a replace instead of\n        // a push, so do the same here unless the replace prop is explicitly set\n        let replace =\n          replaceProp !== undefined\n            ? replaceProp\n            : createPath(location) === createPath(path);\n\n        navigate(to, {\n          replace,\n          state,\n          preventScrollReset,\n          relative,\n          unstable_viewTransition,\n        });\n      }\n    },\n    [\n      location,\n      navigate,\n      path,\n      replaceProp,\n      state,\n      target,\n      to,\n      preventScrollReset,\n      relative,\n      unstable_viewTransition,\n    ]\n  );\n}\n\n/**\n * A convenient wrapper for reading and writing search parameters via the\n * URLSearchParams interface.\n */\nexport function useSearchParams(\n  defaultInit?: URLSearchParamsInit\n): [URLSearchParams, SetURLSearchParams] {\n  warning(\n    typeof URLSearchParams !== \"undefined\",\n    `You cannot use the \\`useSearchParams\\` hook in a browser that does not ` +\n      `support the URLSearchParams API. If you need to support Internet ` +\n      `Explorer 11, we recommend you load a polyfill such as ` +\n      `https://github.com/ungap/url-search-params.`\n  );\n\n  let defaultSearchParamsRef = React.useRef(createSearchParams(defaultInit));\n  let hasSetSearchParamsRef = React.useRef(false);\n\n  let location = useLocation();\n  let searchParams = React.useMemo(\n    () =>\n      // Only merge in the defaults if we haven't yet called setSearchParams.\n      // Once we call that we want those to take precedence, otherwise you can't\n      // remove a param with setSearchParams({}) if it has an initial value\n      getSearchParamsForLocation(\n        location.search,\n        hasSetSearchParamsRef.current ? null : defaultSearchParamsRef.current\n      ),\n    [location.search]\n  );\n\n  let navigate = useNavigate();\n  let setSearchParams = React.useCallback<SetURLSearchParams>(\n    (nextInit, navigateOptions) => {\n      const newSearchParams = createSearchParams(\n        typeof nextInit === \"function\" ? nextInit(searchParams) : nextInit\n      );\n      hasSetSearchParamsRef.current = true;\n      navigate(\"?\" + newSearchParams, navigateOptions);\n    },\n    [navigate, searchParams]\n  );\n\n  return [searchParams, setSearchParams];\n}\n\nexport type SetURLSearchParams = (\n  nextInit?:\n    | URLSearchParamsInit\n    | ((prev: URLSearchParams) => URLSearchParamsInit),\n  navigateOpts?: NavigateOptions\n) => void;\n\n/**\n * Submits a HTML `<form>` to the server without reloading the page.\n */\nexport interface SubmitFunction {\n  (\n    /**\n     * Specifies the `<form>` to be submitted to the server, a specific\n     * `<button>` or `<input type=\"submit\">` to use to submit the form, or some\n     * arbitrary data to submit.\n     *\n     * Note: When using a `<button>` its `name` and `value` will also be\n     * included in the form data that is submitted.\n     */\n    target: SubmitTarget,\n\n    /**\n     * Options that override the `<form>`'s own attributes. Required when\n     * submitting arbitrary data without a backing `<form>`.\n     */\n    options?: SubmitOptions\n  ): void;\n}\n\n/**\n * Submits a fetcher `<form>` to the server without reloading the page.\n */\nexport interface FetcherSubmitFunction {\n  (\n    target: SubmitTarget,\n    // Fetchers cannot replace or set state because they are not navigation events\n    options?: FetcherSubmitOptions\n  ): void;\n}\n\nfunction validateClientSideSubmission() {\n  if (typeof document === \"undefined\") {\n    throw new Error(\n      \"You are calling submit during the server render. \" +\n        \"Try calling submit within a `useEffect` or callback instead.\"\n    );\n  }\n}\n\nlet fetcherId = 0;\nlet getUniqueFetcherId = () => `__${String(++fetcherId)}__`;\n\n/**\n * Returns a function that may be used to programmatically submit a form (or\n * some arbitrary data) to the server.\n */\nexport function useSubmit(): SubmitFunction {\n  let { router } = useDataRouterContext(DataRouterHook.UseSubmit);\n  let { basename } = React.useContext(NavigationContext);\n  let currentRouteId = useRouteId();\n\n  return React.useCallback<SubmitFunction>(\n    (target, options = {}) => {\n      validateClientSideSubmission();\n\n      let { action, method, encType, formData, body } = getFormSubmissionInfo(\n        target,\n        basename\n      );\n\n      if (options.navigate === false) {\n        let key = options.fetcherKey || getUniqueFetcherId();\n        router.fetch(key, currentRouteId, options.action || action, {\n          preventScrollReset: options.preventScrollReset,\n          formData,\n          body,\n          formMethod: options.method || (method as HTMLFormMethod),\n          formEncType: options.encType || (encType as FormEncType),\n          unstable_flushSync: options.unstable_flushSync,\n        });\n      } else {\n        router.navigate(options.action || action, {\n          preventScrollReset: options.preventScrollReset,\n          formData,\n          body,\n          formMethod: options.method || (method as HTMLFormMethod),\n          formEncType: options.encType || (encType as FormEncType),\n          replace: options.replace,\n          state: options.state,\n          fromRouteId: currentRouteId,\n          unstable_flushSync: options.unstable_flushSync,\n          unstable_viewTransition: options.unstable_viewTransition,\n        });\n      }\n    },\n    [router, basename, currentRouteId]\n  );\n}\n\n// v7: Eventually we should deprecate this entirely in favor of using the\n// router method directly?\nexport function useFormAction(\n  action?: string,\n  { relative }: { relative?: RelativeRoutingType } = {}\n): string {\n  let { basename } = React.useContext(NavigationContext);\n  let routeContext = React.useContext(RouteContext);\n  invariant(routeContext, \"useFormAction must be used inside a RouteContext\");\n\n  let [match] = routeContext.matches.slice(-1);\n  // Shallow clone path so we can modify it below, otherwise we modify the\n  // object referenced by useMemo inside useResolvedPath\n  let path = { ...useResolvedPath(action ? action : \".\", { relative }) };\n\n  // If no action was specified, browsers will persist current search params\n  // when determining the path, so match that behavior\n  // https://github.com/remix-run/remix/issues/927\n  let location = useLocation();\n  if (action == null) {\n    // Safe to write to this directly here since if action was undefined, we\n    // would have called useResolvedPath(\".\") which will never include a search\n    path.search = location.search;\n\n    // When grabbing search params from the URL, remove any included ?index param\n    // since it might not apply to our contextual route.  We add it back based\n    // on match.route.index below\n    let params = new URLSearchParams(path.search);\n    if (params.has(\"index\") && params.get(\"index\") === \"\") {\n      params.delete(\"index\");\n      path.search = params.toString() ? `?${params.toString()}` : \"\";\n    }\n  }\n\n  if ((!action || action === \".\") && match.route.index) {\n    path.search = path.search\n      ? path.search.replace(/^\\?/, \"?index&\")\n      : \"?index\";\n  }\n\n  // If we're operating within a basename, prepend it to the pathname prior\n  // to creating the form action.  If this is a root navigation, then just use\n  // the raw basename which allows the basename to have full control over the\n  // presence of a trailing slash on root actions\n  if (basename !== \"/\") {\n    path.pathname =\n      path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n  }\n\n  return createPath(path);\n}\n\nexport type FetcherWithComponents<TData> = Fetcher<TData> & {\n  Form: React.ForwardRefExoticComponent<\n    FetcherFormProps & React.RefAttributes<HTMLFormElement>\n  >;\n  submit: FetcherSubmitFunction;\n  load: (href: string, opts?: { unstable_flushSync?: boolean }) => void;\n};\n\n// TODO: (v7) Change the useFetcher generic default from `any` to `unknown`\n\n/**\n * Interacts with route loaders and actions without causing a navigation. Great\n * for any interaction that stays on the same page.\n */\nexport function useFetcher<TData = any>({\n  key,\n}: { key?: string } = {}): FetcherWithComponents<TData> {\n  let { router } = useDataRouterContext(DataRouterHook.UseFetcher);\n  let state = useDataRouterState(DataRouterStateHook.UseFetcher);\n  let fetcherData = React.useContext(FetchersContext);\n  let route = React.useContext(RouteContext);\n  let routeId = route.matches[route.matches.length - 1]?.route.id;\n\n  invariant(fetcherData, `useFetcher must be used inside a FetchersContext`);\n  invariant(route, `useFetcher must be used inside a RouteContext`);\n  invariant(\n    routeId != null,\n    `useFetcher can only be used on routes that contain a unique \"id\"`\n  );\n\n  // Fetcher key handling\n  // OK to call conditionally to feature detect `useId`\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  let defaultKey = useIdImpl ? useIdImpl() : \"\";\n  let [fetcherKey, setFetcherKey] = React.useState<string>(key || defaultKey);\n  if (key && key !== fetcherKey) {\n    setFetcherKey(key);\n  } else if (!fetcherKey) {\n    // We will only fall through here when `useId` is not available\n    setFetcherKey(getUniqueFetcherId());\n  }\n\n  // Registration/cleanup\n  React.useEffect(() => {\n    router.getFetcher(fetcherKey);\n    return () => {\n      // Tell the router we've unmounted - if v7_fetcherPersist is enabled this\n      // will not delete immediately but instead queue up a delete after the\n      // fetcher returns to an `idle` state\n      router.deleteFetcher(fetcherKey);\n    };\n  }, [router, fetcherKey]);\n\n  // Fetcher additions\n  let load = React.useCallback(\n    (href: string, opts?: { unstable_flushSync?: boolean }) => {\n      invariant(routeId, \"No routeId available for fetcher.load()\");\n      router.fetch(fetcherKey, routeId, href, opts);\n    },\n    [fetcherKey, routeId, router]\n  );\n\n  let submitImpl = useSubmit();\n  let submit = React.useCallback<FetcherSubmitFunction>(\n    (target, opts) => {\n      submitImpl(target, {\n        ...opts,\n        navigate: false,\n        fetcherKey,\n      });\n    },\n    [fetcherKey, submitImpl]\n  );\n\n  let FetcherForm = React.useMemo(() => {\n    let FetcherForm = React.forwardRef<HTMLFormElement, FetcherFormProps>(\n      (props, ref) => {\n        return (\n          <Form {...props} navigate={false} fetcherKey={fetcherKey} ref={ref} />\n        );\n      }\n    );\n    if (__DEV__) {\n      FetcherForm.displayName = \"fetcher.Form\";\n    }\n    return FetcherForm;\n  }, [fetcherKey]);\n\n  // Exposed FetcherWithComponents\n  let fetcher = state.fetchers.get(fetcherKey) || IDLE_FETCHER;\n  let data = fetcherData.get(fetcherKey);\n  let fetcherWithComponents = React.useMemo(\n    () => ({\n      Form: FetcherForm,\n      submit,\n      load,\n      ...fetcher,\n      data,\n    }),\n    [FetcherForm, submit, load, fetcher, data]\n  );\n\n  return fetcherWithComponents;\n}\n\n/**\n * Provides all fetchers currently on the page. Useful for layouts and parent\n * routes that need to provide pending/optimistic UI regarding the fetch.\n */\nexport function useFetchers(): (Fetcher & { key: string })[] {\n  let state = useDataRouterState(DataRouterStateHook.UseFetchers);\n  return Array.from(state.fetchers.entries()).map(([key, fetcher]) => ({\n    ...fetcher,\n    key,\n  }));\n}\n\nconst SCROLL_RESTORATION_STORAGE_KEY = \"react-router-scroll-positions\";\nlet savedScrollPositions: Record<string, number> = {};\n\n/**\n * When rendered inside a RouterProvider, will restore scroll positions on navigations\n */\nfunction useScrollRestoration({\n  getKey,\n  storageKey,\n}: {\n  getKey?: GetScrollRestorationKeyFunction;\n  storageKey?: string;\n} = {}) {\n  let { router } = useDataRouterContext(DataRouterHook.UseScrollRestoration);\n  let { restoreScrollPosition, preventScrollReset } = useDataRouterState(\n    DataRouterStateHook.UseScrollRestoration\n  );\n  let { basename } = React.useContext(NavigationContext);\n  let location = useLocation();\n  let matches = useMatches();\n  let navigation = useNavigation();\n\n  // Trigger manual scroll restoration while we're active\n  React.useEffect(() => {\n    window.history.scrollRestoration = \"manual\";\n    return () => {\n      window.history.scrollRestoration = \"auto\";\n    };\n  }, []);\n\n  // Save positions on pagehide\n  usePageHide(\n    React.useCallback(() => {\n      if (navigation.state === \"idle\") {\n        let key = (getKey ? getKey(location, matches) : null) || location.key;\n        savedScrollPositions[key] = window.scrollY;\n      }\n      try {\n        sessionStorage.setItem(\n          storageKey || SCROLL_RESTORATION_STORAGE_KEY,\n          JSON.stringify(savedScrollPositions)\n        );\n      } catch (error) {\n        warning(\n          false,\n          `Failed to save scroll positions in sessionStorage, <ScrollRestoration /> will not work properly (${error}).`\n        );\n      }\n      window.history.scrollRestoration = \"auto\";\n    }, [storageKey, getKey, navigation.state, location, matches])\n  );\n\n  // Read in any saved scroll locations\n  if (typeof document !== \"undefined\") {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      try {\n        let sessionPositions = sessionStorage.getItem(\n          storageKey || SCROLL_RESTORATION_STORAGE_KEY\n        );\n        if (sessionPositions) {\n          savedScrollPositions = JSON.parse(sessionPositions);\n        }\n      } catch (e) {\n        // no-op, use default empty object\n      }\n    }, [storageKey]);\n\n    // Enable scroll restoration in the router\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      let getKeyWithoutBasename: GetScrollRestorationKeyFunction | undefined =\n        getKey && basename !== \"/\"\n          ? (location, matches) =>\n              getKey(\n                // Strip the basename to match useLocation()\n                {\n                  ...location,\n                  pathname:\n                    stripBasename(location.pathname, basename) ||\n                    location.pathname,\n                },\n                matches\n              )\n          : getKey;\n      let disableScrollRestoration = router?.enableScrollRestoration(\n        savedScrollPositions,\n        () => window.scrollY,\n        getKeyWithoutBasename\n      );\n      return () => disableScrollRestoration && disableScrollRestoration();\n    }, [router, basename, getKey]);\n\n    // Restore scrolling when state.restoreScrollPosition changes\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      // Explicit false means don't do anything (used for submissions)\n      if (restoreScrollPosition === false) {\n        return;\n      }\n\n      // been here before, scroll to it\n      if (typeof restoreScrollPosition === \"number\") {\n        window.scrollTo(0, restoreScrollPosition);\n        return;\n      }\n\n      // try to scroll to the hash\n      if (location.hash) {\n        let el = document.getElementById(\n          decodeURIComponent(location.hash.slice(1))\n        );\n        if (el) {\n          el.scrollIntoView();\n          return;\n        }\n      }\n\n      // Don't reset if this navigation opted out\n      if (preventScrollReset === true) {\n        return;\n      }\n\n      // otherwise go to the top on new locations\n      window.scrollTo(0, 0);\n    }, [location, restoreScrollPosition, preventScrollReset]);\n  }\n}\n\nexport { useScrollRestoration as UNSAFE_useScrollRestoration };\n\n/**\n * Setup a callback to be fired on the window's `beforeunload` event. This is\n * useful for saving some data to `window.localStorage` just before the page\n * refreshes.\n *\n * Note: The `callback` argument should be a function created with\n * `React.useCallback()`.\n */\nexport function useBeforeUnload(\n  callback: (event: BeforeUnloadEvent) => any,\n  options?: { capture?: boolean }\n): void {\n  let { capture } = options || {};\n  React.useEffect(() => {\n    let opts = capture != null ? { capture } : undefined;\n    window.addEventListener(\"beforeunload\", callback, opts);\n    return () => {\n      window.removeEventListener(\"beforeunload\", callback, opts);\n    };\n  }, [callback, capture]);\n}\n\n/**\n * Setup a callback to be fired on the window's `pagehide` event. This is\n * useful for saving some data to `window.localStorage` just before the page\n * refreshes.  This event is better supported than beforeunload across browsers.\n *\n * Note: The `callback` argument should be a function created with\n * `React.useCallback()`.\n */\nfunction usePageHide(\n  callback: (event: PageTransitionEvent) => any,\n  options?: { capture?: boolean }\n): void {\n  let { capture } = options || {};\n  React.useEffect(() => {\n    let opts = capture != null ? { capture } : undefined;\n    window.addEventListener(\"pagehide\", callback, opts);\n    return () => {\n      window.removeEventListener(\"pagehide\", callback, opts);\n    };\n  }, [callback, capture]);\n}\n\n/**\n * Wrapper around useBlocker to show a window.confirm prompt to users instead\n * of building a custom UI with useBlocker.\n *\n * Warning: This has *a lot of rough edges* and behaves very differently (and\n * very incorrectly in some cases) across browsers if user click addition\n * back/forward navigations while the confirm is open.  Use at your own risk.\n */\nfunction usePrompt({\n  when,\n  message,\n}: {\n  when: boolean | BlockerFunction;\n  message: string;\n}) {\n  let blocker = useBlocker(when);\n\n  React.useEffect(() => {\n    if (blocker.state === \"blocked\") {\n      let proceed = window.confirm(message);\n      if (proceed) {\n        // This timeout is needed to avoid a weird \"race\" on POP navigations\n        // between the `window.history` revert navigation and the result of\n        // `window.confirm`\n        setTimeout(blocker.proceed, 0);\n      } else {\n        blocker.reset();\n      }\n    }\n  }, [blocker, message]);\n\n  React.useEffect(() => {\n    if (blocker.state === \"blocked\" && !when) {\n      blocker.reset();\n    }\n  }, [blocker, when]);\n}\n\nexport { usePrompt as unstable_usePrompt };\n\n/**\n * Return a boolean indicating if there is an active view transition to the\n * given href.  You can use this value to render CSS classes or viewTransitionName\n * styles onto your elements\n *\n * @param href The destination href\n * @param [opts.relative] Relative routing type (\"route\" | \"path\")\n */\nfunction useViewTransitionState(\n  to: To,\n  opts: { relative?: RelativeRoutingType } = {}\n) {\n  let vtContext = React.useContext(ViewTransitionContext);\n\n  invariant(\n    vtContext != null,\n    \"`unstable_useViewTransitionState` must be used within `react-router-dom`'s `RouterProvider`.  \" +\n      \"Did you accidentally import `RouterProvider` from `react-router`?\"\n  );\n\n  let { basename } = useDataRouterContext(\n    DataRouterHook.useViewTransitionState\n  );\n  let path = useResolvedPath(to, { relative: opts.relative });\n  if (!vtContext.isTransitioning) {\n    return false;\n  }\n\n  let currentPath =\n    stripBasename(vtContext.currentLocation.pathname, basename) ||\n    vtContext.currentLocation.pathname;\n  let nextPath =\n    stripBasename(vtContext.nextLocation.pathname, basename) ||\n    vtContext.nextLocation.pathname;\n\n  // Transition is active if we're going to or coming from the indicated\n  // destination.  This ensures that other PUSH navigations that reverse\n  // an indicated transition apply.  I.e., on the list view you have:\n  //\n  //   <NavLink to=\"/details/1\" unstable_viewTransition>\n  //\n  // If you click the breadcrumb back to the list view:\n  //\n  //   <NavLink to=\"/list\" unstable_viewTransition>\n  //\n  // We should apply the transition because it's indicated as active going\n  // from /list -> /details/1 and therefore should be active on the reverse\n  // (even though this isn't strictly a POP reverse)\n  return (\n    matchPath(path.pathname, nextPath) != null ||\n    matchPath(path.pathname, currentPath) != null\n  );\n}\n\nexport { useViewTransitionState as unstable_useViewTransitionState };\n\n//#endregion\n"]},"metadata":{},"sourceType":"module"}