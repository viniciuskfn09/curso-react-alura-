{"ast":null,"code":"/**\n * Utils\n */\nfunction makeGetEdgeOfNeighbor(getPeriod, getEdgeOfPeriod, defaultOffset) {\n  return function makeGetEdgeOfNeighborInternal(date, offset) {\n    if (offset === void 0) {\n      offset = defaultOffset;\n    }\n\n    var previousPeriod = getPeriod(date) + offset;\n    return getEdgeOfPeriod(previousPeriod);\n  };\n}\n\nfunction makeGetEnd(getBeginOfNextPeriod) {\n  return function makeGetEndInternal(date) {\n    return new Date(getBeginOfNextPeriod(date).getTime() - 1);\n  };\n}\n\nfunction makeGetRange(getStart, getEnd) {\n  return function makeGetRangeInternal(date) {\n    return [getStart(date), getEnd(date)];\n  };\n}\n/**\n * Simple getters - getting a property of a given point in time\n */\n\n/**\n * Gets year from a given date.\n *\n * @param {DateLike} date Date to get year from\n * @returns {number} Year\n */\n\n\nexport function getYear(date) {\n  if (date instanceof Date) {\n    return date.getFullYear();\n  }\n\n  if (typeof date === 'number') {\n    return date;\n  }\n\n  var year = parseInt(date, 10);\n\n  if (typeof date === 'string' && !isNaN(year)) {\n    return year;\n  }\n\n  throw new Error(\"Failed to get year from date: \".concat(date, \".\"));\n}\n/**\n * Gets month from a given date.\n *\n * @param {Date} date Date to get month from\n * @returns {number} Month\n */\n\nexport function getMonth(date) {\n  if (date instanceof Date) {\n    return date.getMonth();\n  }\n\n  throw new Error(\"Failed to get month from date: \".concat(date, \".\"));\n}\n/**\n * Gets human-readable month from a given date.\n *\n * @param {Date} date Date to get human-readable month from\n * @returns {number} Human-readable month\n */\n\nexport function getMonthHuman(date) {\n  if (date instanceof Date) {\n    return date.getMonth() + 1;\n  }\n\n  throw new Error(\"Failed to get human-readable month from date: \".concat(date, \".\"));\n}\n/**\n * Gets day of the month from a given date.\n *\n * @param {Date} date Date to get day of the month from\n * @returns {number} Day of the month\n */\n\nexport function getDate(date) {\n  if (date instanceof Date) {\n    return date.getDate();\n  }\n\n  throw new Error(\"Failed to get year from date: \".concat(date, \".\"));\n}\n/**\n * Gets hours from a given date.\n *\n * @param {Date | string} date Date to get hours from\n * @returns {number} Hours\n */\n\nexport function getHours(date) {\n  if (date instanceof Date) {\n    return date.getHours();\n  }\n\n  if (typeof date === 'string') {\n    var datePieces = date.split(':');\n\n    if (datePieces.length >= 2) {\n      var hoursString = datePieces[0];\n\n      if (hoursString) {\n        var hours = parseInt(hoursString, 10);\n\n        if (!isNaN(hours)) {\n          return hours;\n        }\n      }\n    }\n  }\n\n  throw new Error(\"Failed to get hours from date: \".concat(date, \".\"));\n}\n/**\n * Gets minutes from a given date.\n *\n * @param {Date | string} date Date to get minutes from\n * @returns {number} Minutes\n */\n\nexport function getMinutes(date) {\n  if (date instanceof Date) {\n    return date.getMinutes();\n  }\n\n  if (typeof date === 'string') {\n    var datePieces = date.split(':');\n\n    if (datePieces.length >= 2) {\n      var minutesString = datePieces[1] || '0';\n      var minutes = parseInt(minutesString, 10);\n\n      if (!isNaN(minutes)) {\n        return minutes;\n      }\n    }\n  }\n\n  throw new Error(\"Failed to get minutes from date: \".concat(date, \".\"));\n}\n/**\n * Gets seconds from a given date.\n *\n * @param {Date | string} date Date to get seconds from\n * @returns {number} Seconds\n */\n\nexport function getSeconds(date) {\n  if (date instanceof Date) {\n    return date.getSeconds();\n  }\n\n  if (typeof date === 'string') {\n    var datePieces = date.split(':');\n\n    if (datePieces.length >= 2) {\n      var secondsWithMillisecondsString = datePieces[2] || '0';\n      var seconds = parseInt(secondsWithMillisecondsString, 10);\n\n      if (!isNaN(seconds)) {\n        return seconds;\n      }\n    }\n  }\n\n  throw new Error(\"Failed to get seconds from date: \".concat(date, \".\"));\n}\n/**\n * Gets milliseconds from a given date.\n *\n * @param {Date | string} date Date to get milliseconds from\n * @returns {number} Milliseconds\n */\n\nexport function getMilliseconds(date) {\n  if (date instanceof Date) {\n    return date.getMilliseconds();\n  }\n\n  if (typeof date === 'string') {\n    var datePieces = date.split(':');\n\n    if (datePieces.length >= 2) {\n      var secondsWithMillisecondsString = datePieces[2] || '0';\n      var millisecondsString = secondsWithMillisecondsString.split('.')[1] || '0';\n      var milliseconds = parseInt(millisecondsString, 10);\n\n      if (!isNaN(milliseconds)) {\n        return milliseconds;\n      }\n    }\n  }\n\n  throw new Error(\"Failed to get seconds from date: \".concat(date, \".\"));\n}\n/**\n * Century\n */\n\n/**\n * Gets century start date from a given date.\n *\n * @param {DateLike} date Date to get century start from\n * @returns {Date} Century start date\n */\n\nexport function getCenturyStart(date) {\n  var year = getYear(date);\n  var centuryStartYear = year + (-year + 1) % 100;\n  var centuryStartDate = new Date();\n  centuryStartDate.setFullYear(centuryStartYear, 0, 1);\n  centuryStartDate.setHours(0, 0, 0, 0);\n  return centuryStartDate;\n}\n/**\n * Gets previous century start date from a given date.\n *\n * @param {DateLike} date Date to get previous century start from\n * @returns {Date} Previous century start date\n */\n\nexport var getPreviousCenturyStart = makeGetEdgeOfNeighbor(getYear, getCenturyStart, -100);\n/**\n * Gets next century start date from a given date.\n *\n * @param {DateLike} date Date to get next century start from\n * @returns {Date} Next century start date\n */\n\nexport var getNextCenturyStart = makeGetEdgeOfNeighbor(getYear, getCenturyStart, 100);\n/**\n * Gets century end date from a given date.\n *\n * @param {DateLike} date Date to get century end from\n * @returns {Date} Century end date\n */\n\nexport var getCenturyEnd = makeGetEnd(getNextCenturyStart);\n/**\n * Gets previous century end date from a given date.\n *\n * @param {DateLike} date Date to get previous century end from\n * @returns {Date} Previous century end date\n */\n\nexport var getPreviousCenturyEnd = makeGetEdgeOfNeighbor(getYear, getCenturyEnd, -100);\n/**\n * Gets next century end date from a given date.\n *\n * @param {DateLike} date Date to get next century end from\n * @returns {Date} Next century end date\n */\n\nexport var getNextCenturyEnd = makeGetEdgeOfNeighbor(getYear, getCenturyEnd, 100);\n/**\n * Gets century start and end dates from a given date.\n *\n * @param {DateLike} date Date to get century start and end from\n * @returns {[Date, Date]} Century start and end dates\n */\n\nexport var getCenturyRange = makeGetRange(getCenturyStart, getCenturyEnd);\n/**\n * Decade\n */\n\n/**\n * Gets decade start date from a given date.\n *\n * @param {DateLike} date Date to get decade start from\n * @returns {Date} Decade start date\n */\n\nexport function getDecadeStart(date) {\n  var year = getYear(date);\n  var decadeStartYear = year + (-year + 1) % 10;\n  var decadeStartDate = new Date();\n  decadeStartDate.setFullYear(decadeStartYear, 0, 1);\n  decadeStartDate.setHours(0, 0, 0, 0);\n  return decadeStartDate;\n}\n/**\n * Gets previous decade start date from a given date.\n *\n * @param {DateLike} date Date to get previous decade start from\n * @returns {Date} Previous decade start date\n */\n\nexport var getPreviousDecadeStart = makeGetEdgeOfNeighbor(getYear, getDecadeStart, -10);\n/**\n * Gets next decade start date from a given date.\n *\n * @param {DateLike} date Date to get next decade start from\n * @returns {Date} Next decade start date\n */\n\nexport var getNextDecadeStart = makeGetEdgeOfNeighbor(getYear, getDecadeStart, 10);\n/**\n * Gets decade end date from a given date.\n *\n * @param {DateLike} date Date to get decade end from\n * @returns {Date} Decade end date\n */\n\nexport var getDecadeEnd = makeGetEnd(getNextDecadeStart);\n/**\n * Gets previous decade end date from a given date.\n *\n * @param {DateLike} date Date to get previous decade end from\n * @returns {Date} Previous decade end date\n */\n\nexport var getPreviousDecadeEnd = makeGetEdgeOfNeighbor(getYear, getDecadeEnd, -10);\n/**\n * Gets next decade end date from a given date.\n *\n * @param {DateLike} date Date to get next decade end from\n * @returns {Date} Next decade end date\n */\n\nexport var getNextDecadeEnd = makeGetEdgeOfNeighbor(getYear, getDecadeEnd, 10);\n/**\n * Gets decade start and end dates from a given date.\n *\n * @param {DateLike} date Date to get decade start and end from\n * @returns {[Date, Date]} Decade start and end dates\n */\n\nexport var getDecadeRange = makeGetRange(getDecadeStart, getDecadeEnd);\n/**\n * Year\n */\n\n/**\n * Gets year start date from a given date.\n *\n * @param {DateLike} date Date to get year start from\n * @returns {Date} Year start date\n */\n\nexport function getYearStart(date) {\n  var year = getYear(date);\n  var yearStartDate = new Date();\n  yearStartDate.setFullYear(year, 0, 1);\n  yearStartDate.setHours(0, 0, 0, 0);\n  return yearStartDate;\n}\n/**\n * Gets previous year start date from a given date.\n *\n * @param {DateLike} date Date to get previous year start from\n * @returns {Date} Previous year start date\n */\n\nexport var getPreviousYearStart = makeGetEdgeOfNeighbor(getYear, getYearStart, -1);\n/**\n * Gets next year start date from a given date.\n *\n * @param {DateLike} date Date to get next year start from\n * @returns {Date} Next year start date\n */\n\nexport var getNextYearStart = makeGetEdgeOfNeighbor(getYear, getYearStart, 1);\n/**\n * Gets year end date from a given date.\n *\n * @param {DateLike} date Date to get year end from\n * @returns {Date} Year end date\n */\n\nexport var getYearEnd = makeGetEnd(getNextYearStart);\n/**\n * Gets previous year end date from a given date.\n *\n * @param {DateLike} date Date to get previous year end from\n * @returns {Date} Previous year end date\n */\n\nexport var getPreviousYearEnd = makeGetEdgeOfNeighbor(getYear, getYearEnd, -1);\n/**\n * Gets next year end date from a given date.\n *\n * @param {DateLike} date Date to get next year end from\n * @returns {Date} Next year end date\n */\n\nexport var getNextYearEnd = makeGetEdgeOfNeighbor(getYear, getYearEnd, 1);\n/**\n * Gets year start and end dates from a given date.\n *\n * @param {DateLike} date Date to get year start and end from\n * @returns {[Date, Date]} Year start and end dates\n */\n\nexport var getYearRange = makeGetRange(getYearStart, getYearEnd);\n/**\n * Month\n */\n\nfunction makeGetEdgeOfNeighborMonth(getEdgeOfPeriod, defaultOffset) {\n  return function makeGetEdgeOfNeighborMonthInternal(date, offset) {\n    if (offset === void 0) {\n      offset = defaultOffset;\n    }\n\n    var year = getYear(date);\n    var month = getMonth(date) + offset;\n    var previousPeriod = new Date();\n    previousPeriod.setFullYear(year, month, 1);\n    previousPeriod.setHours(0, 0, 0, 0);\n    return getEdgeOfPeriod(previousPeriod);\n  };\n}\n/**\n * Gets month start date from a given date.\n *\n * @param {DateLike} date Date to get month start from\n * @returns {Date} Month start date\n */\n\n\nexport function getMonthStart(date) {\n  var year = getYear(date);\n  var month = getMonth(date);\n  var monthStartDate = new Date();\n  monthStartDate.setFullYear(year, month, 1);\n  monthStartDate.setHours(0, 0, 0, 0);\n  return monthStartDate;\n}\n/**\n * Gets previous month start date from a given date.\n *\n * @param {DateLike} date Date to get previous month start from\n * @returns {Date} Previous month start date\n */\n\nexport var getPreviousMonthStart = makeGetEdgeOfNeighborMonth(getMonthStart, -1);\n/**\n * Gets next month start date from a given date.\n *\n * @param {DateLike} date Date to get next month start from\n * @returns {Date} Next month start date\n */\n\nexport var getNextMonthStart = makeGetEdgeOfNeighborMonth(getMonthStart, 1);\n/**\n * Gets month end date from a given date.\n *\n * @param {DateLike} date Date to get month end from\n * @returns {Date} Month end date\n */\n\nexport var getMonthEnd = makeGetEnd(getNextMonthStart);\n/**\n * Gets previous month end date from a given date.\n *\n * @param {DateLike} date Date to get previous month end from\n * @returns {Date} Previous month end date\n */\n\nexport var getPreviousMonthEnd = makeGetEdgeOfNeighborMonth(getMonthEnd, -1);\n/**\n * Gets next month end date from a given date.\n *\n * @param {DateLike} date Date to get next month end from\n * @returns {Date} Next month end date\n */\n\nexport var getNextMonthEnd = makeGetEdgeOfNeighborMonth(getMonthEnd, 1);\n/**\n * Gets month start and end dates from a given date.\n *\n * @param {DateLike} date Date to get month start and end from\n * @returns {[Date, Date]} Month start and end dates\n */\n\nexport var getMonthRange = makeGetRange(getMonthStart, getMonthEnd);\n/**\n * Day\n */\n\nfunction makeGetEdgeOfNeighborDay(getEdgeOfPeriod, defaultOffset) {\n  return function makeGetEdgeOfNeighborDayInternal(date, offset) {\n    if (offset === void 0) {\n      offset = defaultOffset;\n    }\n\n    var year = getYear(date);\n    var month = getMonth(date);\n    var day = getDate(date) + offset;\n    var previousPeriod = new Date();\n    previousPeriod.setFullYear(year, month, day);\n    previousPeriod.setHours(0, 0, 0, 0);\n    return getEdgeOfPeriod(previousPeriod);\n  };\n}\n/**\n * Gets day start date from a given date.\n *\n * @param {DateLike} date Date to get day start from\n * @returns {Date} Day start date\n */\n\n\nexport function getDayStart(date) {\n  var year = getYear(date);\n  var month = getMonth(date);\n  var day = getDate(date);\n  var dayStartDate = new Date();\n  dayStartDate.setFullYear(year, month, day);\n  dayStartDate.setHours(0, 0, 0, 0);\n  return dayStartDate;\n}\n/**\n * Gets previous day start date from a given date.\n *\n * @param {DateLike} date Date to get previous day start from\n * @returns {Date} Previous day start date\n */\n\nexport var getPreviousDayStart = makeGetEdgeOfNeighborDay(getDayStart, -1);\n/**\n * Gets next day start date from a given date.\n *\n * @param {DateLike} date Date to get next day start from\n * @returns {Date} Next day start date\n */\n\nexport var getNextDayStart = makeGetEdgeOfNeighborDay(getDayStart, 1);\n/**\n * Gets day end date from a given date.\n *\n * @param {DateLike} date Date to get day end from\n * @returns {Date} Day end date\n */\n\nexport var getDayEnd = makeGetEnd(getNextDayStart);\n/**\n * Gets previous day end date from a given date.\n *\n * @param {DateLike} date Date to get previous day end from\n * @returns {Date} Previous day end date\n */\n\nexport var getPreviousDayEnd = makeGetEdgeOfNeighborDay(getDayEnd, -1);\n/**\n * Gets next day end date from a given date.\n *\n * @param {DateLike} date Date to get next day end from\n * @returns {Date} Next day end date\n */\n\nexport var getNextDayEnd = makeGetEdgeOfNeighborDay(getDayEnd, 1);\n/**\n * Gets day start and end dates from a given date.\n *\n * @param {DateLike} date Date to get day start and end from\n * @returns {[Date, Date]} Day start and end dates\n */\n\nexport var getDayRange = makeGetRange(getDayStart, getDayEnd);\n/**\n * Other\n */\n\n/**\n * Returns a number of days in a month of a given date.\n *\n * @param {Date} date Date\n * @returns {number} Number of days in a month\n */\n\nexport function getDaysInMonth(date) {\n  return getDate(getMonthEnd(date));\n}\n\nfunction padStart(num, val) {\n  if (val === void 0) {\n    val = 2;\n  }\n\n  var numStr = \"\".concat(num);\n\n  if (numStr.length >= val) {\n    return num;\n  }\n\n  return \"0000\".concat(numStr).slice(-val);\n}\n/**\n * Returns local hours and minutes (hh:mm).\n *\n * @param {Date | string} date Date to get hours and minutes from\n * @returns {string} Local hours and minutes\n */\n\n\nexport function getHoursMinutes(date) {\n  var hours = padStart(getHours(date));\n  var minutes = padStart(getMinutes(date));\n  return \"\".concat(hours, \":\").concat(minutes);\n}\n/**\n * Returns local hours, minutes and seconds (hh:mm:ss).\n *\n * @param {Date | string} date Date to get hours, minutes and seconds from\n * @returns {string} Local hours, minutes and seconds\n */\n\nexport function getHoursMinutesSeconds(date) {\n  var hours = padStart(getHours(date));\n  var minutes = padStart(getMinutes(date));\n  var seconds = padStart(getSeconds(date));\n  return \"\".concat(hours, \":\").concat(minutes, \":\").concat(seconds);\n}\n/**\n * Returns local month in ISO-like format (YYYY-MM).\n *\n * @param {Date} date Date to get month in ISO-like format from\n * @returns {string} Local month in ISO-like format\n */\n\nexport function getISOLocalMonth(date) {\n  var year = padStart(getYear(date), 4);\n  var month = padStart(getMonthHuman(date));\n  return \"\".concat(year, \"-\").concat(month);\n}\n/**\n * Returns local date in ISO-like format (YYYY-MM-DD).\n *\n * @param {Date} date Date to get date in ISO-like format from\n * @returns {string} Local date in ISO-like format\n */\n\nexport function getISOLocalDate(date) {\n  var year = padStart(getYear(date), 4);\n  var month = padStart(getMonthHuman(date));\n  var day = padStart(getDate(date));\n  return \"\".concat(year, \"-\").concat(month, \"-\").concat(day);\n}\n/**\n * Returns local date & time in ISO-like format (YYYY-MM-DDThh:mm:ss).\n *\n * @param {Date} date Date to get date & time in ISO-like format from\n * @returns {string} Local date & time in ISO-like format\n */\n\nexport function getISOLocalDateTime(date) {\n  return \"\".concat(getISOLocalDate(date), \"T\").concat(getHoursMinutesSeconds(date));\n}","map":{"version":3,"sources":["C:/Users/Lenovo/Documents/REACT/curso-react-alura/node_modules/@wojtekmaj/date-utils/dist/esm/index.js"],"names":["makeGetEdgeOfNeighbor","getPeriod","getEdgeOfPeriod","defaultOffset","makeGetEdgeOfNeighborInternal","date","offset","previousPeriod","makeGetEnd","getBeginOfNextPeriod","makeGetEndInternal","Date","getTime","makeGetRange","getStart","getEnd","makeGetRangeInternal","getYear","getFullYear","year","parseInt","isNaN","Error","concat","getMonth","getMonthHuman","getDate","getHours","datePieces","split","length","hoursString","hours","getMinutes","minutesString","minutes","getSeconds","secondsWithMillisecondsString","seconds","getMilliseconds","millisecondsString","milliseconds","getCenturyStart","centuryStartYear","centuryStartDate","setFullYear","setHours","getPreviousCenturyStart","getNextCenturyStart","getCenturyEnd","getPreviousCenturyEnd","getNextCenturyEnd","getCenturyRange","getDecadeStart","decadeStartYear","decadeStartDate","getPreviousDecadeStart","getNextDecadeStart","getDecadeEnd","getPreviousDecadeEnd","getNextDecadeEnd","getDecadeRange","getYearStart","yearStartDate","getPreviousYearStart","getNextYearStart","getYearEnd","getPreviousYearEnd","getNextYearEnd","getYearRange","makeGetEdgeOfNeighborMonth","makeGetEdgeOfNeighborMonthInternal","month","getMonthStart","monthStartDate","getPreviousMonthStart","getNextMonthStart","getMonthEnd","getPreviousMonthEnd","getNextMonthEnd","getMonthRange","makeGetEdgeOfNeighborDay","makeGetEdgeOfNeighborDayInternal","day","getDayStart","dayStartDate","getPreviousDayStart","getNextDayStart","getDayEnd","getPreviousDayEnd","getNextDayEnd","getDayRange","getDaysInMonth","padStart","num","val","numStr","slice","getHoursMinutes","getHoursMinutesSeconds","getISOLocalMonth","getISOLocalDate","getISOLocalDateTime"],"mappings":"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","sourcesContent":["/**\n * Utils\n */\nfunction makeGetEdgeOfNeighbor(getPeriod, getEdgeOfPeriod, defaultOffset) {\n    return function makeGetEdgeOfNeighborInternal(date, offset) {\n        if (offset === void 0) { offset = defaultOffset; }\n        var previousPeriod = getPeriod(date) + offset;\n        return getEdgeOfPeriod(previousPeriod);\n    };\n}\nfunction makeGetEnd(getBeginOfNextPeriod) {\n    return function makeGetEndInternal(date) {\n        return new Date(getBeginOfNextPeriod(date).getTime() - 1);\n    };\n}\nfunction makeGetRange(getStart, getEnd) {\n    return function makeGetRangeInternal(date) {\n        return [getStart(date), getEnd(date)];\n    };\n}\n/**\n * Simple getters - getting a property of a given point in time\n */\n/**\n * Gets year from a given date.\n *\n * @param {DateLike} date Date to get year from\n * @returns {number} Year\n */\nexport function getYear(date) {\n    if (date instanceof Date) {\n        return date.getFullYear();\n    }\n    if (typeof date === 'number') {\n        return date;\n    }\n    var year = parseInt(date, 10);\n    if (typeof date === 'string' && !isNaN(year)) {\n        return year;\n    }\n    throw new Error(\"Failed to get year from date: \".concat(date, \".\"));\n}\n/**\n * Gets month from a given date.\n *\n * @param {Date} date Date to get month from\n * @returns {number} Month\n */\nexport function getMonth(date) {\n    if (date instanceof Date) {\n        return date.getMonth();\n    }\n    throw new Error(\"Failed to get month from date: \".concat(date, \".\"));\n}\n/**\n * Gets human-readable month from a given date.\n *\n * @param {Date} date Date to get human-readable month from\n * @returns {number} Human-readable month\n */\nexport function getMonthHuman(date) {\n    if (date instanceof Date) {\n        return date.getMonth() + 1;\n    }\n    throw new Error(\"Failed to get human-readable month from date: \".concat(date, \".\"));\n}\n/**\n * Gets day of the month from a given date.\n *\n * @param {Date} date Date to get day of the month from\n * @returns {number} Day of the month\n */\nexport function getDate(date) {\n    if (date instanceof Date) {\n        return date.getDate();\n    }\n    throw new Error(\"Failed to get year from date: \".concat(date, \".\"));\n}\n/**\n * Gets hours from a given date.\n *\n * @param {Date | string} date Date to get hours from\n * @returns {number} Hours\n */\nexport function getHours(date) {\n    if (date instanceof Date) {\n        return date.getHours();\n    }\n    if (typeof date === 'string') {\n        var datePieces = date.split(':');\n        if (datePieces.length >= 2) {\n            var hoursString = datePieces[0];\n            if (hoursString) {\n                var hours = parseInt(hoursString, 10);\n                if (!isNaN(hours)) {\n                    return hours;\n                }\n            }\n        }\n    }\n    throw new Error(\"Failed to get hours from date: \".concat(date, \".\"));\n}\n/**\n * Gets minutes from a given date.\n *\n * @param {Date | string} date Date to get minutes from\n * @returns {number} Minutes\n */\nexport function getMinutes(date) {\n    if (date instanceof Date) {\n        return date.getMinutes();\n    }\n    if (typeof date === 'string') {\n        var datePieces = date.split(':');\n        if (datePieces.length >= 2) {\n            var minutesString = datePieces[1] || '0';\n            var minutes = parseInt(minutesString, 10);\n            if (!isNaN(minutes)) {\n                return minutes;\n            }\n        }\n    }\n    throw new Error(\"Failed to get minutes from date: \".concat(date, \".\"));\n}\n/**\n * Gets seconds from a given date.\n *\n * @param {Date | string} date Date to get seconds from\n * @returns {number} Seconds\n */\nexport function getSeconds(date) {\n    if (date instanceof Date) {\n        return date.getSeconds();\n    }\n    if (typeof date === 'string') {\n        var datePieces = date.split(':');\n        if (datePieces.length >= 2) {\n            var secondsWithMillisecondsString = datePieces[2] || '0';\n            var seconds = parseInt(secondsWithMillisecondsString, 10);\n            if (!isNaN(seconds)) {\n                return seconds;\n            }\n        }\n    }\n    throw new Error(\"Failed to get seconds from date: \".concat(date, \".\"));\n}\n/**\n * Gets milliseconds from a given date.\n *\n * @param {Date | string} date Date to get milliseconds from\n * @returns {number} Milliseconds\n */\nexport function getMilliseconds(date) {\n    if (date instanceof Date) {\n        return date.getMilliseconds();\n    }\n    if (typeof date === 'string') {\n        var datePieces = date.split(':');\n        if (datePieces.length >= 2) {\n            var secondsWithMillisecondsString = datePieces[2] || '0';\n            var millisecondsString = secondsWithMillisecondsString.split('.')[1] || '0';\n            var milliseconds = parseInt(millisecondsString, 10);\n            if (!isNaN(milliseconds)) {\n                return milliseconds;\n            }\n        }\n    }\n    throw new Error(\"Failed to get seconds from date: \".concat(date, \".\"));\n}\n/**\n * Century\n */\n/**\n * Gets century start date from a given date.\n *\n * @param {DateLike} date Date to get century start from\n * @returns {Date} Century start date\n */\nexport function getCenturyStart(date) {\n    var year = getYear(date);\n    var centuryStartYear = year + ((-year + 1) % 100);\n    var centuryStartDate = new Date();\n    centuryStartDate.setFullYear(centuryStartYear, 0, 1);\n    centuryStartDate.setHours(0, 0, 0, 0);\n    return centuryStartDate;\n}\n/**\n * Gets previous century start date from a given date.\n *\n * @param {DateLike} date Date to get previous century start from\n * @returns {Date} Previous century start date\n */\nexport var getPreviousCenturyStart = makeGetEdgeOfNeighbor(getYear, getCenturyStart, -100);\n/**\n * Gets next century start date from a given date.\n *\n * @param {DateLike} date Date to get next century start from\n * @returns {Date} Next century start date\n */\nexport var getNextCenturyStart = makeGetEdgeOfNeighbor(getYear, getCenturyStart, 100);\n/**\n * Gets century end date from a given date.\n *\n * @param {DateLike} date Date to get century end from\n * @returns {Date} Century end date\n */\nexport var getCenturyEnd = makeGetEnd(getNextCenturyStart);\n/**\n * Gets previous century end date from a given date.\n *\n * @param {DateLike} date Date to get previous century end from\n * @returns {Date} Previous century end date\n */\nexport var getPreviousCenturyEnd = makeGetEdgeOfNeighbor(getYear, getCenturyEnd, -100);\n/**\n * Gets next century end date from a given date.\n *\n * @param {DateLike} date Date to get next century end from\n * @returns {Date} Next century end date\n */\nexport var getNextCenturyEnd = makeGetEdgeOfNeighbor(getYear, getCenturyEnd, 100);\n/**\n * Gets century start and end dates from a given date.\n *\n * @param {DateLike} date Date to get century start and end from\n * @returns {[Date, Date]} Century start and end dates\n */\nexport var getCenturyRange = makeGetRange(getCenturyStart, getCenturyEnd);\n/**\n * Decade\n */\n/**\n * Gets decade start date from a given date.\n *\n * @param {DateLike} date Date to get decade start from\n * @returns {Date} Decade start date\n */\nexport function getDecadeStart(date) {\n    var year = getYear(date);\n    var decadeStartYear = year + ((-year + 1) % 10);\n    var decadeStartDate = new Date();\n    decadeStartDate.setFullYear(decadeStartYear, 0, 1);\n    decadeStartDate.setHours(0, 0, 0, 0);\n    return decadeStartDate;\n}\n/**\n * Gets previous decade start date from a given date.\n *\n * @param {DateLike} date Date to get previous decade start from\n * @returns {Date} Previous decade start date\n */\nexport var getPreviousDecadeStart = makeGetEdgeOfNeighbor(getYear, getDecadeStart, -10);\n/**\n * Gets next decade start date from a given date.\n *\n * @param {DateLike} date Date to get next decade start from\n * @returns {Date} Next decade start date\n */\nexport var getNextDecadeStart = makeGetEdgeOfNeighbor(getYear, getDecadeStart, 10);\n/**\n * Gets decade end date from a given date.\n *\n * @param {DateLike} date Date to get decade end from\n * @returns {Date} Decade end date\n */\nexport var getDecadeEnd = makeGetEnd(getNextDecadeStart);\n/**\n * Gets previous decade end date from a given date.\n *\n * @param {DateLike} date Date to get previous decade end from\n * @returns {Date} Previous decade end date\n */\nexport var getPreviousDecadeEnd = makeGetEdgeOfNeighbor(getYear, getDecadeEnd, -10);\n/**\n * Gets next decade end date from a given date.\n *\n * @param {DateLike} date Date to get next decade end from\n * @returns {Date} Next decade end date\n */\nexport var getNextDecadeEnd = makeGetEdgeOfNeighbor(getYear, getDecadeEnd, 10);\n/**\n * Gets decade start and end dates from a given date.\n *\n * @param {DateLike} date Date to get decade start and end from\n * @returns {[Date, Date]} Decade start and end dates\n */\nexport var getDecadeRange = makeGetRange(getDecadeStart, getDecadeEnd);\n/**\n * Year\n */\n/**\n * Gets year start date from a given date.\n *\n * @param {DateLike} date Date to get year start from\n * @returns {Date} Year start date\n */\nexport function getYearStart(date) {\n    var year = getYear(date);\n    var yearStartDate = new Date();\n    yearStartDate.setFullYear(year, 0, 1);\n    yearStartDate.setHours(0, 0, 0, 0);\n    return yearStartDate;\n}\n/**\n * Gets previous year start date from a given date.\n *\n * @param {DateLike} date Date to get previous year start from\n * @returns {Date} Previous year start date\n */\nexport var getPreviousYearStart = makeGetEdgeOfNeighbor(getYear, getYearStart, -1);\n/**\n * Gets next year start date from a given date.\n *\n * @param {DateLike} date Date to get next year start from\n * @returns {Date} Next year start date\n */\nexport var getNextYearStart = makeGetEdgeOfNeighbor(getYear, getYearStart, 1);\n/**\n * Gets year end date from a given date.\n *\n * @param {DateLike} date Date to get year end from\n * @returns {Date} Year end date\n */\nexport var getYearEnd = makeGetEnd(getNextYearStart);\n/**\n * Gets previous year end date from a given date.\n *\n * @param {DateLike} date Date to get previous year end from\n * @returns {Date} Previous year end date\n */\nexport var getPreviousYearEnd = makeGetEdgeOfNeighbor(getYear, getYearEnd, -1);\n/**\n * Gets next year end date from a given date.\n *\n * @param {DateLike} date Date to get next year end from\n * @returns {Date} Next year end date\n */\nexport var getNextYearEnd = makeGetEdgeOfNeighbor(getYear, getYearEnd, 1);\n/**\n * Gets year start and end dates from a given date.\n *\n * @param {DateLike} date Date to get year start and end from\n * @returns {[Date, Date]} Year start and end dates\n */\nexport var getYearRange = makeGetRange(getYearStart, getYearEnd);\n/**\n * Month\n */\nfunction makeGetEdgeOfNeighborMonth(getEdgeOfPeriod, defaultOffset) {\n    return function makeGetEdgeOfNeighborMonthInternal(date, offset) {\n        if (offset === void 0) { offset = defaultOffset; }\n        var year = getYear(date);\n        var month = getMonth(date) + offset;\n        var previousPeriod = new Date();\n        previousPeriod.setFullYear(year, month, 1);\n        previousPeriod.setHours(0, 0, 0, 0);\n        return getEdgeOfPeriod(previousPeriod);\n    };\n}\n/**\n * Gets month start date from a given date.\n *\n * @param {DateLike} date Date to get month start from\n * @returns {Date} Month start date\n */\nexport function getMonthStart(date) {\n    var year = getYear(date);\n    var month = getMonth(date);\n    var monthStartDate = new Date();\n    monthStartDate.setFullYear(year, month, 1);\n    monthStartDate.setHours(0, 0, 0, 0);\n    return monthStartDate;\n}\n/**\n * Gets previous month start date from a given date.\n *\n * @param {DateLike} date Date to get previous month start from\n * @returns {Date} Previous month start date\n */\nexport var getPreviousMonthStart = makeGetEdgeOfNeighborMonth(getMonthStart, -1);\n/**\n * Gets next month start date from a given date.\n *\n * @param {DateLike} date Date to get next month start from\n * @returns {Date} Next month start date\n */\nexport var getNextMonthStart = makeGetEdgeOfNeighborMonth(getMonthStart, 1);\n/**\n * Gets month end date from a given date.\n *\n * @param {DateLike} date Date to get month end from\n * @returns {Date} Month end date\n */\nexport var getMonthEnd = makeGetEnd(getNextMonthStart);\n/**\n * Gets previous month end date from a given date.\n *\n * @param {DateLike} date Date to get previous month end from\n * @returns {Date} Previous month end date\n */\nexport var getPreviousMonthEnd = makeGetEdgeOfNeighborMonth(getMonthEnd, -1);\n/**\n * Gets next month end date from a given date.\n *\n * @param {DateLike} date Date to get next month end from\n * @returns {Date} Next month end date\n */\nexport var getNextMonthEnd = makeGetEdgeOfNeighborMonth(getMonthEnd, 1);\n/**\n * Gets month start and end dates from a given date.\n *\n * @param {DateLike} date Date to get month start and end from\n * @returns {[Date, Date]} Month start and end dates\n */\nexport var getMonthRange = makeGetRange(getMonthStart, getMonthEnd);\n/**\n * Day\n */\nfunction makeGetEdgeOfNeighborDay(getEdgeOfPeriod, defaultOffset) {\n    return function makeGetEdgeOfNeighborDayInternal(date, offset) {\n        if (offset === void 0) { offset = defaultOffset; }\n        var year = getYear(date);\n        var month = getMonth(date);\n        var day = getDate(date) + offset;\n        var previousPeriod = new Date();\n        previousPeriod.setFullYear(year, month, day);\n        previousPeriod.setHours(0, 0, 0, 0);\n        return getEdgeOfPeriod(previousPeriod);\n    };\n}\n/**\n * Gets day start date from a given date.\n *\n * @param {DateLike} date Date to get day start from\n * @returns {Date} Day start date\n */\nexport function getDayStart(date) {\n    var year = getYear(date);\n    var month = getMonth(date);\n    var day = getDate(date);\n    var dayStartDate = new Date();\n    dayStartDate.setFullYear(year, month, day);\n    dayStartDate.setHours(0, 0, 0, 0);\n    return dayStartDate;\n}\n/**\n * Gets previous day start date from a given date.\n *\n * @param {DateLike} date Date to get previous day start from\n * @returns {Date} Previous day start date\n */\nexport var getPreviousDayStart = makeGetEdgeOfNeighborDay(getDayStart, -1);\n/**\n * Gets next day start date from a given date.\n *\n * @param {DateLike} date Date to get next day start from\n * @returns {Date} Next day start date\n */\nexport var getNextDayStart = makeGetEdgeOfNeighborDay(getDayStart, 1);\n/**\n * Gets day end date from a given date.\n *\n * @param {DateLike} date Date to get day end from\n * @returns {Date} Day end date\n */\nexport var getDayEnd = makeGetEnd(getNextDayStart);\n/**\n * Gets previous day end date from a given date.\n *\n * @param {DateLike} date Date to get previous day end from\n * @returns {Date} Previous day end date\n */\nexport var getPreviousDayEnd = makeGetEdgeOfNeighborDay(getDayEnd, -1);\n/**\n * Gets next day end date from a given date.\n *\n * @param {DateLike} date Date to get next day end from\n * @returns {Date} Next day end date\n */\nexport var getNextDayEnd = makeGetEdgeOfNeighborDay(getDayEnd, 1);\n/**\n * Gets day start and end dates from a given date.\n *\n * @param {DateLike} date Date to get day start and end from\n * @returns {[Date, Date]} Day start and end dates\n */\nexport var getDayRange = makeGetRange(getDayStart, getDayEnd);\n/**\n * Other\n */\n/**\n * Returns a number of days in a month of a given date.\n *\n * @param {Date} date Date\n * @returns {number} Number of days in a month\n */\nexport function getDaysInMonth(date) {\n    return getDate(getMonthEnd(date));\n}\nfunction padStart(num, val) {\n    if (val === void 0) { val = 2; }\n    var numStr = \"\".concat(num);\n    if (numStr.length >= val) {\n        return num;\n    }\n    return \"0000\".concat(numStr).slice(-val);\n}\n/**\n * Returns local hours and minutes (hh:mm).\n *\n * @param {Date | string} date Date to get hours and minutes from\n * @returns {string} Local hours and minutes\n */\nexport function getHoursMinutes(date) {\n    var hours = padStart(getHours(date));\n    var minutes = padStart(getMinutes(date));\n    return \"\".concat(hours, \":\").concat(minutes);\n}\n/**\n * Returns local hours, minutes and seconds (hh:mm:ss).\n *\n * @param {Date | string} date Date to get hours, minutes and seconds from\n * @returns {string} Local hours, minutes and seconds\n */\nexport function getHoursMinutesSeconds(date) {\n    var hours = padStart(getHours(date));\n    var minutes = padStart(getMinutes(date));\n    var seconds = padStart(getSeconds(date));\n    return \"\".concat(hours, \":\").concat(minutes, \":\").concat(seconds);\n}\n/**\n * Returns local month in ISO-like format (YYYY-MM).\n *\n * @param {Date} date Date to get month in ISO-like format from\n * @returns {string} Local month in ISO-like format\n */\nexport function getISOLocalMonth(date) {\n    var year = padStart(getYear(date), 4);\n    var month = padStart(getMonthHuman(date));\n    return \"\".concat(year, \"-\").concat(month);\n}\n/**\n * Returns local date in ISO-like format (YYYY-MM-DD).\n *\n * @param {Date} date Date to get date in ISO-like format from\n * @returns {string} Local date in ISO-like format\n */\nexport function getISOLocalDate(date) {\n    var year = padStart(getYear(date), 4);\n    var month = padStart(getMonthHuman(date));\n    var day = padStart(getDate(date));\n    return \"\".concat(year, \"-\").concat(month, \"-\").concat(day);\n}\n/**\n * Returns local date & time in ISO-like format (YYYY-MM-DDThh:mm:ss).\n *\n * @param {Date} date Date to get date & time in ISO-like format from\n * @returns {string} Local date & time in ISO-like format\n */\nexport function getISOLocalDateTime(date) {\n    return \"\".concat(getISOLocalDate(date), \"T\").concat(getHoursMinutesSeconds(date));\n}\n"]},"metadata":{},"sourceType":"module"}