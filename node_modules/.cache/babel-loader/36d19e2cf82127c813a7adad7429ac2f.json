{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Documents\\\\REACT\\\\curso-react-alura\\\\src\\\\App.js\";\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\nimport UserList from './UserList';\nimport UserPage from './UserPage';\nimport './App.css';\n\nconst App = () => {\n  const initialUsers = [{\n    id: 1,\n    name: 'VicBoça',\n    notes: []\n  }, {\n    id: 2,\n    name: 'ViniBoça',\n    notes: []\n  }, {\n    id: 3,\n    name: 'Manaia VVQueiro',\n    notes: []\n  }, {\n    id: 4,\n    name: 'Cazenrique',\n    notes: []\n  }, {\n    id: 5,\n    name: 'Lucena',\n    notes: []\n  }, {\n    id: 6,\n    name: 'Bréqui Silva',\n    notes: []\n  }];\n  const [users, setUsers] = useState(initialUsers);\n  useEffect(() => {\n    const savedUsers = localStorage.getItem('users');\n\n    if (savedUsers) {\n      setUsers(JSON.parse(savedUsers));\n    }\n  }, []);\n  useEffect(() => {\n    localStorage.setItem('users', JSON.stringify(users));\n  }, [users]);\n\n  const addNote = (userId, note) => {\n    const updatedUsers = users.map(user => user.id === userId ? { ...user,\n      notes: [...user.notes, note]\n    } : user);\n    setUsers(updatedUsers);\n  };\n\n  const removeNote = (userId, noteIndex) => {\n    const updatedUsers = users.map(user => user.id === userId ? { ...user,\n      notes: user.notes.filter((_, index) => index !== noteIndex)\n    } : user);\n    setUsers(updatedUsers);\n  };\n\n  return /*#__PURE__*/React.createElement(Router, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Routes, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    path: \"/\",\n    element: /*#__PURE__*/React.createElement(UserList, {\n      users: users,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 36\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/user/:id\",\n    element: /*#__PURE__*/React.createElement(UserPage, {\n      users: users,\n      addNote: addNote,\n      removeNote: removeNote,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 44\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }))));\n};\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Lenovo/Documents/REACT/curso-react-alura/src/App.js"],"names":["React","useState","useEffect","BrowserRouter","Router","Route","Routes","UserList","UserPage","App","initialUsers","id","name","notes","users","setUsers","savedUsers","localStorage","getItem","JSON","parse","setItem","stringify","addNote","userId","note","updatedUsers","map","user","removeNote","noteIndex","filter","_","index"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\nimport UserList from './UserList';\nimport UserPage from './UserPage';\nimport './App.css';\n\nconst App = () => {\n  const initialUsers = [\n    { id: 1, name: 'VicBoça', notes: [] },\n    { id: 2, name: 'ViniBoça', notes: [] },\n    { id: 3, name: 'Manaia VVQueiro', notes: [] },\n    { id: 4, name: 'Cazenrique', notes: [] },\n    { id: 5, name: 'Lucena', notes: [] },\n    { id: 6, name: 'Bréqui Silva', notes: [] }\n  ];\n\n  const [users, setUsers] = useState(initialUsers);\n\n  useEffect(() => {\n    const savedUsers = localStorage.getItem('users');\n    if (savedUsers) {\n      setUsers(JSON.parse(savedUsers));\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem('users', JSON.stringify(users));\n  }, [users]);\n\n  const addNote = (userId, note) => {\n    const updatedUsers = users.map(user =>\n      user.id === userId ? { ...user, notes: [...user.notes, note] } : user\n    );\n    setUsers(updatedUsers);\n  };\n\n  const removeNote = (userId, noteIndex) => {\n    const updatedUsers = users.map(user =>\n      user.id === userId ? { ...user, notes: user.notes.filter((_, index) => index !== noteIndex) } : user\n    );\n    setUsers(updatedUsers);\n  };\n\n  return (\n    <Router>\n      <div className=\"container\">\n        <Routes>\n          <Route path=\"/\" element={<UserList users={users} />} />\n          <Route path=\"/user/:id\" element={<UserPage users={users} addNote={addNote} removeNote={removeNote} />} />\n        </Routes>\n      </div>\n    </Router>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}