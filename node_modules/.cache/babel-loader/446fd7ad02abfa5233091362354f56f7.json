{"ast":null,"code":"import mem from 'mem';\n\nfunction isString(el) {\n  return typeof el === 'string';\n}\n\nfunction isUnique(el, index, arr) {\n  return arr.indexOf(el) === index;\n}\n\nfunction isAllLowerCase(el) {\n  return el.toLowerCase() === el;\n}\n\nfunction fixCommas(el) {\n  return el.indexOf(',') === -1 ? el : el.split(',');\n}\n\nfunction normalizeLocale(locale) {\n  if (!locale) {\n    return locale;\n  }\n\n  if (locale === 'C' || locale === 'posix' || locale === 'POSIX') {\n    return 'en-US';\n  } // If there's a dot (.) in the locale, it's likely in the format of \"en-US.UTF-8\", so we only take the first part\n\n\n  if (locale.indexOf('.') !== -1) {\n    var _a = locale.split('.')[0],\n        actualLocale = _a === void 0 ? '' : _a;\n    return normalizeLocale(actualLocale);\n  } // If there's an at sign (@) in the locale, it's likely in the format of \"en-US@posix\", so we only take the first part\n\n\n  if (locale.indexOf('@') !== -1) {\n    var _b = locale.split('@')[0],\n        actualLocale = _b === void 0 ? '' : _b;\n    return normalizeLocale(actualLocale);\n  } // If there's a dash (-) in the locale and it's not all lower case, it's already in the format of \"en-US\", so we return it\n\n\n  if (locale.indexOf('-') === -1 || !isAllLowerCase(locale)) {\n    return locale;\n  }\n\n  var _c = locale.split('-'),\n      splitEl1 = _c[0],\n      _d = _c[1],\n      splitEl2 = _d === void 0 ? '' : _d;\n\n  return \"\".concat(splitEl1, \"-\").concat(splitEl2.toUpperCase());\n}\n\nfunction getUserLocalesInternal(_a) {\n  var _b = _a === void 0 ? {} : _a,\n      _c = _b.useFallbackLocale,\n      useFallbackLocale = _c === void 0 ? true : _c,\n      _d = _b.fallbackLocale,\n      fallbackLocale = _d === void 0 ? 'en-US' : _d;\n\n  var languageList = [];\n\n  if (typeof navigator !== 'undefined') {\n    var rawLanguages = navigator.languages || [];\n    var languages = [];\n\n    for (var _i = 0, rawLanguages_1 = rawLanguages; _i < rawLanguages_1.length; _i++) {\n      var rawLanguagesItem = rawLanguages_1[_i];\n      languages = languages.concat(fixCommas(rawLanguagesItem));\n    }\n\n    var rawLanguage = navigator.language;\n    var language = rawLanguage ? fixCommas(rawLanguage) : rawLanguage;\n    languageList = languageList.concat(languages, language);\n  }\n\n  if (useFallbackLocale) {\n    languageList.push(fallbackLocale);\n  }\n\n  return languageList.filter(isString).map(normalizeLocale).filter(isUnique);\n}\n\nexport var getUserLocales = mem(getUserLocalesInternal, {\n  cacheKey: JSON.stringify\n});\n\nfunction getUserLocaleInternal(options) {\n  return getUserLocales(options)[0] || null;\n}\n\nexport var getUserLocale = mem(getUserLocaleInternal, {\n  cacheKey: JSON.stringify\n});\nexport default getUserLocale;","map":{"version":3,"sources":["C:/Users/Lenovo/Documents/REACT/curso-react-alura/node_modules/get-user-locale/dist/esm/index.js"],"names":["mem","isString","el","isUnique","index","arr","indexOf","isAllLowerCase","toLowerCase","fixCommas","split","normalizeLocale","locale","_a","actualLocale","_b","_c","splitEl1","_d","splitEl2","concat","toUpperCase","getUserLocalesInternal","useFallbackLocale","fallbackLocale","languageList","navigator","rawLanguages","languages","_i","rawLanguages_1","length","rawLanguagesItem","rawLanguage","language","push","filter","map","getUserLocales","cacheKey","JSON","stringify","getUserLocaleInternal","options","getUserLocale"],"mappings":"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","sourcesContent":["import mem from 'mem';\nfunction isString(el) {\n    return typeof el === 'string';\n}\nfunction isUnique(el, index, arr) {\n    return arr.indexOf(el) === index;\n}\nfunction isAllLowerCase(el) {\n    return el.toLowerCase() === el;\n}\nfunction fixCommas(el) {\n    return el.indexOf(',') === -1 ? el : el.split(',');\n}\nfunction normalizeLocale(locale) {\n    if (!locale) {\n        return locale;\n    }\n    if (locale === 'C' || locale === 'posix' || locale === 'POSIX') {\n        return 'en-US';\n    }\n    // If there's a dot (.) in the locale, it's likely in the format of \"en-US.UTF-8\", so we only take the first part\n    if (locale.indexOf('.') !== -1) {\n        var _a = locale.split('.')[0], actualLocale = _a === void 0 ? '' : _a;\n        return normalizeLocale(actualLocale);\n    }\n    // If there's an at sign (@) in the locale, it's likely in the format of \"en-US@posix\", so we only take the first part\n    if (locale.indexOf('@') !== -1) {\n        var _b = locale.split('@')[0], actualLocale = _b === void 0 ? '' : _b;\n        return normalizeLocale(actualLocale);\n    }\n    // If there's a dash (-) in the locale and it's not all lower case, it's already in the format of \"en-US\", so we return it\n    if (locale.indexOf('-') === -1 || !isAllLowerCase(locale)) {\n        return locale;\n    }\n    var _c = locale.split('-'), splitEl1 = _c[0], _d = _c[1], splitEl2 = _d === void 0 ? '' : _d;\n    return \"\".concat(splitEl1, \"-\").concat(splitEl2.toUpperCase());\n}\nfunction getUserLocalesInternal(_a) {\n    var _b = _a === void 0 ? {} : _a, _c = _b.useFallbackLocale, useFallbackLocale = _c === void 0 ? true : _c, _d = _b.fallbackLocale, fallbackLocale = _d === void 0 ? 'en-US' : _d;\n    var languageList = [];\n    if (typeof navigator !== 'undefined') {\n        var rawLanguages = navigator.languages || [];\n        var languages = [];\n        for (var _i = 0, rawLanguages_1 = rawLanguages; _i < rawLanguages_1.length; _i++) {\n            var rawLanguagesItem = rawLanguages_1[_i];\n            languages = languages.concat(fixCommas(rawLanguagesItem));\n        }\n        var rawLanguage = navigator.language;\n        var language = rawLanguage ? fixCommas(rawLanguage) : rawLanguage;\n        languageList = languageList.concat(languages, language);\n    }\n    if (useFallbackLocale) {\n        languageList.push(fallbackLocale);\n    }\n    return languageList.filter(isString).map(normalizeLocale).filter(isUnique);\n}\nexport var getUserLocales = mem(getUserLocalesInternal, { cacheKey: JSON.stringify });\nfunction getUserLocaleInternal(options) {\n    return getUserLocales(options)[0] || null;\n}\nexport var getUserLocale = mem(getUserLocaleInternal, { cacheKey: JSON.stringify });\nexport default getUserLocale;\n"]},"metadata":{},"sourceType":"module"}