{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Documents\\\\REACT\\\\curso-react-alura\\\\src\\\\App.js\";\nimport React, { useState } from 'react';\n\nconst App = () => {\n  // Estado inicial com quatro times\n  const [teams, setTeams] = useState({\n    team1: 'Time 1',\n    team2: 'Time 2',\n    team3: 'Time 3',\n    team4: 'Time 4'\n  }); // Estado para os resultados das semifinais e da final\n\n  const [results, setResults] = useState({\n    semifinal1: null,\n    semifinal2: null,\n    final: null\n  }); // Função para simular o resultado de uma partida\n\n  const simulateMatch = (teamA, teamB) => {\n    // Escolhe aleatoriamente o vencedor\n    return Math.random() > 0.5 ? teamA : teamB;\n  }; // Função para executar as semifinais e a final\n\n\n  const runTournament = () => {\n    const {\n      team1,\n      team2,\n      team3,\n      team4\n    } = teams; // Simular semifinal 1\n\n    const semifinal1Winner = simulateMatch(team1, team2); // Simular semifinal 2\n\n    const semifinal2Winner = simulateMatch(team3, team4); // Simular final\n\n    const finalWinner = simulateMatch(semifinal1Winner, semifinal2Winner);\n    setResults({\n      semifinal1: semifinal1Winner,\n      semifinal2: semifinal2Winner,\n      final: finalWinner\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, \"Mata-Mata\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, \"Times:\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, teams.team1, \" vs \", teams.team2), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, teams.team3, \" vs \", teams.team4)), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: runTournament,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, \"Rodar Torneio\"), results.semifinal1 && results.semifinal2 && results.final && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }, \"Resultados:\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }, \"Semifinal 1: \", results.semifinal1), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }, \"Semifinal 2: \", results.semifinal2), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }, \"Final: \", results.final)));\n};\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Lenovo/Documents/REACT/curso-react-alura/src/App.js"],"names":["React","useState","App","teams","setTeams","team1","team2","team3","team4","results","setResults","semifinal1","semifinal2","final","simulateMatch","teamA","teamB","Math","random","runTournament","semifinal1Winner","semifinal2Winner","finalWinner"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAChB;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBH,QAAQ,CAAC;AACjCI,IAAAA,KAAK,EAAE,QAD0B;AAEjCC,IAAAA,KAAK,EAAE,QAF0B;AAGjCC,IAAAA,KAAK,EAAE,QAH0B;AAIjCC,IAAAA,KAAK,EAAE;AAJ0B,GAAD,CAAlC,CAFgB,CAShB;;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC;AACrCU,IAAAA,UAAU,EAAE,IADyB;AAErCC,IAAAA,UAAU,EAAE,IAFyB;AAGrCC,IAAAA,KAAK,EAAE;AAH8B,GAAD,CAAtC,CAVgB,CAgBhB;;AACA,QAAMC,aAAa,GAAG,CAACC,KAAD,EAAQC,KAAR,KAAkB;AACtC;AACA,WAAOC,IAAI,CAACC,MAAL,KAAgB,GAAhB,GAAsBH,KAAtB,GAA8BC,KAArC;AACD,GAHD,CAjBgB,CAsBhB;;;AACA,QAAMG,aAAa,GAAG,MAAM;AAC1B,UAAM;AAAEd,MAAAA,KAAF;AAASC,MAAAA,KAAT;AAAgBC,MAAAA,KAAhB;AAAuBC,MAAAA;AAAvB,QAAiCL,KAAvC,CAD0B,CAG1B;;AACA,UAAMiB,gBAAgB,GAAGN,aAAa,CAACT,KAAD,EAAQC,KAAR,CAAtC,CAJ0B,CAK1B;;AACA,UAAMe,gBAAgB,GAAGP,aAAa,CAACP,KAAD,EAAQC,KAAR,CAAtC,CAN0B,CAO1B;;AACA,UAAMc,WAAW,GAAGR,aAAa,CAACM,gBAAD,EAAmBC,gBAAnB,CAAjC;AAEAX,IAAAA,UAAU,CAAC;AACTC,MAAAA,UAAU,EAAES,gBADH;AAETR,MAAAA,UAAU,EAAES,gBAFH;AAGTR,MAAAA,KAAK,EAAES;AAHE,KAAD,CAAV;AAKD,GAfD;;AAiBA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAInB,KAAK,CAACE,KAAV,UAAqBF,KAAK,CAACG,KAA3B,CAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIH,KAAK,CAACI,KAAV,UAAqBJ,KAAK,CAACK,KAA3B,CAHF,CAFF,eAOE;AAAQ,IAAA,OAAO,EAAEW,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAPF,EAQGV,OAAO,CAACE,UAAR,IAAsBF,OAAO,CAACG,UAA9B,IAA4CH,OAAO,CAACI,KAApD,iBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAiBJ,OAAO,CAACE,UAAzB,CAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAiBF,OAAO,CAACG,UAAzB,CAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAYH,OAAO,CAACI,KAApB,CAJF,CATJ,CADF;AAmBD,CA3DD;;AA6DA,eAAeX,GAAf","sourcesContent":["import React, { useState } from 'react';\n\nconst App = () => {\n  // Estado inicial com quatro times\n  const [teams, setTeams] = useState({\n    team1: 'Time 1',\n    team2: 'Time 2',\n    team3: 'Time 3',\n    team4: 'Time 4'\n  });\n\n  // Estado para os resultados das semifinais e da final\n  const [results, setResults] = useState({\n    semifinal1: null,\n    semifinal2: null,\n    final: null\n  });\n\n  // Função para simular o resultado de uma partida\n  const simulateMatch = (teamA, teamB) => {\n    // Escolhe aleatoriamente o vencedor\n    return Math.random() > 0.5 ? teamA : teamB;\n  };\n\n  // Função para executar as semifinais e a final\n  const runTournament = () => {\n    const { team1, team2, team3, team4 } = teams;\n\n    // Simular semifinal 1\n    const semifinal1Winner = simulateMatch(team1, team2);\n    // Simular semifinal 2\n    const semifinal2Winner = simulateMatch(team3, team4);\n    // Simular final\n    const finalWinner = simulateMatch(semifinal1Winner, semifinal2Winner);\n\n    setResults({\n      semifinal1: semifinal1Winner,\n      semifinal2: semifinal2Winner,\n      final: finalWinner\n    });\n  };\n\n  return (\n    <div>\n      <h1>Mata-Mata</h1>\n      <div>\n        <h2>Times:</h2>\n        <p>{teams.team1} vs {teams.team2}</p>\n        <p>{teams.team3} vs {teams.team4}</p>\n      </div>\n      <button onClick={runTournament}>Rodar Torneio</button>\n      {results.semifinal1 && results.semifinal2 && results.final && (\n        <div>\n          <h2>Resultados:</h2>\n          <p>Semifinal 1: {results.semifinal1}</p>\n          <p>Semifinal 2: {results.semifinal2}</p>\n          <h3>Final: {results.final}</h3>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}