{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Documents\\\\REACT\\\\curso-react-alura\\\\src\\\\teste_V1.js\";\nimport React, { useState } from 'react';\nimport './App.css'; // Defina os times e os jogos\n\nconst initialTeams = [{\n  id: 1,\n  name: 'Time 1'\n}, {\n  id: 2,\n  name: 'Time 2'\n}, {\n  id: 3,\n  name: 'Time 3'\n}, {\n  id: 4,\n  name: 'Time 4'\n}];\n\nconst generateMatches = teams => {\n  const matches = [];\n\n  for (let i = 0; i < teams.length; i += 2) {\n    matches.push({\n      team1: teams[i],\n      team2: teams[i + 1]\n    });\n  }\n\n  return matches;\n};\n\nconst App = () => {\n  const [teams, setTeams] = useState(initialTeams);\n  const [matches, setMatches] = useState(generateMatches(initialTeams));\n  const [round, setRound] = useState(1);\n\n  const handleResult = (team1Id, team2Id, winnerId) => {\n    const winner = teams.find(t => t.id === winnerId);\n    const loser = teams.find(t => t.id !== winnerId && (t.id === team1Id || t.id === team2Id)); // Atualize os times\n\n    const updatedTeams = teams.filter(t => t.id === winnerId); // Atualize os jogos\n\n    const nextRoundTeams = [...updatedTeams];\n    const nextRoundMatches = generateMatches(nextRoundTeams);\n    setTeams(updatedTeams);\n    setMatches(nextRoundMatches);\n    setRound(round + 1);\n  };\n\n  const renderMatches = () => {\n    return matches.map((match, index) => /*#__PURE__*/React.createElement(\"div\", {\n      key: index,\n      className: \"match\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }\n    }, match.team1.name, \" vs \", match.team2.name), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => handleResult(match.team1.id, match.team2.id, match.team1.id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }\n    }, \"Time 1 Wins\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => handleResult(match.team1.id, match.team2.id, match.team2.id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }\n    }, \"Time 2 Wins\")));\n  };\n\n  const renderChampion = () => {\n    if (teams.length === 1) {\n      return /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 14\n        }\n      }, \"Campe\\xE3o: \", teams[0].name);\n    }\n\n    return null;\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, \"Campeonato Mata-Mata\"), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, \"Rodada \", round), renderMatches(), renderChampion());\n};\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Lenovo/Documents/REACT/curso-react-alura/src/teste_V1.js"],"names":["React","useState","initialTeams","id","name","generateMatches","teams","matches","i","length","push","team1","team2","App","setTeams","setMatches","round","setRound","handleResult","team1Id","team2Id","winnerId","winner","find","t","loser","updatedTeams","filter","nextRoundTeams","nextRoundMatches","renderMatches","map","match","index","renderChampion"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport './App.css';\r\n\r\n// Defina os times e os jogos\r\nconst initialTeams = [\r\n  { id: 1, name: 'Time 1' },\r\n  { id: 2, name: 'Time 2' },\r\n  { id: 3, name: 'Time 3' },\r\n  { id: 4, name: 'Time 4' },\r\n];\r\n\r\nconst generateMatches = (teams) => {\r\n  const matches = [];\r\n  for (let i = 0; i < teams.length; i += 2) {\r\n    matches.push({ team1: teams[i], team2: teams[i + 1] });\r\n  }\r\n  return matches;\r\n};\r\n\r\nconst App = () => {\r\n  const [teams, setTeams] = useState(initialTeams);\r\n  const [matches, setMatches] = useState(generateMatches(initialTeams));\r\n  const [round, setRound] = useState(1);\r\n\r\n  const handleResult = (team1Id, team2Id, winnerId) => {\r\n    const winner = teams.find(t => t.id === winnerId);\r\n    const loser = teams.find(t => t.id !== winnerId && (t.id === team1Id || t.id === team2Id));\r\n\r\n    // Atualize os times\r\n    const updatedTeams = teams.filter(t => t.id === winnerId);\r\n\r\n    // Atualize os jogos\r\n    const nextRoundTeams = [...updatedTeams];\r\n    const nextRoundMatches = generateMatches(nextRoundTeams);\r\n\r\n    setTeams(updatedTeams);\r\n    setMatches(nextRoundMatches);\r\n    setRound(round + 1);\r\n  };\r\n\r\n  const renderMatches = () => {\r\n    return matches.map((match, index) => (\r\n      <div key={index} className=\"match\">\r\n        <span>{match.team1.name} vs {match.team2.name}</span>\r\n        <button onClick={() => handleResult(match.team1.id, match.team2.id, match.team1.id)}>Time 1 Wins</button>\r\n        <button onClick={() => handleResult(match.team1.id, match.team2.id, match.team2.id)}>Time 2 Wins</button>\r\n      </div>\r\n    ));\r\n  };\r\n\r\n  const renderChampion = () => {\r\n    if (teams.length === 1) {\r\n      return <h1>Campe√£o: {teams[0].name}</h1>;\r\n    }\r\n    return null;\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Campeonato Mata-Mata</h1>\r\n      <h2>Rodada {round}</h2>\r\n      {renderMatches()}\r\n      {renderChampion()}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}